#pragma warning disable CS0109 // Member does not hide an inherited member; new keyword is not required
using System;
using NullGuard;
using System.Linq;
using System.Linq.Expressions;
using System.Collections.Generic;
using Gremlin.Net.Process.Traversal;
using LanguageExt;

namespace ExRam.Gremlinq.Core
{
    partial class GremlinQuery<TElement, TOutVertex, TInVertex, TPropertyValue, TMeta, TFoldedQuery>
    {
        IGremlinQuery<(T1, T2)> IGremlinQuery.Select<T1, T2>(StepLabel<T1> label1, StepLabel<T2> label2) => Select<(T1, T2)>(label1, label2);
        IGremlinQuery<(T1, T2, T3)> IGremlinQuery.Select<T1, T2, T3>(StepLabel<T1> label1, StepLabel<T2> label2, StepLabel<T3> label3) => Select<(T1, T2, T3)>(label1, label2, label3);
        IGremlinQuery<(T1, T2, T3, T4)> IGremlinQuery.Select<T1, T2, T3, T4>(StepLabel<T1> label1, StepLabel<T2> label2, StepLabel<T3> label3, StepLabel<T4> label4) => Select<(T1, T2, T3, T4)>(label1, label2, label3, label4);
        IGremlinQuery<(T1, T2, T3, T4, T5)> IGremlinQuery.Select<T1, T2, T3, T4, T5>(StepLabel<T1> label1, StepLabel<T2> label2, StepLabel<T3> label3, StepLabel<T4> label4, StepLabel<T5> label5) => Select<(T1, T2, T3, T4, T5)>(label1, label2, label3, label4, label5);
        IGremlinQuery<(T1, T2, T3, T4, T5, T6)> IGremlinQuery.Select<T1, T2, T3, T4, T5, T6>(StepLabel<T1> label1, StepLabel<T2> label2, StepLabel<T3> label3, StepLabel<T4> label4, StepLabel<T5> label5, StepLabel<T6> label6) => Select<(T1, T2, T3, T4, T5, T6)>(label1, label2, label3, label4, label5, label6);
        IGremlinQuery<(T1, T2, T3, T4, T5, T6, T7)> IGremlinQuery.Select<T1, T2, T3, T4, T5, T6, T7>(StepLabel<T1> label1, StepLabel<T2> label2, StepLabel<T3> label3, StepLabel<T4> label4, StepLabel<T5> label5, StepLabel<T6> label6, StepLabel<T7> label7) => Select<(T1, T2, T3, T4, T5, T6, T7)>(label1, label2, label3, label4, label5, label6, label7);
        IGremlinQuery<(T1, T2, T3, T4, T5, T6, T7, T8)> IGremlinQuery.Select<T1, T2, T3, T4, T5, T6, T7, T8>(StepLabel<T1> label1, StepLabel<T2> label2, StepLabel<T3> label3, StepLabel<T4> label4, StepLabel<T5> label5, StepLabel<T6> label6, StepLabel<T7> label7, StepLabel<T8> label8) => Select<(T1, T2, T3, T4, T5, T6, T7, T8)>(label1, label2, label3, label4, label5, label6, label7, label8);
        IGremlinQuery<(T1, T2, T3, T4, T5, T6, T7, T8, T9)> IGremlinQuery.Select<T1, T2, T3, T4, T5, T6, T7, T8, T9>(StepLabel<T1> label1, StepLabel<T2> label2, StepLabel<T3> label3, StepLabel<T4> label4, StepLabel<T5> label5, StepLabel<T6> label6, StepLabel<T7> label7, StepLabel<T8> label8, StepLabel<T9> label9) => Select<(T1, T2, T3, T4, T5, T6, T7, T8, T9)>(label1, label2, label3, label4, label5, label6, label7, label8, label9);
        IGremlinQuery<(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)> IGremlinQuery.Select<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(StepLabel<T1> label1, StepLabel<T2> label2, StepLabel<T3> label3, StepLabel<T4> label4, StepLabel<T5> label5, StepLabel<T6> label6, StepLabel<T7> label7, StepLabel<T8> label8, StepLabel<T9> label9, StepLabel<T10> label10) => Select<(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)>(label1, label2, label3, label4, label5, label6, label7, label8, label9, label10);
        IGremlinQuery<(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)> IGremlinQuery.Select<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(StepLabel<T1> label1, StepLabel<T2> label2, StepLabel<T3> label3, StepLabel<T4> label4, StepLabel<T5> label5, StepLabel<T6> label6, StepLabel<T7> label7, StepLabel<T8> label8, StepLabel<T9> label9, StepLabel<T10> label10, StepLabel<T11> label11) => Select<(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)>(label1, label2, label3, label4, label5, label6, label7, label8, label9, label10, label11);
        IGremlinQuery<(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)> IGremlinQuery.Select<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(StepLabel<T1> label1, StepLabel<T2> label2, StepLabel<T3> label3, StepLabel<T4> label4, StepLabel<T5> label5, StepLabel<T6> label6, StepLabel<T7> label7, StepLabel<T8> label8, StepLabel<T9> label9, StepLabel<T10> label10, StepLabel<T11> label11, StepLabel<T12> label12) => Select<(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)>(label1, label2, label3, label4, label5, label6, label7, label8, label9, label10, label11, label12);
        IGremlinQuery<(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)> IGremlinQuery.Select<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(StepLabel<T1> label1, StepLabel<T2> label2, StepLabel<T3> label3, StepLabel<T4> label4, StepLabel<T5> label5, StepLabel<T6> label6, StepLabel<T7> label7, StepLabel<T8> label8, StepLabel<T9> label9, StepLabel<T10> label10, StepLabel<T11> label11, StepLabel<T12> label12, StepLabel<T13> label13) => Select<(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)>(label1, label2, label3, label4, label5, label6, label7, label8, label9, label10, label11, label12, label13);
        IGremlinQuery<(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)> IGremlinQuery.Select<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(StepLabel<T1> label1, StepLabel<T2> label2, StepLabel<T3> label3, StepLabel<T4> label4, StepLabel<T5> label5, StepLabel<T6> label6, StepLabel<T7> label7, StepLabel<T8> label8, StepLabel<T9> label9, StepLabel<T10> label10, StepLabel<T11> label11, StepLabel<T12> label12, StepLabel<T13> label13, StepLabel<T14> label14) => Select<(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)>(label1, label2, label3, label4, label5, label6, label7, label8, label9, label10, label11, label12, label13, label14);
        IGremlinQuery<(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)> IGremlinQuery.Select<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(StepLabel<T1> label1, StepLabel<T2> label2, StepLabel<T3> label3, StepLabel<T4> label4, StepLabel<T5> label5, StepLabel<T6> label6, StepLabel<T7> label7, StepLabel<T8> label8, StepLabel<T9> label9, StepLabel<T10> label10, StepLabel<T11> label11, StepLabel<T12> label12, StepLabel<T13> label13, StepLabel<T14> label14, StepLabel<T15> label15) => Select<(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)>(label1, label2, label3, label4, label5, label6, label7, label8, label9, label10, label11, label12, label13, label14, label15);
        IGremlinQuery<(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)> IGremlinQuery.Select<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(StepLabel<T1> label1, StepLabel<T2> label2, StepLabel<T3> label3, StepLabel<T4> label4, StepLabel<T5> label5, StepLabel<T6> label6, StepLabel<T7> label7, StepLabel<T8> label8, StepLabel<T9> label9, StepLabel<T10> label10, StepLabel<T11> label11, StepLabel<T12> label12, StepLabel<T13> label13, StepLabel<T14> label14, StepLabel<T15> label15, StepLabel<T16> label16) => Select<(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)>(label1, label2, label3, label4, label5, label6, label7, label8, label9, label10, label11, label12, label13, label14, label15, label16);


        IGremlinQuery IGremlinQuery.And(params Func<IGremlinQuery, IGremlinQuery>[] andTraversals) => And(andTraversals);
        IGremlinQuery IGremlinQuery.As(params StepLabel[] stepLabels) => As(stepLabels);

        IGremlinQuery IGremlinQuery.Barrier() => Barrier();

        TTargetQuery IGremlinQuery.Choose<TTargetQuery>(Func<IGremlinQuery, IGremlinQuery> traversalPredicate, Func<IGremlinQuery, TTargetQuery> trueChoice, Func<IGremlinQuery, TTargetQuery> falseChoice) => Choose(traversalPredicate, trueChoice, falseChoice);
        TTargetQuery IGremlinQuery.Choose<TTargetQuery>(Func<IGremlinQuery, IGremlinQuery> traversalPredicate, Func<IGremlinQuery, TTargetQuery> trueChoice) => Choose(traversalPredicate, trueChoice);
        TTargetQuery IGremlinQuery.Choose<TTargetQuery>(Func<IChooseBuilder<IGremlinQuery>, IChooseBuilderWithCaseOrDefault<TTargetQuery>> continuation) => Choose<TTargetQuery>(continuation);

        TTargetQuery IGremlinQuery.Coalesce<TTargetQuery>(params Func<IGremlinQuery, TTargetQuery>[] traversals) => Coalesce(traversals);

        IGremlinQuery IGremlinQuery.Dedup() => Dedup();
        IGremlinQuery IGremlinQuery.Drop() => Drop();

        IGremlinQuery IGremlinQuery.Emit() => Emit();

        IGremlinQuery IGremlinQuery.Where(string lambda) => Where(lambda);

        TTargetQuery IGremlinQuery.FlatMap<TTargetQuery>(Func<IGremlinQuery, TTargetQuery> mapping) => FlatMap(mapping);

        IGremlinQuery IGremlinQuery.Identity() => Identity();

        IGremlinQuery IGremlinQuery.Limit(long count) => Limit(count);
        IGremlinQuery IGremlinQuery.LimitLocal(long count) => LimitLocal(count);

        TTargetQuery IGremlinQuery.Local<TTargetQuery>(Func<IGremlinQuery , TTargetQuery> localTraversal) => Local(localTraversal);

        TTargetQuery IGremlinQuery.Map<TTargetQuery>(Func<IGremlinQuery, TTargetQuery> mapping) => Map(mapping);
        
        IGremlinQuery IGremlinQuery.Not(Func<IGremlinQuery, IGremlinQuery> notTraversal) => Not(notTraversal);
        IGremlinQuery IGremlinQuery.None() => None();

        TTargetQuery IGremlinQuery.Optional<TTargetQuery>(Func<IGremlinQuery, TTargetQuery> optionalTraversal) => Optional(optionalTraversal);
        IGremlinQuery IGremlinQuery.Or(params Func<IGremlinQuery, IGremlinQuery>[] orTraversals) => Or(orTraversals);

        IGremlinQuery<(TElement1, TElement2)> IGremlinQuery.Project<TElement1, TElement2>(Func<IGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IGremlinQuery, IGremlinQuery<TElement2>> projection2) => Project<(TElement1, TElement2)>(projection1, projection2);
        IGremlinQuery<(TElement1, TElement2, TElement3)> IGremlinQuery.Project<TElement1, TElement2, TElement3>(Func<IGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IGremlinQuery, IGremlinQuery<TElement3>> projection3) => Project<(TElement1, TElement2, TElement3)>(projection1, projection2, projection3);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4)> IGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4>(Func<IGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IGremlinQuery, IGremlinQuery<TElement4>> projection4) => Project<(TElement1, TElement2, TElement3, TElement4)>(projection1, projection2, projection3, projection4);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5)> IGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4, TElement5>(Func<IGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IGremlinQuery, IGremlinQuery<TElement4>> projection4, Func<IGremlinQuery, IGremlinQuery<TElement5>> projection5) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5)>(projection1, projection2, projection3, projection4, projection5);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6)> IGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6>(Func<IGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IGremlinQuery, IGremlinQuery<TElement4>> projection4, Func<IGremlinQuery, IGremlinQuery<TElement5>> projection5, Func<IGremlinQuery, IGremlinQuery<TElement6>> projection6) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6)>(projection1, projection2, projection3, projection4, projection5, projection6);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7)> IGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7>(Func<IGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IGremlinQuery, IGremlinQuery<TElement4>> projection4, Func<IGremlinQuery, IGremlinQuery<TElement5>> projection5, Func<IGremlinQuery, IGremlinQuery<TElement6>> projection6, Func<IGremlinQuery, IGremlinQuery<TElement7>> projection7) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8)> IGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8>(Func<IGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IGremlinQuery, IGremlinQuery<TElement4>> projection4, Func<IGremlinQuery, IGremlinQuery<TElement5>> projection5, Func<IGremlinQuery, IGremlinQuery<TElement6>> projection6, Func<IGremlinQuery, IGremlinQuery<TElement7>> projection7, Func<IGremlinQuery, IGremlinQuery<TElement8>> projection8) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9)> IGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9>(Func<IGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IGremlinQuery, IGremlinQuery<TElement4>> projection4, Func<IGremlinQuery, IGremlinQuery<TElement5>> projection5, Func<IGremlinQuery, IGremlinQuery<TElement6>> projection6, Func<IGremlinQuery, IGremlinQuery<TElement7>> projection7, Func<IGremlinQuery, IGremlinQuery<TElement8>> projection8, Func<IGremlinQuery, IGremlinQuery<TElement9>> projection9) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10)> IGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10>(Func<IGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IGremlinQuery, IGremlinQuery<TElement4>> projection4, Func<IGremlinQuery, IGremlinQuery<TElement5>> projection5, Func<IGremlinQuery, IGremlinQuery<TElement6>> projection6, Func<IGremlinQuery, IGremlinQuery<TElement7>> projection7, Func<IGremlinQuery, IGremlinQuery<TElement8>> projection8, Func<IGremlinQuery, IGremlinQuery<TElement9>> projection9, Func<IGremlinQuery, IGremlinQuery<TElement10>> projection10) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11)> IGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11>(Func<IGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IGremlinQuery, IGremlinQuery<TElement4>> projection4, Func<IGremlinQuery, IGremlinQuery<TElement5>> projection5, Func<IGremlinQuery, IGremlinQuery<TElement6>> projection6, Func<IGremlinQuery, IGremlinQuery<TElement7>> projection7, Func<IGremlinQuery, IGremlinQuery<TElement8>> projection8, Func<IGremlinQuery, IGremlinQuery<TElement9>> projection9, Func<IGremlinQuery, IGremlinQuery<TElement10>> projection10, Func<IGremlinQuery, IGremlinQuery<TElement11>> projection11) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12)> IGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12>(Func<IGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IGremlinQuery, IGremlinQuery<TElement4>> projection4, Func<IGremlinQuery, IGremlinQuery<TElement5>> projection5, Func<IGremlinQuery, IGremlinQuery<TElement6>> projection6, Func<IGremlinQuery, IGremlinQuery<TElement7>> projection7, Func<IGremlinQuery, IGremlinQuery<TElement8>> projection8, Func<IGremlinQuery, IGremlinQuery<TElement9>> projection9, Func<IGremlinQuery, IGremlinQuery<TElement10>> projection10, Func<IGremlinQuery, IGremlinQuery<TElement11>> projection11, Func<IGremlinQuery, IGremlinQuery<TElement12>> projection12) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13)> IGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13>(Func<IGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IGremlinQuery, IGremlinQuery<TElement4>> projection4, Func<IGremlinQuery, IGremlinQuery<TElement5>> projection5, Func<IGremlinQuery, IGremlinQuery<TElement6>> projection6, Func<IGremlinQuery, IGremlinQuery<TElement7>> projection7, Func<IGremlinQuery, IGremlinQuery<TElement8>> projection8, Func<IGremlinQuery, IGremlinQuery<TElement9>> projection9, Func<IGremlinQuery, IGremlinQuery<TElement10>> projection10, Func<IGremlinQuery, IGremlinQuery<TElement11>> projection11, Func<IGremlinQuery, IGremlinQuery<TElement12>> projection12, Func<IGremlinQuery, IGremlinQuery<TElement13>> projection13) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14)> IGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14>(Func<IGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IGremlinQuery, IGremlinQuery<TElement4>> projection4, Func<IGremlinQuery, IGremlinQuery<TElement5>> projection5, Func<IGremlinQuery, IGremlinQuery<TElement6>> projection6, Func<IGremlinQuery, IGremlinQuery<TElement7>> projection7, Func<IGremlinQuery, IGremlinQuery<TElement8>> projection8, Func<IGremlinQuery, IGremlinQuery<TElement9>> projection9, Func<IGremlinQuery, IGremlinQuery<TElement10>> projection10, Func<IGremlinQuery, IGremlinQuery<TElement11>> projection11, Func<IGremlinQuery, IGremlinQuery<TElement12>> projection12, Func<IGremlinQuery, IGremlinQuery<TElement13>> projection13, Func<IGremlinQuery, IGremlinQuery<TElement14>> projection14) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15)> IGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15>(Func<IGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IGremlinQuery, IGremlinQuery<TElement4>> projection4, Func<IGremlinQuery, IGremlinQuery<TElement5>> projection5, Func<IGremlinQuery, IGremlinQuery<TElement6>> projection6, Func<IGremlinQuery, IGremlinQuery<TElement7>> projection7, Func<IGremlinQuery, IGremlinQuery<TElement8>> projection8, Func<IGremlinQuery, IGremlinQuery<TElement9>> projection9, Func<IGremlinQuery, IGremlinQuery<TElement10>> projection10, Func<IGremlinQuery, IGremlinQuery<TElement11>> projection11, Func<IGremlinQuery, IGremlinQuery<TElement12>> projection12, Func<IGremlinQuery, IGremlinQuery<TElement13>> projection13, Func<IGremlinQuery, IGremlinQuery<TElement14>> projection14, Func<IGremlinQuery, IGremlinQuery<TElement15>> projection15) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15, TElement16)> IGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15, TElement16>(Func<IGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IGremlinQuery, IGremlinQuery<TElement4>> projection4, Func<IGremlinQuery, IGremlinQuery<TElement5>> projection5, Func<IGremlinQuery, IGremlinQuery<TElement6>> projection6, Func<IGremlinQuery, IGremlinQuery<TElement7>> projection7, Func<IGremlinQuery, IGremlinQuery<TElement8>> projection8, Func<IGremlinQuery, IGremlinQuery<TElement9>> projection9, Func<IGremlinQuery, IGremlinQuery<TElement10>> projection10, Func<IGremlinQuery, IGremlinQuery<TElement11>> projection11, Func<IGremlinQuery, IGremlinQuery<TElement12>> projection12, Func<IGremlinQuery, IGremlinQuery<TElement13>> projection13, Func<IGremlinQuery, IGremlinQuery<TElement14>> projection14, Func<IGremlinQuery, IGremlinQuery<TElement15>> projection15, Func<IGremlinQuery, IGremlinQuery<TElement16>> projection16) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15, TElement16)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15, projection16);

        IGremlinQuery IGremlinQuery.Project(Func<IGremlinQuery, IGremlinQuery> projection1, Func<IGremlinQuery, IGremlinQuery> projection2) => Project<Unit>(projection1, projection2);
        IGremlinQuery IGremlinQuery.Project(Func<IGremlinQuery, IGremlinQuery> projection1, Func<IGremlinQuery, IGremlinQuery> projection2, Func<IGremlinQuery, IGremlinQuery> projection3) => Project<Unit>(projection1, projection2, projection3);
        IGremlinQuery IGremlinQuery.Project(Func<IGremlinQuery, IGremlinQuery> projection1, Func<IGremlinQuery, IGremlinQuery> projection2, Func<IGremlinQuery, IGremlinQuery> projection3, Func<IGremlinQuery, IGremlinQuery> projection4) => Project<Unit>(projection1, projection2, projection3, projection4);
        IGremlinQuery IGremlinQuery.Project(Func<IGremlinQuery, IGremlinQuery> projection1, Func<IGremlinQuery, IGremlinQuery> projection2, Func<IGremlinQuery, IGremlinQuery> projection3, Func<IGremlinQuery, IGremlinQuery> projection4, Func<IGremlinQuery, IGremlinQuery> projection5) => Project<Unit>(projection1, projection2, projection3, projection4, projection5);
        IGremlinQuery IGremlinQuery.Project(Func<IGremlinQuery, IGremlinQuery> projection1, Func<IGremlinQuery, IGremlinQuery> projection2, Func<IGremlinQuery, IGremlinQuery> projection3, Func<IGremlinQuery, IGremlinQuery> projection4, Func<IGremlinQuery, IGremlinQuery> projection5, Func<IGremlinQuery, IGremlinQuery> projection6) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6);
        IGremlinQuery IGremlinQuery.Project(Func<IGremlinQuery, IGremlinQuery> projection1, Func<IGremlinQuery, IGremlinQuery> projection2, Func<IGremlinQuery, IGremlinQuery> projection3, Func<IGremlinQuery, IGremlinQuery> projection4, Func<IGremlinQuery, IGremlinQuery> projection5, Func<IGremlinQuery, IGremlinQuery> projection6, Func<IGremlinQuery, IGremlinQuery> projection7) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7);
        IGremlinQuery IGremlinQuery.Project(Func<IGremlinQuery, IGremlinQuery> projection1, Func<IGremlinQuery, IGremlinQuery> projection2, Func<IGremlinQuery, IGremlinQuery> projection3, Func<IGremlinQuery, IGremlinQuery> projection4, Func<IGremlinQuery, IGremlinQuery> projection5, Func<IGremlinQuery, IGremlinQuery> projection6, Func<IGremlinQuery, IGremlinQuery> projection7, Func<IGremlinQuery, IGremlinQuery> projection8) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8);
        IGremlinQuery IGremlinQuery.Project(Func<IGremlinQuery, IGremlinQuery> projection1, Func<IGremlinQuery, IGremlinQuery> projection2, Func<IGremlinQuery, IGremlinQuery> projection3, Func<IGremlinQuery, IGremlinQuery> projection4, Func<IGremlinQuery, IGremlinQuery> projection5, Func<IGremlinQuery, IGremlinQuery> projection6, Func<IGremlinQuery, IGremlinQuery> projection7, Func<IGremlinQuery, IGremlinQuery> projection8, Func<IGremlinQuery, IGremlinQuery> projection9) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9);
        IGremlinQuery IGremlinQuery.Project(Func<IGremlinQuery, IGremlinQuery> projection1, Func<IGremlinQuery, IGremlinQuery> projection2, Func<IGremlinQuery, IGremlinQuery> projection3, Func<IGremlinQuery, IGremlinQuery> projection4, Func<IGremlinQuery, IGremlinQuery> projection5, Func<IGremlinQuery, IGremlinQuery> projection6, Func<IGremlinQuery, IGremlinQuery> projection7, Func<IGremlinQuery, IGremlinQuery> projection8, Func<IGremlinQuery, IGremlinQuery> projection9, Func<IGremlinQuery, IGremlinQuery> projection10) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10);
        IGremlinQuery IGremlinQuery.Project(Func<IGremlinQuery, IGremlinQuery> projection1, Func<IGremlinQuery, IGremlinQuery> projection2, Func<IGremlinQuery, IGremlinQuery> projection3, Func<IGremlinQuery, IGremlinQuery> projection4, Func<IGremlinQuery, IGremlinQuery> projection5, Func<IGremlinQuery, IGremlinQuery> projection6, Func<IGremlinQuery, IGremlinQuery> projection7, Func<IGremlinQuery, IGremlinQuery> projection8, Func<IGremlinQuery, IGremlinQuery> projection9, Func<IGremlinQuery, IGremlinQuery> projection10, Func<IGremlinQuery, IGremlinQuery> projection11) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11);
        IGremlinQuery IGremlinQuery.Project(Func<IGremlinQuery, IGremlinQuery> projection1, Func<IGremlinQuery, IGremlinQuery> projection2, Func<IGremlinQuery, IGremlinQuery> projection3, Func<IGremlinQuery, IGremlinQuery> projection4, Func<IGremlinQuery, IGremlinQuery> projection5, Func<IGremlinQuery, IGremlinQuery> projection6, Func<IGremlinQuery, IGremlinQuery> projection7, Func<IGremlinQuery, IGremlinQuery> projection8, Func<IGremlinQuery, IGremlinQuery> projection9, Func<IGremlinQuery, IGremlinQuery> projection10, Func<IGremlinQuery, IGremlinQuery> projection11, Func<IGremlinQuery, IGremlinQuery> projection12) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12);
        IGremlinQuery IGremlinQuery.Project(Func<IGremlinQuery, IGremlinQuery> projection1, Func<IGremlinQuery, IGremlinQuery> projection2, Func<IGremlinQuery, IGremlinQuery> projection3, Func<IGremlinQuery, IGremlinQuery> projection4, Func<IGremlinQuery, IGremlinQuery> projection5, Func<IGremlinQuery, IGremlinQuery> projection6, Func<IGremlinQuery, IGremlinQuery> projection7, Func<IGremlinQuery, IGremlinQuery> projection8, Func<IGremlinQuery, IGremlinQuery> projection9, Func<IGremlinQuery, IGremlinQuery> projection10, Func<IGremlinQuery, IGremlinQuery> projection11, Func<IGremlinQuery, IGremlinQuery> projection12, Func<IGremlinQuery, IGremlinQuery> projection13) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13);
        IGremlinQuery IGremlinQuery.Project(Func<IGremlinQuery, IGremlinQuery> projection1, Func<IGremlinQuery, IGremlinQuery> projection2, Func<IGremlinQuery, IGremlinQuery> projection3, Func<IGremlinQuery, IGremlinQuery> projection4, Func<IGremlinQuery, IGremlinQuery> projection5, Func<IGremlinQuery, IGremlinQuery> projection6, Func<IGremlinQuery, IGremlinQuery> projection7, Func<IGremlinQuery, IGremlinQuery> projection8, Func<IGremlinQuery, IGremlinQuery> projection9, Func<IGremlinQuery, IGremlinQuery> projection10, Func<IGremlinQuery, IGremlinQuery> projection11, Func<IGremlinQuery, IGremlinQuery> projection12, Func<IGremlinQuery, IGremlinQuery> projection13, Func<IGremlinQuery, IGremlinQuery> projection14) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14);
        IGremlinQuery IGremlinQuery.Project(Func<IGremlinQuery, IGremlinQuery> projection1, Func<IGremlinQuery, IGremlinQuery> projection2, Func<IGremlinQuery, IGremlinQuery> projection3, Func<IGremlinQuery, IGremlinQuery> projection4, Func<IGremlinQuery, IGremlinQuery> projection5, Func<IGremlinQuery, IGremlinQuery> projection6, Func<IGremlinQuery, IGremlinQuery> projection7, Func<IGremlinQuery, IGremlinQuery> projection8, Func<IGremlinQuery, IGremlinQuery> projection9, Func<IGremlinQuery, IGremlinQuery> projection10, Func<IGremlinQuery, IGremlinQuery> projection11, Func<IGremlinQuery, IGremlinQuery> projection12, Func<IGremlinQuery, IGremlinQuery> projection13, Func<IGremlinQuery, IGremlinQuery> projection14, Func<IGremlinQuery, IGremlinQuery> projection15) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15);
        IGremlinQuery IGremlinQuery.Project(Func<IGremlinQuery, IGremlinQuery> projection1, Func<IGremlinQuery, IGremlinQuery> projection2, Func<IGremlinQuery, IGremlinQuery> projection3, Func<IGremlinQuery, IGremlinQuery> projection4, Func<IGremlinQuery, IGremlinQuery> projection5, Func<IGremlinQuery, IGremlinQuery> projection6, Func<IGremlinQuery, IGremlinQuery> projection7, Func<IGremlinQuery, IGremlinQuery> projection8, Func<IGremlinQuery, IGremlinQuery> projection9, Func<IGremlinQuery, IGremlinQuery> projection10, Func<IGremlinQuery, IGremlinQuery> projection11, Func<IGremlinQuery, IGremlinQuery> projection12, Func<IGremlinQuery, IGremlinQuery> projection13, Func<IGremlinQuery, IGremlinQuery> projection14, Func<IGremlinQuery, IGremlinQuery> projection15, Func<IGremlinQuery, IGremlinQuery> projection16) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15, projection16);

        IGremlinQuery<object> IGremlinQuery.Project(Func<IProjectBuilder<IGremlinQuery>, IProjectBuilder<IGremlinQuery>> continuation) => Project(continuation);

        IGremlinQuery IGremlinQuery.Range(long low, long high) => Range(low, high);

        IGremlinQuery IGremlinQuery.Repeat(Func<IGremlinQuery, IGremlinQuery> repeatTraversal) => Repeat(repeatTraversal);
        IGremlinQuery IGremlinQuery.RepeatUntil(Func<IGremlinQuery, IGremlinQuery> repeatTraversal, Func<IGremlinQuery, IGremlinQuery> untilTraversal) => RepeatUntil(repeatTraversal, untilTraversal);
        IGremlinQuery IGremlinQuery.UntilRepeat(Func<IGremlinQuery, IGremlinQuery> repeatTraversal, Func<IGremlinQuery, IGremlinQuery> untilTraversal) => UntilRepeat(repeatTraversal, untilTraversal);

        IGremlinQuery IGremlinQuery.SideEffect(Func<IGremlinQuery, IGremlinQuery> sideEffectTraversal) => SideEffect(sideEffectTraversal);
        IGremlinQuery IGremlinQuery.Skip(long count) => Skip(count);

        IGremlinQuery IGremlinQuery.Tail(long count) => Tail(count);
        IGremlinQuery IGremlinQuery.TailLocal(int count) => TailLocal(count);

        IGremlinQuery IGremlinQuery.Times(int count) => Times(count);

        TTargetQuery IGremlinQuery.Union<TTargetQuery>(params Func<IGremlinQuery, TTargetQuery>[] unionTraversals) => Union(unionTraversals);
        IElementGremlinQuery IElementGremlinQuery.And(params Func<IElementGremlinQuery, IGremlinQuery>[] andTraversals) => And(andTraversals);
        IElementGremlinQuery IElementGremlinQuery.As(params StepLabel[] stepLabels) => As(stepLabels);

        IElementGremlinQuery IElementGremlinQuery.Barrier() => Barrier();

        TTargetQuery IElementGremlinQuery.Choose<TTargetQuery>(Func<IElementGremlinQuery, IGremlinQuery> traversalPredicate, Func<IElementGremlinQuery, TTargetQuery> trueChoice, Func<IElementGremlinQuery, TTargetQuery> falseChoice) => Choose(traversalPredicate, trueChoice, falseChoice);
        TTargetQuery IElementGremlinQuery.Choose<TTargetQuery>(Func<IElementGremlinQuery, IGremlinQuery> traversalPredicate, Func<IElementGremlinQuery, TTargetQuery> trueChoice) => Choose(traversalPredicate, trueChoice);
        TTargetQuery IElementGremlinQuery.Choose<TTargetQuery>(Func<IChooseBuilder<IElementGremlinQuery>, IChooseBuilderWithCaseOrDefault<TTargetQuery>> continuation) => Choose<TTargetQuery>(continuation);

        TTargetQuery IElementGremlinQuery.Coalesce<TTargetQuery>(params Func<IElementGremlinQuery, TTargetQuery>[] traversals) => Coalesce(traversals);

        IElementGremlinQuery IElementGremlinQuery.Dedup() => Dedup();
        IElementGremlinQuery IElementGremlinQuery.Drop() => Drop();

        IElementGremlinQuery IElementGremlinQuery.Emit() => Emit();

        IElementGremlinQuery IElementGremlinQuery.Where(string lambda) => Where(lambda);

        TTargetQuery IElementGremlinQuery.FlatMap<TTargetQuery>(Func<IElementGremlinQuery, TTargetQuery> mapping) => FlatMap(mapping);

        IElementGremlinQuery IElementGremlinQuery.Identity() => Identity();

        IElementGremlinQuery IElementGremlinQuery.Limit(long count) => Limit(count);
        IElementGremlinQuery IElementGremlinQuery.LimitLocal(long count) => LimitLocal(count);

        TTargetQuery IElementGremlinQuery.Local<TTargetQuery>(Func<IElementGremlinQuery , TTargetQuery> localTraversal) => Local(localTraversal);

        TTargetQuery IElementGremlinQuery.Map<TTargetQuery>(Func<IElementGremlinQuery, TTargetQuery> mapping) => Map(mapping);
        
        IElementGremlinQuery IElementGremlinQuery.Not(Func<IElementGremlinQuery, IGremlinQuery> notTraversal) => Not(notTraversal);
        IElementGremlinQuery IElementGremlinQuery.None() => None();

        TTargetQuery IElementGremlinQuery.Optional<TTargetQuery>(Func<IElementGremlinQuery, TTargetQuery> optionalTraversal) => Optional(optionalTraversal);
        IElementGremlinQuery IElementGremlinQuery.Or(params Func<IElementGremlinQuery, IGremlinQuery>[] orTraversals) => Or(orTraversals);

        IGremlinQuery<(TElement1, TElement2)> IElementGremlinQuery.Project<TElement1, TElement2>(Func<IElementGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IElementGremlinQuery, IGremlinQuery<TElement2>> projection2) => Project<(TElement1, TElement2)>(projection1, projection2);
        IGremlinQuery<(TElement1, TElement2, TElement3)> IElementGremlinQuery.Project<TElement1, TElement2, TElement3>(Func<IElementGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IElementGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IElementGremlinQuery, IGremlinQuery<TElement3>> projection3) => Project<(TElement1, TElement2, TElement3)>(projection1, projection2, projection3);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4)> IElementGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4>(Func<IElementGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IElementGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IElementGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IElementGremlinQuery, IGremlinQuery<TElement4>> projection4) => Project<(TElement1, TElement2, TElement3, TElement4)>(projection1, projection2, projection3, projection4);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5)> IElementGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4, TElement5>(Func<IElementGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IElementGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IElementGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IElementGremlinQuery, IGremlinQuery<TElement4>> projection4, Func<IElementGremlinQuery, IGremlinQuery<TElement5>> projection5) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5)>(projection1, projection2, projection3, projection4, projection5);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6)> IElementGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6>(Func<IElementGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IElementGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IElementGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IElementGremlinQuery, IGremlinQuery<TElement4>> projection4, Func<IElementGremlinQuery, IGremlinQuery<TElement5>> projection5, Func<IElementGremlinQuery, IGremlinQuery<TElement6>> projection6) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6)>(projection1, projection2, projection3, projection4, projection5, projection6);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7)> IElementGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7>(Func<IElementGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IElementGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IElementGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IElementGremlinQuery, IGremlinQuery<TElement4>> projection4, Func<IElementGremlinQuery, IGremlinQuery<TElement5>> projection5, Func<IElementGremlinQuery, IGremlinQuery<TElement6>> projection6, Func<IElementGremlinQuery, IGremlinQuery<TElement7>> projection7) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8)> IElementGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8>(Func<IElementGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IElementGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IElementGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IElementGremlinQuery, IGremlinQuery<TElement4>> projection4, Func<IElementGremlinQuery, IGremlinQuery<TElement5>> projection5, Func<IElementGremlinQuery, IGremlinQuery<TElement6>> projection6, Func<IElementGremlinQuery, IGremlinQuery<TElement7>> projection7, Func<IElementGremlinQuery, IGremlinQuery<TElement8>> projection8) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9)> IElementGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9>(Func<IElementGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IElementGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IElementGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IElementGremlinQuery, IGremlinQuery<TElement4>> projection4, Func<IElementGremlinQuery, IGremlinQuery<TElement5>> projection5, Func<IElementGremlinQuery, IGremlinQuery<TElement6>> projection6, Func<IElementGremlinQuery, IGremlinQuery<TElement7>> projection7, Func<IElementGremlinQuery, IGremlinQuery<TElement8>> projection8, Func<IElementGremlinQuery, IGremlinQuery<TElement9>> projection9) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10)> IElementGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10>(Func<IElementGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IElementGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IElementGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IElementGremlinQuery, IGremlinQuery<TElement4>> projection4, Func<IElementGremlinQuery, IGremlinQuery<TElement5>> projection5, Func<IElementGremlinQuery, IGremlinQuery<TElement6>> projection6, Func<IElementGremlinQuery, IGremlinQuery<TElement7>> projection7, Func<IElementGremlinQuery, IGremlinQuery<TElement8>> projection8, Func<IElementGremlinQuery, IGremlinQuery<TElement9>> projection9, Func<IElementGremlinQuery, IGremlinQuery<TElement10>> projection10) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11)> IElementGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11>(Func<IElementGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IElementGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IElementGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IElementGremlinQuery, IGremlinQuery<TElement4>> projection4, Func<IElementGremlinQuery, IGremlinQuery<TElement5>> projection5, Func<IElementGremlinQuery, IGremlinQuery<TElement6>> projection6, Func<IElementGremlinQuery, IGremlinQuery<TElement7>> projection7, Func<IElementGremlinQuery, IGremlinQuery<TElement8>> projection8, Func<IElementGremlinQuery, IGremlinQuery<TElement9>> projection9, Func<IElementGremlinQuery, IGremlinQuery<TElement10>> projection10, Func<IElementGremlinQuery, IGremlinQuery<TElement11>> projection11) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12)> IElementGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12>(Func<IElementGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IElementGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IElementGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IElementGremlinQuery, IGremlinQuery<TElement4>> projection4, Func<IElementGremlinQuery, IGremlinQuery<TElement5>> projection5, Func<IElementGremlinQuery, IGremlinQuery<TElement6>> projection6, Func<IElementGremlinQuery, IGremlinQuery<TElement7>> projection7, Func<IElementGremlinQuery, IGremlinQuery<TElement8>> projection8, Func<IElementGremlinQuery, IGremlinQuery<TElement9>> projection9, Func<IElementGremlinQuery, IGremlinQuery<TElement10>> projection10, Func<IElementGremlinQuery, IGremlinQuery<TElement11>> projection11, Func<IElementGremlinQuery, IGremlinQuery<TElement12>> projection12) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13)> IElementGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13>(Func<IElementGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IElementGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IElementGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IElementGremlinQuery, IGremlinQuery<TElement4>> projection4, Func<IElementGremlinQuery, IGremlinQuery<TElement5>> projection5, Func<IElementGremlinQuery, IGremlinQuery<TElement6>> projection6, Func<IElementGremlinQuery, IGremlinQuery<TElement7>> projection7, Func<IElementGremlinQuery, IGremlinQuery<TElement8>> projection8, Func<IElementGremlinQuery, IGremlinQuery<TElement9>> projection9, Func<IElementGremlinQuery, IGremlinQuery<TElement10>> projection10, Func<IElementGremlinQuery, IGremlinQuery<TElement11>> projection11, Func<IElementGremlinQuery, IGremlinQuery<TElement12>> projection12, Func<IElementGremlinQuery, IGremlinQuery<TElement13>> projection13) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14)> IElementGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14>(Func<IElementGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IElementGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IElementGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IElementGremlinQuery, IGremlinQuery<TElement4>> projection4, Func<IElementGremlinQuery, IGremlinQuery<TElement5>> projection5, Func<IElementGremlinQuery, IGremlinQuery<TElement6>> projection6, Func<IElementGremlinQuery, IGremlinQuery<TElement7>> projection7, Func<IElementGremlinQuery, IGremlinQuery<TElement8>> projection8, Func<IElementGremlinQuery, IGremlinQuery<TElement9>> projection9, Func<IElementGremlinQuery, IGremlinQuery<TElement10>> projection10, Func<IElementGremlinQuery, IGremlinQuery<TElement11>> projection11, Func<IElementGremlinQuery, IGremlinQuery<TElement12>> projection12, Func<IElementGremlinQuery, IGremlinQuery<TElement13>> projection13, Func<IElementGremlinQuery, IGremlinQuery<TElement14>> projection14) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15)> IElementGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15>(Func<IElementGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IElementGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IElementGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IElementGremlinQuery, IGremlinQuery<TElement4>> projection4, Func<IElementGremlinQuery, IGremlinQuery<TElement5>> projection5, Func<IElementGremlinQuery, IGremlinQuery<TElement6>> projection6, Func<IElementGremlinQuery, IGremlinQuery<TElement7>> projection7, Func<IElementGremlinQuery, IGremlinQuery<TElement8>> projection8, Func<IElementGremlinQuery, IGremlinQuery<TElement9>> projection9, Func<IElementGremlinQuery, IGremlinQuery<TElement10>> projection10, Func<IElementGremlinQuery, IGremlinQuery<TElement11>> projection11, Func<IElementGremlinQuery, IGremlinQuery<TElement12>> projection12, Func<IElementGremlinQuery, IGremlinQuery<TElement13>> projection13, Func<IElementGremlinQuery, IGremlinQuery<TElement14>> projection14, Func<IElementGremlinQuery, IGremlinQuery<TElement15>> projection15) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15, TElement16)> IElementGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15, TElement16>(Func<IElementGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IElementGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IElementGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IElementGremlinQuery, IGremlinQuery<TElement4>> projection4, Func<IElementGremlinQuery, IGremlinQuery<TElement5>> projection5, Func<IElementGremlinQuery, IGremlinQuery<TElement6>> projection6, Func<IElementGremlinQuery, IGremlinQuery<TElement7>> projection7, Func<IElementGremlinQuery, IGremlinQuery<TElement8>> projection8, Func<IElementGremlinQuery, IGremlinQuery<TElement9>> projection9, Func<IElementGremlinQuery, IGremlinQuery<TElement10>> projection10, Func<IElementGremlinQuery, IGremlinQuery<TElement11>> projection11, Func<IElementGremlinQuery, IGremlinQuery<TElement12>> projection12, Func<IElementGremlinQuery, IGremlinQuery<TElement13>> projection13, Func<IElementGremlinQuery, IGremlinQuery<TElement14>> projection14, Func<IElementGremlinQuery, IGremlinQuery<TElement15>> projection15, Func<IElementGremlinQuery, IGremlinQuery<TElement16>> projection16) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15, TElement16)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15, projection16);

        IGremlinQuery IElementGremlinQuery.Project(Func<IElementGremlinQuery, IGremlinQuery> projection1, Func<IElementGremlinQuery, IGremlinQuery> projection2) => Project<Unit>(projection1, projection2);
        IGremlinQuery IElementGremlinQuery.Project(Func<IElementGremlinQuery, IGremlinQuery> projection1, Func<IElementGremlinQuery, IGremlinQuery> projection2, Func<IElementGremlinQuery, IGremlinQuery> projection3) => Project<Unit>(projection1, projection2, projection3);
        IGremlinQuery IElementGremlinQuery.Project(Func<IElementGremlinQuery, IGremlinQuery> projection1, Func<IElementGremlinQuery, IGremlinQuery> projection2, Func<IElementGremlinQuery, IGremlinQuery> projection3, Func<IElementGremlinQuery, IGremlinQuery> projection4) => Project<Unit>(projection1, projection2, projection3, projection4);
        IGremlinQuery IElementGremlinQuery.Project(Func<IElementGremlinQuery, IGremlinQuery> projection1, Func<IElementGremlinQuery, IGremlinQuery> projection2, Func<IElementGremlinQuery, IGremlinQuery> projection3, Func<IElementGremlinQuery, IGremlinQuery> projection4, Func<IElementGremlinQuery, IGremlinQuery> projection5) => Project<Unit>(projection1, projection2, projection3, projection4, projection5);
        IGremlinQuery IElementGremlinQuery.Project(Func<IElementGremlinQuery, IGremlinQuery> projection1, Func<IElementGremlinQuery, IGremlinQuery> projection2, Func<IElementGremlinQuery, IGremlinQuery> projection3, Func<IElementGremlinQuery, IGremlinQuery> projection4, Func<IElementGremlinQuery, IGremlinQuery> projection5, Func<IElementGremlinQuery, IGremlinQuery> projection6) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6);
        IGremlinQuery IElementGremlinQuery.Project(Func<IElementGremlinQuery, IGremlinQuery> projection1, Func<IElementGremlinQuery, IGremlinQuery> projection2, Func<IElementGremlinQuery, IGremlinQuery> projection3, Func<IElementGremlinQuery, IGremlinQuery> projection4, Func<IElementGremlinQuery, IGremlinQuery> projection5, Func<IElementGremlinQuery, IGremlinQuery> projection6, Func<IElementGremlinQuery, IGremlinQuery> projection7) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7);
        IGremlinQuery IElementGremlinQuery.Project(Func<IElementGremlinQuery, IGremlinQuery> projection1, Func<IElementGremlinQuery, IGremlinQuery> projection2, Func<IElementGremlinQuery, IGremlinQuery> projection3, Func<IElementGremlinQuery, IGremlinQuery> projection4, Func<IElementGremlinQuery, IGremlinQuery> projection5, Func<IElementGremlinQuery, IGremlinQuery> projection6, Func<IElementGremlinQuery, IGremlinQuery> projection7, Func<IElementGremlinQuery, IGremlinQuery> projection8) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8);
        IGremlinQuery IElementGremlinQuery.Project(Func<IElementGremlinQuery, IGremlinQuery> projection1, Func<IElementGremlinQuery, IGremlinQuery> projection2, Func<IElementGremlinQuery, IGremlinQuery> projection3, Func<IElementGremlinQuery, IGremlinQuery> projection4, Func<IElementGremlinQuery, IGremlinQuery> projection5, Func<IElementGremlinQuery, IGremlinQuery> projection6, Func<IElementGremlinQuery, IGremlinQuery> projection7, Func<IElementGremlinQuery, IGremlinQuery> projection8, Func<IElementGremlinQuery, IGremlinQuery> projection9) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9);
        IGremlinQuery IElementGremlinQuery.Project(Func<IElementGremlinQuery, IGremlinQuery> projection1, Func<IElementGremlinQuery, IGremlinQuery> projection2, Func<IElementGremlinQuery, IGremlinQuery> projection3, Func<IElementGremlinQuery, IGremlinQuery> projection4, Func<IElementGremlinQuery, IGremlinQuery> projection5, Func<IElementGremlinQuery, IGremlinQuery> projection6, Func<IElementGremlinQuery, IGremlinQuery> projection7, Func<IElementGremlinQuery, IGremlinQuery> projection8, Func<IElementGremlinQuery, IGremlinQuery> projection9, Func<IElementGremlinQuery, IGremlinQuery> projection10) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10);
        IGremlinQuery IElementGremlinQuery.Project(Func<IElementGremlinQuery, IGremlinQuery> projection1, Func<IElementGremlinQuery, IGremlinQuery> projection2, Func<IElementGremlinQuery, IGremlinQuery> projection3, Func<IElementGremlinQuery, IGremlinQuery> projection4, Func<IElementGremlinQuery, IGremlinQuery> projection5, Func<IElementGremlinQuery, IGremlinQuery> projection6, Func<IElementGremlinQuery, IGremlinQuery> projection7, Func<IElementGremlinQuery, IGremlinQuery> projection8, Func<IElementGremlinQuery, IGremlinQuery> projection9, Func<IElementGremlinQuery, IGremlinQuery> projection10, Func<IElementGremlinQuery, IGremlinQuery> projection11) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11);
        IGremlinQuery IElementGremlinQuery.Project(Func<IElementGremlinQuery, IGremlinQuery> projection1, Func<IElementGremlinQuery, IGremlinQuery> projection2, Func<IElementGremlinQuery, IGremlinQuery> projection3, Func<IElementGremlinQuery, IGremlinQuery> projection4, Func<IElementGremlinQuery, IGremlinQuery> projection5, Func<IElementGremlinQuery, IGremlinQuery> projection6, Func<IElementGremlinQuery, IGremlinQuery> projection7, Func<IElementGremlinQuery, IGremlinQuery> projection8, Func<IElementGremlinQuery, IGremlinQuery> projection9, Func<IElementGremlinQuery, IGremlinQuery> projection10, Func<IElementGremlinQuery, IGremlinQuery> projection11, Func<IElementGremlinQuery, IGremlinQuery> projection12) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12);
        IGremlinQuery IElementGremlinQuery.Project(Func<IElementGremlinQuery, IGremlinQuery> projection1, Func<IElementGremlinQuery, IGremlinQuery> projection2, Func<IElementGremlinQuery, IGremlinQuery> projection3, Func<IElementGremlinQuery, IGremlinQuery> projection4, Func<IElementGremlinQuery, IGremlinQuery> projection5, Func<IElementGremlinQuery, IGremlinQuery> projection6, Func<IElementGremlinQuery, IGremlinQuery> projection7, Func<IElementGremlinQuery, IGremlinQuery> projection8, Func<IElementGremlinQuery, IGremlinQuery> projection9, Func<IElementGremlinQuery, IGremlinQuery> projection10, Func<IElementGremlinQuery, IGremlinQuery> projection11, Func<IElementGremlinQuery, IGremlinQuery> projection12, Func<IElementGremlinQuery, IGremlinQuery> projection13) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13);
        IGremlinQuery IElementGremlinQuery.Project(Func<IElementGremlinQuery, IGremlinQuery> projection1, Func<IElementGremlinQuery, IGremlinQuery> projection2, Func<IElementGremlinQuery, IGremlinQuery> projection3, Func<IElementGremlinQuery, IGremlinQuery> projection4, Func<IElementGremlinQuery, IGremlinQuery> projection5, Func<IElementGremlinQuery, IGremlinQuery> projection6, Func<IElementGremlinQuery, IGremlinQuery> projection7, Func<IElementGremlinQuery, IGremlinQuery> projection8, Func<IElementGremlinQuery, IGremlinQuery> projection9, Func<IElementGremlinQuery, IGremlinQuery> projection10, Func<IElementGremlinQuery, IGremlinQuery> projection11, Func<IElementGremlinQuery, IGremlinQuery> projection12, Func<IElementGremlinQuery, IGremlinQuery> projection13, Func<IElementGremlinQuery, IGremlinQuery> projection14) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14);
        IGremlinQuery IElementGremlinQuery.Project(Func<IElementGremlinQuery, IGremlinQuery> projection1, Func<IElementGremlinQuery, IGremlinQuery> projection2, Func<IElementGremlinQuery, IGremlinQuery> projection3, Func<IElementGremlinQuery, IGremlinQuery> projection4, Func<IElementGremlinQuery, IGremlinQuery> projection5, Func<IElementGremlinQuery, IGremlinQuery> projection6, Func<IElementGremlinQuery, IGremlinQuery> projection7, Func<IElementGremlinQuery, IGremlinQuery> projection8, Func<IElementGremlinQuery, IGremlinQuery> projection9, Func<IElementGremlinQuery, IGremlinQuery> projection10, Func<IElementGremlinQuery, IGremlinQuery> projection11, Func<IElementGremlinQuery, IGremlinQuery> projection12, Func<IElementGremlinQuery, IGremlinQuery> projection13, Func<IElementGremlinQuery, IGremlinQuery> projection14, Func<IElementGremlinQuery, IGremlinQuery> projection15) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15);
        IGremlinQuery IElementGremlinQuery.Project(Func<IElementGremlinQuery, IGremlinQuery> projection1, Func<IElementGremlinQuery, IGremlinQuery> projection2, Func<IElementGremlinQuery, IGremlinQuery> projection3, Func<IElementGremlinQuery, IGremlinQuery> projection4, Func<IElementGremlinQuery, IGremlinQuery> projection5, Func<IElementGremlinQuery, IGremlinQuery> projection6, Func<IElementGremlinQuery, IGremlinQuery> projection7, Func<IElementGremlinQuery, IGremlinQuery> projection8, Func<IElementGremlinQuery, IGremlinQuery> projection9, Func<IElementGremlinQuery, IGremlinQuery> projection10, Func<IElementGremlinQuery, IGremlinQuery> projection11, Func<IElementGremlinQuery, IGremlinQuery> projection12, Func<IElementGremlinQuery, IGremlinQuery> projection13, Func<IElementGremlinQuery, IGremlinQuery> projection14, Func<IElementGremlinQuery, IGremlinQuery> projection15, Func<IElementGremlinQuery, IGremlinQuery> projection16) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15, projection16);

        IGremlinQuery<object> IElementGremlinQuery.Project(Func<IProjectBuilder<IElementGremlinQuery>, IProjectBuilder<IElementGremlinQuery>> continuation) => Project(continuation);

        IElementGremlinQuery IElementGremlinQuery.Range(long low, long high) => Range(low, high);

        IElementGremlinQuery IElementGremlinQuery.Repeat(Func<IElementGremlinQuery, IElementGremlinQuery> repeatTraversal) => Repeat(repeatTraversal);
        IElementGremlinQuery IElementGremlinQuery.RepeatUntil(Func<IElementGremlinQuery, IElementGremlinQuery> repeatTraversal, Func<IElementGremlinQuery, IGremlinQuery> untilTraversal) => RepeatUntil(repeatTraversal, untilTraversal);
        IElementGremlinQuery IElementGremlinQuery.UntilRepeat(Func<IElementGremlinQuery, IElementGremlinQuery> repeatTraversal, Func<IElementGremlinQuery, IGremlinQuery> untilTraversal) => UntilRepeat(repeatTraversal, untilTraversal);

        IElementGremlinQuery IElementGremlinQuery.SideEffect(Func<IElementGremlinQuery, IGremlinQuery> sideEffectTraversal) => SideEffect(sideEffectTraversal);
        IElementGremlinQuery IElementGremlinQuery.Skip(long count) => Skip(count);

        IElementGremlinQuery IElementGremlinQuery.Tail(long count) => Tail(count);
        IElementGremlinQuery IElementGremlinQuery.TailLocal(int count) => TailLocal(count);

        IElementGremlinQuery IElementGremlinQuery.Times(int count) => Times(count);

        TTargetQuery IElementGremlinQuery.Union<TTargetQuery>(params Func<IElementGremlinQuery, TTargetQuery>[] unionTraversals) => Union(unionTraversals);
        IVertexGremlinQuery IVertexGremlinQuery.And(params Func<IVertexGremlinQuery, IGremlinQuery>[] andTraversals) => And(andTraversals);
        IVertexGremlinQuery IVertexGremlinQuery.As(params StepLabel[] stepLabels) => As(stepLabels);

        IVertexGremlinQuery IVertexGremlinQuery.Barrier() => Barrier();

        TTargetQuery IVertexGremlinQuery.Choose<TTargetQuery>(Func<IVertexGremlinQuery, IGremlinQuery> traversalPredicate, Func<IVertexGremlinQuery, TTargetQuery> trueChoice, Func<IVertexGremlinQuery, TTargetQuery> falseChoice) => Choose(traversalPredicate, trueChoice, falseChoice);
        TTargetQuery IVertexGremlinQuery.Choose<TTargetQuery>(Func<IVertexGremlinQuery, IGremlinQuery> traversalPredicate, Func<IVertexGremlinQuery, TTargetQuery> trueChoice) => Choose(traversalPredicate, trueChoice);
        TTargetQuery IVertexGremlinQuery.Choose<TTargetQuery>(Func<IChooseBuilder<IVertexGremlinQuery>, IChooseBuilderWithCaseOrDefault<TTargetQuery>> continuation) => Choose<TTargetQuery>(continuation);

        TTargetQuery IVertexGremlinQuery.Coalesce<TTargetQuery>(params Func<IVertexGremlinQuery, TTargetQuery>[] traversals) => Coalesce(traversals);

        IVertexGremlinQuery IVertexGremlinQuery.Dedup() => Dedup();
        IVertexGremlinQuery IVertexGremlinQuery.Drop() => Drop();

        IVertexGremlinQuery IVertexGremlinQuery.Emit() => Emit();

        IVertexGremlinQuery IVertexGremlinQuery.Where(string lambda) => Where(lambda);

        TTargetQuery IVertexGremlinQuery.FlatMap<TTargetQuery>(Func<IVertexGremlinQuery, TTargetQuery> mapping) => FlatMap(mapping);

        IVertexGremlinQuery IVertexGremlinQuery.Identity() => Identity();

        IVertexGremlinQuery IVertexGremlinQuery.Limit(long count) => Limit(count);
        IVertexGremlinQuery IVertexGremlinQuery.LimitLocal(long count) => LimitLocal(count);

        TTargetQuery IVertexGremlinQuery.Local<TTargetQuery>(Func<IVertexGremlinQuery , TTargetQuery> localTraversal) => Local(localTraversal);

        TTargetQuery IVertexGremlinQuery.Map<TTargetQuery>(Func<IVertexGremlinQuery, TTargetQuery> mapping) => Map(mapping);
        
        IVertexGremlinQuery IVertexGremlinQuery.Not(Func<IVertexGremlinQuery, IGremlinQuery> notTraversal) => Not(notTraversal);
        IVertexGremlinQuery IVertexGremlinQuery.None() => None();

        TTargetQuery IVertexGremlinQuery.Optional<TTargetQuery>(Func<IVertexGremlinQuery, TTargetQuery> optionalTraversal) => Optional(optionalTraversal);
        IVertexGremlinQuery IVertexGremlinQuery.Or(params Func<IVertexGremlinQuery, IGremlinQuery>[] orTraversals) => Or(orTraversals);

        IGremlinQuery<(TElement1, TElement2)> IVertexGremlinQuery.Project<TElement1, TElement2>(Func<IVertexGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IVertexGremlinQuery, IGremlinQuery<TElement2>> projection2) => Project<(TElement1, TElement2)>(projection1, projection2);
        IGremlinQuery<(TElement1, TElement2, TElement3)> IVertexGremlinQuery.Project<TElement1, TElement2, TElement3>(Func<IVertexGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IVertexGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IVertexGremlinQuery, IGremlinQuery<TElement3>> projection3) => Project<(TElement1, TElement2, TElement3)>(projection1, projection2, projection3);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4)> IVertexGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4>(Func<IVertexGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IVertexGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IVertexGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IVertexGremlinQuery, IGremlinQuery<TElement4>> projection4) => Project<(TElement1, TElement2, TElement3, TElement4)>(projection1, projection2, projection3, projection4);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5)> IVertexGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4, TElement5>(Func<IVertexGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IVertexGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IVertexGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IVertexGremlinQuery, IGremlinQuery<TElement4>> projection4, Func<IVertexGremlinQuery, IGremlinQuery<TElement5>> projection5) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5)>(projection1, projection2, projection3, projection4, projection5);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6)> IVertexGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6>(Func<IVertexGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IVertexGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IVertexGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IVertexGremlinQuery, IGremlinQuery<TElement4>> projection4, Func<IVertexGremlinQuery, IGremlinQuery<TElement5>> projection5, Func<IVertexGremlinQuery, IGremlinQuery<TElement6>> projection6) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6)>(projection1, projection2, projection3, projection4, projection5, projection6);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7)> IVertexGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7>(Func<IVertexGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IVertexGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IVertexGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IVertexGremlinQuery, IGremlinQuery<TElement4>> projection4, Func<IVertexGremlinQuery, IGremlinQuery<TElement5>> projection5, Func<IVertexGremlinQuery, IGremlinQuery<TElement6>> projection6, Func<IVertexGremlinQuery, IGremlinQuery<TElement7>> projection7) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8)> IVertexGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8>(Func<IVertexGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IVertexGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IVertexGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IVertexGremlinQuery, IGremlinQuery<TElement4>> projection4, Func<IVertexGremlinQuery, IGremlinQuery<TElement5>> projection5, Func<IVertexGremlinQuery, IGremlinQuery<TElement6>> projection6, Func<IVertexGremlinQuery, IGremlinQuery<TElement7>> projection7, Func<IVertexGremlinQuery, IGremlinQuery<TElement8>> projection8) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9)> IVertexGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9>(Func<IVertexGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IVertexGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IVertexGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IVertexGremlinQuery, IGremlinQuery<TElement4>> projection4, Func<IVertexGremlinQuery, IGremlinQuery<TElement5>> projection5, Func<IVertexGremlinQuery, IGremlinQuery<TElement6>> projection6, Func<IVertexGremlinQuery, IGremlinQuery<TElement7>> projection7, Func<IVertexGremlinQuery, IGremlinQuery<TElement8>> projection8, Func<IVertexGremlinQuery, IGremlinQuery<TElement9>> projection9) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10)> IVertexGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10>(Func<IVertexGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IVertexGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IVertexGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IVertexGremlinQuery, IGremlinQuery<TElement4>> projection4, Func<IVertexGremlinQuery, IGremlinQuery<TElement5>> projection5, Func<IVertexGremlinQuery, IGremlinQuery<TElement6>> projection6, Func<IVertexGremlinQuery, IGremlinQuery<TElement7>> projection7, Func<IVertexGremlinQuery, IGremlinQuery<TElement8>> projection8, Func<IVertexGremlinQuery, IGremlinQuery<TElement9>> projection9, Func<IVertexGremlinQuery, IGremlinQuery<TElement10>> projection10) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11)> IVertexGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11>(Func<IVertexGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IVertexGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IVertexGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IVertexGremlinQuery, IGremlinQuery<TElement4>> projection4, Func<IVertexGremlinQuery, IGremlinQuery<TElement5>> projection5, Func<IVertexGremlinQuery, IGremlinQuery<TElement6>> projection6, Func<IVertexGremlinQuery, IGremlinQuery<TElement7>> projection7, Func<IVertexGremlinQuery, IGremlinQuery<TElement8>> projection8, Func<IVertexGremlinQuery, IGremlinQuery<TElement9>> projection9, Func<IVertexGremlinQuery, IGremlinQuery<TElement10>> projection10, Func<IVertexGremlinQuery, IGremlinQuery<TElement11>> projection11) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12)> IVertexGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12>(Func<IVertexGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IVertexGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IVertexGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IVertexGremlinQuery, IGremlinQuery<TElement4>> projection4, Func<IVertexGremlinQuery, IGremlinQuery<TElement5>> projection5, Func<IVertexGremlinQuery, IGremlinQuery<TElement6>> projection6, Func<IVertexGremlinQuery, IGremlinQuery<TElement7>> projection7, Func<IVertexGremlinQuery, IGremlinQuery<TElement8>> projection8, Func<IVertexGremlinQuery, IGremlinQuery<TElement9>> projection9, Func<IVertexGremlinQuery, IGremlinQuery<TElement10>> projection10, Func<IVertexGremlinQuery, IGremlinQuery<TElement11>> projection11, Func<IVertexGremlinQuery, IGremlinQuery<TElement12>> projection12) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13)> IVertexGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13>(Func<IVertexGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IVertexGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IVertexGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IVertexGremlinQuery, IGremlinQuery<TElement4>> projection4, Func<IVertexGremlinQuery, IGremlinQuery<TElement5>> projection5, Func<IVertexGremlinQuery, IGremlinQuery<TElement6>> projection6, Func<IVertexGremlinQuery, IGremlinQuery<TElement7>> projection7, Func<IVertexGremlinQuery, IGremlinQuery<TElement8>> projection8, Func<IVertexGremlinQuery, IGremlinQuery<TElement9>> projection9, Func<IVertexGremlinQuery, IGremlinQuery<TElement10>> projection10, Func<IVertexGremlinQuery, IGremlinQuery<TElement11>> projection11, Func<IVertexGremlinQuery, IGremlinQuery<TElement12>> projection12, Func<IVertexGremlinQuery, IGremlinQuery<TElement13>> projection13) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14)> IVertexGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14>(Func<IVertexGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IVertexGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IVertexGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IVertexGremlinQuery, IGremlinQuery<TElement4>> projection4, Func<IVertexGremlinQuery, IGremlinQuery<TElement5>> projection5, Func<IVertexGremlinQuery, IGremlinQuery<TElement6>> projection6, Func<IVertexGremlinQuery, IGremlinQuery<TElement7>> projection7, Func<IVertexGremlinQuery, IGremlinQuery<TElement8>> projection8, Func<IVertexGremlinQuery, IGremlinQuery<TElement9>> projection9, Func<IVertexGremlinQuery, IGremlinQuery<TElement10>> projection10, Func<IVertexGremlinQuery, IGremlinQuery<TElement11>> projection11, Func<IVertexGremlinQuery, IGremlinQuery<TElement12>> projection12, Func<IVertexGremlinQuery, IGremlinQuery<TElement13>> projection13, Func<IVertexGremlinQuery, IGremlinQuery<TElement14>> projection14) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15)> IVertexGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15>(Func<IVertexGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IVertexGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IVertexGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IVertexGremlinQuery, IGremlinQuery<TElement4>> projection4, Func<IVertexGremlinQuery, IGremlinQuery<TElement5>> projection5, Func<IVertexGremlinQuery, IGremlinQuery<TElement6>> projection6, Func<IVertexGremlinQuery, IGremlinQuery<TElement7>> projection7, Func<IVertexGremlinQuery, IGremlinQuery<TElement8>> projection8, Func<IVertexGremlinQuery, IGremlinQuery<TElement9>> projection9, Func<IVertexGremlinQuery, IGremlinQuery<TElement10>> projection10, Func<IVertexGremlinQuery, IGremlinQuery<TElement11>> projection11, Func<IVertexGremlinQuery, IGremlinQuery<TElement12>> projection12, Func<IVertexGremlinQuery, IGremlinQuery<TElement13>> projection13, Func<IVertexGremlinQuery, IGremlinQuery<TElement14>> projection14, Func<IVertexGremlinQuery, IGremlinQuery<TElement15>> projection15) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15, TElement16)> IVertexGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15, TElement16>(Func<IVertexGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IVertexGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IVertexGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IVertexGremlinQuery, IGremlinQuery<TElement4>> projection4, Func<IVertexGremlinQuery, IGremlinQuery<TElement5>> projection5, Func<IVertexGremlinQuery, IGremlinQuery<TElement6>> projection6, Func<IVertexGremlinQuery, IGremlinQuery<TElement7>> projection7, Func<IVertexGremlinQuery, IGremlinQuery<TElement8>> projection8, Func<IVertexGremlinQuery, IGremlinQuery<TElement9>> projection9, Func<IVertexGremlinQuery, IGremlinQuery<TElement10>> projection10, Func<IVertexGremlinQuery, IGremlinQuery<TElement11>> projection11, Func<IVertexGremlinQuery, IGremlinQuery<TElement12>> projection12, Func<IVertexGremlinQuery, IGremlinQuery<TElement13>> projection13, Func<IVertexGremlinQuery, IGremlinQuery<TElement14>> projection14, Func<IVertexGremlinQuery, IGremlinQuery<TElement15>> projection15, Func<IVertexGremlinQuery, IGremlinQuery<TElement16>> projection16) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15, TElement16)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15, projection16);

        IGremlinQuery IVertexGremlinQuery.Project(Func<IVertexGremlinQuery, IGremlinQuery> projection1, Func<IVertexGremlinQuery, IGremlinQuery> projection2) => Project<Unit>(projection1, projection2);
        IGremlinQuery IVertexGremlinQuery.Project(Func<IVertexGremlinQuery, IGremlinQuery> projection1, Func<IVertexGremlinQuery, IGremlinQuery> projection2, Func<IVertexGremlinQuery, IGremlinQuery> projection3) => Project<Unit>(projection1, projection2, projection3);
        IGremlinQuery IVertexGremlinQuery.Project(Func<IVertexGremlinQuery, IGremlinQuery> projection1, Func<IVertexGremlinQuery, IGremlinQuery> projection2, Func<IVertexGremlinQuery, IGremlinQuery> projection3, Func<IVertexGremlinQuery, IGremlinQuery> projection4) => Project<Unit>(projection1, projection2, projection3, projection4);
        IGremlinQuery IVertexGremlinQuery.Project(Func<IVertexGremlinQuery, IGremlinQuery> projection1, Func<IVertexGremlinQuery, IGremlinQuery> projection2, Func<IVertexGremlinQuery, IGremlinQuery> projection3, Func<IVertexGremlinQuery, IGremlinQuery> projection4, Func<IVertexGremlinQuery, IGremlinQuery> projection5) => Project<Unit>(projection1, projection2, projection3, projection4, projection5);
        IGremlinQuery IVertexGremlinQuery.Project(Func<IVertexGremlinQuery, IGremlinQuery> projection1, Func<IVertexGremlinQuery, IGremlinQuery> projection2, Func<IVertexGremlinQuery, IGremlinQuery> projection3, Func<IVertexGremlinQuery, IGremlinQuery> projection4, Func<IVertexGremlinQuery, IGremlinQuery> projection5, Func<IVertexGremlinQuery, IGremlinQuery> projection6) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6);
        IGremlinQuery IVertexGremlinQuery.Project(Func<IVertexGremlinQuery, IGremlinQuery> projection1, Func<IVertexGremlinQuery, IGremlinQuery> projection2, Func<IVertexGremlinQuery, IGremlinQuery> projection3, Func<IVertexGremlinQuery, IGremlinQuery> projection4, Func<IVertexGremlinQuery, IGremlinQuery> projection5, Func<IVertexGremlinQuery, IGremlinQuery> projection6, Func<IVertexGremlinQuery, IGremlinQuery> projection7) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7);
        IGremlinQuery IVertexGremlinQuery.Project(Func<IVertexGremlinQuery, IGremlinQuery> projection1, Func<IVertexGremlinQuery, IGremlinQuery> projection2, Func<IVertexGremlinQuery, IGremlinQuery> projection3, Func<IVertexGremlinQuery, IGremlinQuery> projection4, Func<IVertexGremlinQuery, IGremlinQuery> projection5, Func<IVertexGremlinQuery, IGremlinQuery> projection6, Func<IVertexGremlinQuery, IGremlinQuery> projection7, Func<IVertexGremlinQuery, IGremlinQuery> projection8) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8);
        IGremlinQuery IVertexGremlinQuery.Project(Func<IVertexGremlinQuery, IGremlinQuery> projection1, Func<IVertexGremlinQuery, IGremlinQuery> projection2, Func<IVertexGremlinQuery, IGremlinQuery> projection3, Func<IVertexGremlinQuery, IGremlinQuery> projection4, Func<IVertexGremlinQuery, IGremlinQuery> projection5, Func<IVertexGremlinQuery, IGremlinQuery> projection6, Func<IVertexGremlinQuery, IGremlinQuery> projection7, Func<IVertexGremlinQuery, IGremlinQuery> projection8, Func<IVertexGremlinQuery, IGremlinQuery> projection9) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9);
        IGremlinQuery IVertexGremlinQuery.Project(Func<IVertexGremlinQuery, IGremlinQuery> projection1, Func<IVertexGremlinQuery, IGremlinQuery> projection2, Func<IVertexGremlinQuery, IGremlinQuery> projection3, Func<IVertexGremlinQuery, IGremlinQuery> projection4, Func<IVertexGremlinQuery, IGremlinQuery> projection5, Func<IVertexGremlinQuery, IGremlinQuery> projection6, Func<IVertexGremlinQuery, IGremlinQuery> projection7, Func<IVertexGremlinQuery, IGremlinQuery> projection8, Func<IVertexGremlinQuery, IGremlinQuery> projection9, Func<IVertexGremlinQuery, IGremlinQuery> projection10) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10);
        IGremlinQuery IVertexGremlinQuery.Project(Func<IVertexGremlinQuery, IGremlinQuery> projection1, Func<IVertexGremlinQuery, IGremlinQuery> projection2, Func<IVertexGremlinQuery, IGremlinQuery> projection3, Func<IVertexGremlinQuery, IGremlinQuery> projection4, Func<IVertexGremlinQuery, IGremlinQuery> projection5, Func<IVertexGremlinQuery, IGremlinQuery> projection6, Func<IVertexGremlinQuery, IGremlinQuery> projection7, Func<IVertexGremlinQuery, IGremlinQuery> projection8, Func<IVertexGremlinQuery, IGremlinQuery> projection9, Func<IVertexGremlinQuery, IGremlinQuery> projection10, Func<IVertexGremlinQuery, IGremlinQuery> projection11) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11);
        IGremlinQuery IVertexGremlinQuery.Project(Func<IVertexGremlinQuery, IGremlinQuery> projection1, Func<IVertexGremlinQuery, IGremlinQuery> projection2, Func<IVertexGremlinQuery, IGremlinQuery> projection3, Func<IVertexGremlinQuery, IGremlinQuery> projection4, Func<IVertexGremlinQuery, IGremlinQuery> projection5, Func<IVertexGremlinQuery, IGremlinQuery> projection6, Func<IVertexGremlinQuery, IGremlinQuery> projection7, Func<IVertexGremlinQuery, IGremlinQuery> projection8, Func<IVertexGremlinQuery, IGremlinQuery> projection9, Func<IVertexGremlinQuery, IGremlinQuery> projection10, Func<IVertexGremlinQuery, IGremlinQuery> projection11, Func<IVertexGremlinQuery, IGremlinQuery> projection12) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12);
        IGremlinQuery IVertexGremlinQuery.Project(Func<IVertexGremlinQuery, IGremlinQuery> projection1, Func<IVertexGremlinQuery, IGremlinQuery> projection2, Func<IVertexGremlinQuery, IGremlinQuery> projection3, Func<IVertexGremlinQuery, IGremlinQuery> projection4, Func<IVertexGremlinQuery, IGremlinQuery> projection5, Func<IVertexGremlinQuery, IGremlinQuery> projection6, Func<IVertexGremlinQuery, IGremlinQuery> projection7, Func<IVertexGremlinQuery, IGremlinQuery> projection8, Func<IVertexGremlinQuery, IGremlinQuery> projection9, Func<IVertexGremlinQuery, IGremlinQuery> projection10, Func<IVertexGremlinQuery, IGremlinQuery> projection11, Func<IVertexGremlinQuery, IGremlinQuery> projection12, Func<IVertexGremlinQuery, IGremlinQuery> projection13) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13);
        IGremlinQuery IVertexGremlinQuery.Project(Func<IVertexGremlinQuery, IGremlinQuery> projection1, Func<IVertexGremlinQuery, IGremlinQuery> projection2, Func<IVertexGremlinQuery, IGremlinQuery> projection3, Func<IVertexGremlinQuery, IGremlinQuery> projection4, Func<IVertexGremlinQuery, IGremlinQuery> projection5, Func<IVertexGremlinQuery, IGremlinQuery> projection6, Func<IVertexGremlinQuery, IGremlinQuery> projection7, Func<IVertexGremlinQuery, IGremlinQuery> projection8, Func<IVertexGremlinQuery, IGremlinQuery> projection9, Func<IVertexGremlinQuery, IGremlinQuery> projection10, Func<IVertexGremlinQuery, IGremlinQuery> projection11, Func<IVertexGremlinQuery, IGremlinQuery> projection12, Func<IVertexGremlinQuery, IGremlinQuery> projection13, Func<IVertexGremlinQuery, IGremlinQuery> projection14) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14);
        IGremlinQuery IVertexGremlinQuery.Project(Func<IVertexGremlinQuery, IGremlinQuery> projection1, Func<IVertexGremlinQuery, IGremlinQuery> projection2, Func<IVertexGremlinQuery, IGremlinQuery> projection3, Func<IVertexGremlinQuery, IGremlinQuery> projection4, Func<IVertexGremlinQuery, IGremlinQuery> projection5, Func<IVertexGremlinQuery, IGremlinQuery> projection6, Func<IVertexGremlinQuery, IGremlinQuery> projection7, Func<IVertexGremlinQuery, IGremlinQuery> projection8, Func<IVertexGremlinQuery, IGremlinQuery> projection9, Func<IVertexGremlinQuery, IGremlinQuery> projection10, Func<IVertexGremlinQuery, IGremlinQuery> projection11, Func<IVertexGremlinQuery, IGremlinQuery> projection12, Func<IVertexGremlinQuery, IGremlinQuery> projection13, Func<IVertexGremlinQuery, IGremlinQuery> projection14, Func<IVertexGremlinQuery, IGremlinQuery> projection15) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15);
        IGremlinQuery IVertexGremlinQuery.Project(Func<IVertexGremlinQuery, IGremlinQuery> projection1, Func<IVertexGremlinQuery, IGremlinQuery> projection2, Func<IVertexGremlinQuery, IGremlinQuery> projection3, Func<IVertexGremlinQuery, IGremlinQuery> projection4, Func<IVertexGremlinQuery, IGremlinQuery> projection5, Func<IVertexGremlinQuery, IGremlinQuery> projection6, Func<IVertexGremlinQuery, IGremlinQuery> projection7, Func<IVertexGremlinQuery, IGremlinQuery> projection8, Func<IVertexGremlinQuery, IGremlinQuery> projection9, Func<IVertexGremlinQuery, IGremlinQuery> projection10, Func<IVertexGremlinQuery, IGremlinQuery> projection11, Func<IVertexGremlinQuery, IGremlinQuery> projection12, Func<IVertexGremlinQuery, IGremlinQuery> projection13, Func<IVertexGremlinQuery, IGremlinQuery> projection14, Func<IVertexGremlinQuery, IGremlinQuery> projection15, Func<IVertexGremlinQuery, IGremlinQuery> projection16) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15, projection16);

        IGremlinQuery<object> IVertexGremlinQuery.Project(Func<IProjectBuilder<IVertexGremlinQuery>, IProjectBuilder<IVertexGremlinQuery>> continuation) => Project(continuation);

        IVertexGremlinQuery IVertexGremlinQuery.Range(long low, long high) => Range(low, high);

        IVertexGremlinQuery IVertexGremlinQuery.Repeat(Func<IVertexGremlinQuery, IVertexGremlinQuery> repeatTraversal) => Repeat(repeatTraversal);
        IVertexGremlinQuery IVertexGremlinQuery.RepeatUntil(Func<IVertexGremlinQuery, IVertexGremlinQuery> repeatTraversal, Func<IVertexGremlinQuery, IGremlinQuery> untilTraversal) => RepeatUntil(repeatTraversal, untilTraversal);
        IVertexGremlinQuery IVertexGremlinQuery.UntilRepeat(Func<IVertexGremlinQuery, IVertexGremlinQuery> repeatTraversal, Func<IVertexGremlinQuery, IGremlinQuery> untilTraversal) => UntilRepeat(repeatTraversal, untilTraversal);

        IVertexGremlinQuery IVertexGremlinQuery.SideEffect(Func<IVertexGremlinQuery, IGremlinQuery> sideEffectTraversal) => SideEffect(sideEffectTraversal);
        IVertexGremlinQuery IVertexGremlinQuery.Skip(long count) => Skip(count);

        IVertexGremlinQuery IVertexGremlinQuery.Tail(long count) => Tail(count);
        IVertexGremlinQuery IVertexGremlinQuery.TailLocal(int count) => TailLocal(count);

        IVertexGremlinQuery IVertexGremlinQuery.Times(int count) => Times(count);

        TTargetQuery IVertexGremlinQuery.Union<TTargetQuery>(params Func<IVertexGremlinQuery, TTargetQuery>[] unionTraversals) => Union(unionTraversals);
        IEdgeGremlinQuery IEdgeGremlinQuery.And(params Func<IEdgeGremlinQuery, IGremlinQuery>[] andTraversals) => And(andTraversals);
        IEdgeGremlinQuery IEdgeGremlinQuery.As(params StepLabel[] stepLabels) => As(stepLabels);

        IEdgeGremlinQuery IEdgeGremlinQuery.Barrier() => Barrier();

        TTargetQuery IEdgeGremlinQuery.Choose<TTargetQuery>(Func<IEdgeGremlinQuery, IGremlinQuery> traversalPredicate, Func<IEdgeGremlinQuery, TTargetQuery> trueChoice, Func<IEdgeGremlinQuery, TTargetQuery> falseChoice) => Choose(traversalPredicate, trueChoice, falseChoice);
        TTargetQuery IEdgeGremlinQuery.Choose<TTargetQuery>(Func<IEdgeGremlinQuery, IGremlinQuery> traversalPredicate, Func<IEdgeGremlinQuery, TTargetQuery> trueChoice) => Choose(traversalPredicate, trueChoice);
        TTargetQuery IEdgeGremlinQuery.Choose<TTargetQuery>(Func<IChooseBuilder<IEdgeGremlinQuery>, IChooseBuilderWithCaseOrDefault<TTargetQuery>> continuation) => Choose<TTargetQuery>(continuation);

        TTargetQuery IEdgeGremlinQuery.Coalesce<TTargetQuery>(params Func<IEdgeGremlinQuery, TTargetQuery>[] traversals) => Coalesce(traversals);

        IEdgeGremlinQuery IEdgeGremlinQuery.Dedup() => Dedup();
        IEdgeGremlinQuery IEdgeGremlinQuery.Drop() => Drop();

        IEdgeGremlinQuery IEdgeGremlinQuery.Emit() => Emit();

        IEdgeGremlinQuery IEdgeGremlinQuery.Where(string lambda) => Where(lambda);

        TTargetQuery IEdgeGremlinQuery.FlatMap<TTargetQuery>(Func<IEdgeGremlinQuery, TTargetQuery> mapping) => FlatMap(mapping);

        IEdgeGremlinQuery IEdgeGremlinQuery.Identity() => Identity();

        IEdgeGremlinQuery IEdgeGremlinQuery.Limit(long count) => Limit(count);
        IEdgeGremlinQuery IEdgeGremlinQuery.LimitLocal(long count) => LimitLocal(count);

        TTargetQuery IEdgeGremlinQuery.Local<TTargetQuery>(Func<IEdgeGremlinQuery , TTargetQuery> localTraversal) => Local(localTraversal);

        TTargetQuery IEdgeGremlinQuery.Map<TTargetQuery>(Func<IEdgeGremlinQuery, TTargetQuery> mapping) => Map(mapping);
        
        IEdgeGremlinQuery IEdgeGremlinQuery.Not(Func<IEdgeGremlinQuery, IGremlinQuery> notTraversal) => Not(notTraversal);
        IEdgeGremlinQuery IEdgeGremlinQuery.None() => None();

        TTargetQuery IEdgeGremlinQuery.Optional<TTargetQuery>(Func<IEdgeGremlinQuery, TTargetQuery> optionalTraversal) => Optional(optionalTraversal);
        IEdgeGremlinQuery IEdgeGremlinQuery.Or(params Func<IEdgeGremlinQuery, IGremlinQuery>[] orTraversals) => Or(orTraversals);

        IGremlinQuery<(TElement1, TElement2)> IEdgeGremlinQuery.Project<TElement1, TElement2>(Func<IEdgeGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery, IGremlinQuery<TElement2>> projection2) => Project<(TElement1, TElement2)>(projection1, projection2);
        IGremlinQuery<(TElement1, TElement2, TElement3)> IEdgeGremlinQuery.Project<TElement1, TElement2, TElement3>(Func<IEdgeGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery, IGremlinQuery<TElement3>> projection3) => Project<(TElement1, TElement2, TElement3)>(projection1, projection2, projection3);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4)> IEdgeGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4>(Func<IEdgeGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery, IGremlinQuery<TElement4>> projection4) => Project<(TElement1, TElement2, TElement3, TElement4)>(projection1, projection2, projection3, projection4);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5)> IEdgeGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4, TElement5>(Func<IEdgeGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery, IGremlinQuery<TElement4>> projection4, Func<IEdgeGremlinQuery, IGremlinQuery<TElement5>> projection5) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5)>(projection1, projection2, projection3, projection4, projection5);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6)> IEdgeGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6>(Func<IEdgeGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery, IGremlinQuery<TElement4>> projection4, Func<IEdgeGremlinQuery, IGremlinQuery<TElement5>> projection5, Func<IEdgeGremlinQuery, IGremlinQuery<TElement6>> projection6) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6)>(projection1, projection2, projection3, projection4, projection5, projection6);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7)> IEdgeGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7>(Func<IEdgeGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery, IGremlinQuery<TElement4>> projection4, Func<IEdgeGremlinQuery, IGremlinQuery<TElement5>> projection5, Func<IEdgeGremlinQuery, IGremlinQuery<TElement6>> projection6, Func<IEdgeGremlinQuery, IGremlinQuery<TElement7>> projection7) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8)> IEdgeGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8>(Func<IEdgeGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery, IGremlinQuery<TElement4>> projection4, Func<IEdgeGremlinQuery, IGremlinQuery<TElement5>> projection5, Func<IEdgeGremlinQuery, IGremlinQuery<TElement6>> projection6, Func<IEdgeGremlinQuery, IGremlinQuery<TElement7>> projection7, Func<IEdgeGremlinQuery, IGremlinQuery<TElement8>> projection8) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9)> IEdgeGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9>(Func<IEdgeGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery, IGremlinQuery<TElement4>> projection4, Func<IEdgeGremlinQuery, IGremlinQuery<TElement5>> projection5, Func<IEdgeGremlinQuery, IGremlinQuery<TElement6>> projection6, Func<IEdgeGremlinQuery, IGremlinQuery<TElement7>> projection7, Func<IEdgeGremlinQuery, IGremlinQuery<TElement8>> projection8, Func<IEdgeGremlinQuery, IGremlinQuery<TElement9>> projection9) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10)> IEdgeGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10>(Func<IEdgeGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery, IGremlinQuery<TElement4>> projection4, Func<IEdgeGremlinQuery, IGremlinQuery<TElement5>> projection5, Func<IEdgeGremlinQuery, IGremlinQuery<TElement6>> projection6, Func<IEdgeGremlinQuery, IGremlinQuery<TElement7>> projection7, Func<IEdgeGremlinQuery, IGremlinQuery<TElement8>> projection8, Func<IEdgeGremlinQuery, IGremlinQuery<TElement9>> projection9, Func<IEdgeGremlinQuery, IGremlinQuery<TElement10>> projection10) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11)> IEdgeGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11>(Func<IEdgeGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery, IGremlinQuery<TElement4>> projection4, Func<IEdgeGremlinQuery, IGremlinQuery<TElement5>> projection5, Func<IEdgeGremlinQuery, IGremlinQuery<TElement6>> projection6, Func<IEdgeGremlinQuery, IGremlinQuery<TElement7>> projection7, Func<IEdgeGremlinQuery, IGremlinQuery<TElement8>> projection8, Func<IEdgeGremlinQuery, IGremlinQuery<TElement9>> projection9, Func<IEdgeGremlinQuery, IGremlinQuery<TElement10>> projection10, Func<IEdgeGremlinQuery, IGremlinQuery<TElement11>> projection11) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12)> IEdgeGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12>(Func<IEdgeGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery, IGremlinQuery<TElement4>> projection4, Func<IEdgeGremlinQuery, IGremlinQuery<TElement5>> projection5, Func<IEdgeGremlinQuery, IGremlinQuery<TElement6>> projection6, Func<IEdgeGremlinQuery, IGremlinQuery<TElement7>> projection7, Func<IEdgeGremlinQuery, IGremlinQuery<TElement8>> projection8, Func<IEdgeGremlinQuery, IGremlinQuery<TElement9>> projection9, Func<IEdgeGremlinQuery, IGremlinQuery<TElement10>> projection10, Func<IEdgeGremlinQuery, IGremlinQuery<TElement11>> projection11, Func<IEdgeGremlinQuery, IGremlinQuery<TElement12>> projection12) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13)> IEdgeGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13>(Func<IEdgeGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery, IGremlinQuery<TElement4>> projection4, Func<IEdgeGremlinQuery, IGremlinQuery<TElement5>> projection5, Func<IEdgeGremlinQuery, IGremlinQuery<TElement6>> projection6, Func<IEdgeGremlinQuery, IGremlinQuery<TElement7>> projection7, Func<IEdgeGremlinQuery, IGremlinQuery<TElement8>> projection8, Func<IEdgeGremlinQuery, IGremlinQuery<TElement9>> projection9, Func<IEdgeGremlinQuery, IGremlinQuery<TElement10>> projection10, Func<IEdgeGremlinQuery, IGremlinQuery<TElement11>> projection11, Func<IEdgeGremlinQuery, IGremlinQuery<TElement12>> projection12, Func<IEdgeGremlinQuery, IGremlinQuery<TElement13>> projection13) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14)> IEdgeGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14>(Func<IEdgeGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery, IGremlinQuery<TElement4>> projection4, Func<IEdgeGremlinQuery, IGremlinQuery<TElement5>> projection5, Func<IEdgeGremlinQuery, IGremlinQuery<TElement6>> projection6, Func<IEdgeGremlinQuery, IGremlinQuery<TElement7>> projection7, Func<IEdgeGremlinQuery, IGremlinQuery<TElement8>> projection8, Func<IEdgeGremlinQuery, IGremlinQuery<TElement9>> projection9, Func<IEdgeGremlinQuery, IGremlinQuery<TElement10>> projection10, Func<IEdgeGremlinQuery, IGremlinQuery<TElement11>> projection11, Func<IEdgeGremlinQuery, IGremlinQuery<TElement12>> projection12, Func<IEdgeGremlinQuery, IGremlinQuery<TElement13>> projection13, Func<IEdgeGremlinQuery, IGremlinQuery<TElement14>> projection14) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15)> IEdgeGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15>(Func<IEdgeGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery, IGremlinQuery<TElement4>> projection4, Func<IEdgeGremlinQuery, IGremlinQuery<TElement5>> projection5, Func<IEdgeGremlinQuery, IGremlinQuery<TElement6>> projection6, Func<IEdgeGremlinQuery, IGremlinQuery<TElement7>> projection7, Func<IEdgeGremlinQuery, IGremlinQuery<TElement8>> projection8, Func<IEdgeGremlinQuery, IGremlinQuery<TElement9>> projection9, Func<IEdgeGremlinQuery, IGremlinQuery<TElement10>> projection10, Func<IEdgeGremlinQuery, IGremlinQuery<TElement11>> projection11, Func<IEdgeGremlinQuery, IGremlinQuery<TElement12>> projection12, Func<IEdgeGremlinQuery, IGremlinQuery<TElement13>> projection13, Func<IEdgeGremlinQuery, IGremlinQuery<TElement14>> projection14, Func<IEdgeGremlinQuery, IGremlinQuery<TElement15>> projection15) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15, TElement16)> IEdgeGremlinQuery.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15, TElement16>(Func<IEdgeGremlinQuery, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery, IGremlinQuery<TElement4>> projection4, Func<IEdgeGremlinQuery, IGremlinQuery<TElement5>> projection5, Func<IEdgeGremlinQuery, IGremlinQuery<TElement6>> projection6, Func<IEdgeGremlinQuery, IGremlinQuery<TElement7>> projection7, Func<IEdgeGremlinQuery, IGremlinQuery<TElement8>> projection8, Func<IEdgeGremlinQuery, IGremlinQuery<TElement9>> projection9, Func<IEdgeGremlinQuery, IGremlinQuery<TElement10>> projection10, Func<IEdgeGremlinQuery, IGremlinQuery<TElement11>> projection11, Func<IEdgeGremlinQuery, IGremlinQuery<TElement12>> projection12, Func<IEdgeGremlinQuery, IGremlinQuery<TElement13>> projection13, Func<IEdgeGremlinQuery, IGremlinQuery<TElement14>> projection14, Func<IEdgeGremlinQuery, IGremlinQuery<TElement15>> projection15, Func<IEdgeGremlinQuery, IGremlinQuery<TElement16>> projection16) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15, TElement16)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15, projection16);

        IGremlinQuery IEdgeGremlinQuery.Project(Func<IEdgeGremlinQuery, IGremlinQuery> projection1, Func<IEdgeGremlinQuery, IGremlinQuery> projection2) => Project<Unit>(projection1, projection2);
        IGremlinQuery IEdgeGremlinQuery.Project(Func<IEdgeGremlinQuery, IGremlinQuery> projection1, Func<IEdgeGremlinQuery, IGremlinQuery> projection2, Func<IEdgeGremlinQuery, IGremlinQuery> projection3) => Project<Unit>(projection1, projection2, projection3);
        IGremlinQuery IEdgeGremlinQuery.Project(Func<IEdgeGremlinQuery, IGremlinQuery> projection1, Func<IEdgeGremlinQuery, IGremlinQuery> projection2, Func<IEdgeGremlinQuery, IGremlinQuery> projection3, Func<IEdgeGremlinQuery, IGremlinQuery> projection4) => Project<Unit>(projection1, projection2, projection3, projection4);
        IGremlinQuery IEdgeGremlinQuery.Project(Func<IEdgeGremlinQuery, IGremlinQuery> projection1, Func<IEdgeGremlinQuery, IGremlinQuery> projection2, Func<IEdgeGremlinQuery, IGremlinQuery> projection3, Func<IEdgeGremlinQuery, IGremlinQuery> projection4, Func<IEdgeGremlinQuery, IGremlinQuery> projection5) => Project<Unit>(projection1, projection2, projection3, projection4, projection5);
        IGremlinQuery IEdgeGremlinQuery.Project(Func<IEdgeGremlinQuery, IGremlinQuery> projection1, Func<IEdgeGremlinQuery, IGremlinQuery> projection2, Func<IEdgeGremlinQuery, IGremlinQuery> projection3, Func<IEdgeGremlinQuery, IGremlinQuery> projection4, Func<IEdgeGremlinQuery, IGremlinQuery> projection5, Func<IEdgeGremlinQuery, IGremlinQuery> projection6) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6);
        IGremlinQuery IEdgeGremlinQuery.Project(Func<IEdgeGremlinQuery, IGremlinQuery> projection1, Func<IEdgeGremlinQuery, IGremlinQuery> projection2, Func<IEdgeGremlinQuery, IGremlinQuery> projection3, Func<IEdgeGremlinQuery, IGremlinQuery> projection4, Func<IEdgeGremlinQuery, IGremlinQuery> projection5, Func<IEdgeGremlinQuery, IGremlinQuery> projection6, Func<IEdgeGremlinQuery, IGremlinQuery> projection7) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7);
        IGremlinQuery IEdgeGremlinQuery.Project(Func<IEdgeGremlinQuery, IGremlinQuery> projection1, Func<IEdgeGremlinQuery, IGremlinQuery> projection2, Func<IEdgeGremlinQuery, IGremlinQuery> projection3, Func<IEdgeGremlinQuery, IGremlinQuery> projection4, Func<IEdgeGremlinQuery, IGremlinQuery> projection5, Func<IEdgeGremlinQuery, IGremlinQuery> projection6, Func<IEdgeGremlinQuery, IGremlinQuery> projection7, Func<IEdgeGremlinQuery, IGremlinQuery> projection8) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8);
        IGremlinQuery IEdgeGremlinQuery.Project(Func<IEdgeGremlinQuery, IGremlinQuery> projection1, Func<IEdgeGremlinQuery, IGremlinQuery> projection2, Func<IEdgeGremlinQuery, IGremlinQuery> projection3, Func<IEdgeGremlinQuery, IGremlinQuery> projection4, Func<IEdgeGremlinQuery, IGremlinQuery> projection5, Func<IEdgeGremlinQuery, IGremlinQuery> projection6, Func<IEdgeGremlinQuery, IGremlinQuery> projection7, Func<IEdgeGremlinQuery, IGremlinQuery> projection8, Func<IEdgeGremlinQuery, IGremlinQuery> projection9) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9);
        IGremlinQuery IEdgeGremlinQuery.Project(Func<IEdgeGremlinQuery, IGremlinQuery> projection1, Func<IEdgeGremlinQuery, IGremlinQuery> projection2, Func<IEdgeGremlinQuery, IGremlinQuery> projection3, Func<IEdgeGremlinQuery, IGremlinQuery> projection4, Func<IEdgeGremlinQuery, IGremlinQuery> projection5, Func<IEdgeGremlinQuery, IGremlinQuery> projection6, Func<IEdgeGremlinQuery, IGremlinQuery> projection7, Func<IEdgeGremlinQuery, IGremlinQuery> projection8, Func<IEdgeGremlinQuery, IGremlinQuery> projection9, Func<IEdgeGremlinQuery, IGremlinQuery> projection10) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10);
        IGremlinQuery IEdgeGremlinQuery.Project(Func<IEdgeGremlinQuery, IGremlinQuery> projection1, Func<IEdgeGremlinQuery, IGremlinQuery> projection2, Func<IEdgeGremlinQuery, IGremlinQuery> projection3, Func<IEdgeGremlinQuery, IGremlinQuery> projection4, Func<IEdgeGremlinQuery, IGremlinQuery> projection5, Func<IEdgeGremlinQuery, IGremlinQuery> projection6, Func<IEdgeGremlinQuery, IGremlinQuery> projection7, Func<IEdgeGremlinQuery, IGremlinQuery> projection8, Func<IEdgeGremlinQuery, IGremlinQuery> projection9, Func<IEdgeGremlinQuery, IGremlinQuery> projection10, Func<IEdgeGremlinQuery, IGremlinQuery> projection11) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11);
        IGremlinQuery IEdgeGremlinQuery.Project(Func<IEdgeGremlinQuery, IGremlinQuery> projection1, Func<IEdgeGremlinQuery, IGremlinQuery> projection2, Func<IEdgeGremlinQuery, IGremlinQuery> projection3, Func<IEdgeGremlinQuery, IGremlinQuery> projection4, Func<IEdgeGremlinQuery, IGremlinQuery> projection5, Func<IEdgeGremlinQuery, IGremlinQuery> projection6, Func<IEdgeGremlinQuery, IGremlinQuery> projection7, Func<IEdgeGremlinQuery, IGremlinQuery> projection8, Func<IEdgeGremlinQuery, IGremlinQuery> projection9, Func<IEdgeGremlinQuery, IGremlinQuery> projection10, Func<IEdgeGremlinQuery, IGremlinQuery> projection11, Func<IEdgeGremlinQuery, IGremlinQuery> projection12) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12);
        IGremlinQuery IEdgeGremlinQuery.Project(Func<IEdgeGremlinQuery, IGremlinQuery> projection1, Func<IEdgeGremlinQuery, IGremlinQuery> projection2, Func<IEdgeGremlinQuery, IGremlinQuery> projection3, Func<IEdgeGremlinQuery, IGremlinQuery> projection4, Func<IEdgeGremlinQuery, IGremlinQuery> projection5, Func<IEdgeGremlinQuery, IGremlinQuery> projection6, Func<IEdgeGremlinQuery, IGremlinQuery> projection7, Func<IEdgeGremlinQuery, IGremlinQuery> projection8, Func<IEdgeGremlinQuery, IGremlinQuery> projection9, Func<IEdgeGremlinQuery, IGremlinQuery> projection10, Func<IEdgeGremlinQuery, IGremlinQuery> projection11, Func<IEdgeGremlinQuery, IGremlinQuery> projection12, Func<IEdgeGremlinQuery, IGremlinQuery> projection13) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13);
        IGremlinQuery IEdgeGremlinQuery.Project(Func<IEdgeGremlinQuery, IGremlinQuery> projection1, Func<IEdgeGremlinQuery, IGremlinQuery> projection2, Func<IEdgeGremlinQuery, IGremlinQuery> projection3, Func<IEdgeGremlinQuery, IGremlinQuery> projection4, Func<IEdgeGremlinQuery, IGremlinQuery> projection5, Func<IEdgeGremlinQuery, IGremlinQuery> projection6, Func<IEdgeGremlinQuery, IGremlinQuery> projection7, Func<IEdgeGremlinQuery, IGremlinQuery> projection8, Func<IEdgeGremlinQuery, IGremlinQuery> projection9, Func<IEdgeGremlinQuery, IGremlinQuery> projection10, Func<IEdgeGremlinQuery, IGremlinQuery> projection11, Func<IEdgeGremlinQuery, IGremlinQuery> projection12, Func<IEdgeGremlinQuery, IGremlinQuery> projection13, Func<IEdgeGremlinQuery, IGremlinQuery> projection14) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14);
        IGremlinQuery IEdgeGremlinQuery.Project(Func<IEdgeGremlinQuery, IGremlinQuery> projection1, Func<IEdgeGremlinQuery, IGremlinQuery> projection2, Func<IEdgeGremlinQuery, IGremlinQuery> projection3, Func<IEdgeGremlinQuery, IGremlinQuery> projection4, Func<IEdgeGremlinQuery, IGremlinQuery> projection5, Func<IEdgeGremlinQuery, IGremlinQuery> projection6, Func<IEdgeGremlinQuery, IGremlinQuery> projection7, Func<IEdgeGremlinQuery, IGremlinQuery> projection8, Func<IEdgeGremlinQuery, IGremlinQuery> projection9, Func<IEdgeGremlinQuery, IGremlinQuery> projection10, Func<IEdgeGremlinQuery, IGremlinQuery> projection11, Func<IEdgeGremlinQuery, IGremlinQuery> projection12, Func<IEdgeGremlinQuery, IGremlinQuery> projection13, Func<IEdgeGremlinQuery, IGremlinQuery> projection14, Func<IEdgeGremlinQuery, IGremlinQuery> projection15) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15);
        IGremlinQuery IEdgeGremlinQuery.Project(Func<IEdgeGremlinQuery, IGremlinQuery> projection1, Func<IEdgeGremlinQuery, IGremlinQuery> projection2, Func<IEdgeGremlinQuery, IGremlinQuery> projection3, Func<IEdgeGremlinQuery, IGremlinQuery> projection4, Func<IEdgeGremlinQuery, IGremlinQuery> projection5, Func<IEdgeGremlinQuery, IGremlinQuery> projection6, Func<IEdgeGremlinQuery, IGremlinQuery> projection7, Func<IEdgeGremlinQuery, IGremlinQuery> projection8, Func<IEdgeGremlinQuery, IGremlinQuery> projection9, Func<IEdgeGremlinQuery, IGremlinQuery> projection10, Func<IEdgeGremlinQuery, IGremlinQuery> projection11, Func<IEdgeGremlinQuery, IGremlinQuery> projection12, Func<IEdgeGremlinQuery, IGremlinQuery> projection13, Func<IEdgeGremlinQuery, IGremlinQuery> projection14, Func<IEdgeGremlinQuery, IGremlinQuery> projection15, Func<IEdgeGremlinQuery, IGremlinQuery> projection16) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15, projection16);

        IGremlinQuery<object> IEdgeGremlinQuery.Project(Func<IProjectBuilder<IEdgeGremlinQuery>, IProjectBuilder<IEdgeGremlinQuery>> continuation) => Project(continuation);

        IEdgeGremlinQuery IEdgeGremlinQuery.Range(long low, long high) => Range(low, high);

        IEdgeGremlinQuery IEdgeGremlinQuery.Repeat(Func<IEdgeGremlinQuery, IEdgeGremlinQuery> repeatTraversal) => Repeat(repeatTraversal);
        IEdgeGremlinQuery IEdgeGremlinQuery.RepeatUntil(Func<IEdgeGremlinQuery, IEdgeGremlinQuery> repeatTraversal, Func<IEdgeGremlinQuery, IGremlinQuery> untilTraversal) => RepeatUntil(repeatTraversal, untilTraversal);
        IEdgeGremlinQuery IEdgeGremlinQuery.UntilRepeat(Func<IEdgeGremlinQuery, IEdgeGremlinQuery> repeatTraversal, Func<IEdgeGremlinQuery, IGremlinQuery> untilTraversal) => UntilRepeat(repeatTraversal, untilTraversal);

        IEdgeGremlinQuery IEdgeGremlinQuery.SideEffect(Func<IEdgeGremlinQuery, IGremlinQuery> sideEffectTraversal) => SideEffect(sideEffectTraversal);
        IEdgeGremlinQuery IEdgeGremlinQuery.Skip(long count) => Skip(count);

        IEdgeGremlinQuery IEdgeGremlinQuery.Tail(long count) => Tail(count);
        IEdgeGremlinQuery IEdgeGremlinQuery.TailLocal(int count) => TailLocal(count);

        IEdgeGremlinQuery IEdgeGremlinQuery.Times(int count) => Times(count);

        TTargetQuery IEdgeGremlinQuery.Union<TTargetQuery>(params Func<IEdgeGremlinQuery, TTargetQuery>[] unionTraversals) => Union(unionTraversals);
        IGremlinQuery<TElement> IGremlinQuery<TElement>.And(params Func<IGremlinQuery<TElement>, IGremlinQuery>[] andTraversals) => And(andTraversals);
        IGremlinQuery<TElement> IGremlinQuery<TElement>.As(params StepLabel[] stepLabels) => As(stepLabels);

        IGremlinQuery<TElement> IGremlinQuery<TElement>.Barrier() => Barrier();

        TTargetQuery IGremlinQuery<TElement>.Choose<TTargetQuery>(Func<IGremlinQuery<TElement>, IGremlinQuery> traversalPredicate, Func<IGremlinQuery<TElement>, TTargetQuery> trueChoice, Func<IGremlinQuery<TElement>, TTargetQuery> falseChoice) => Choose(traversalPredicate, trueChoice, falseChoice);
        TTargetQuery IGremlinQuery<TElement>.Choose<TTargetQuery>(Func<IGremlinQuery<TElement>, IGremlinQuery> traversalPredicate, Func<IGremlinQuery<TElement>, TTargetQuery> trueChoice) => Choose(traversalPredicate, trueChoice);
        TTargetQuery IGremlinQuery<TElement>.Choose<TTargetQuery>(Func<IChooseBuilder<IGremlinQuery<TElement>>, IChooseBuilderWithCaseOrDefault<TTargetQuery>> continuation) => Choose<TTargetQuery>(continuation);

        TTargetQuery IGremlinQuery<TElement>.Coalesce<TTargetQuery>(params Func<IGremlinQuery<TElement>, TTargetQuery>[] traversals) => Coalesce(traversals);

        IGremlinQuery<TElement> IGremlinQuery<TElement>.Dedup() => Dedup();
        IGremlinQuery<TElement> IGremlinQuery<TElement>.Drop() => Drop();

        IGremlinQuery<TElement> IGremlinQuery<TElement>.Emit() => Emit();

        IGremlinQuery<TElement> IGremlinQuery<TElement>.Where(string lambda) => Where(lambda);

        TTargetQuery IGremlinQuery<TElement>.FlatMap<TTargetQuery>(Func<IGremlinQuery<TElement>, TTargetQuery> mapping) => FlatMap(mapping);

        IGremlinQuery<TElement> IGremlinQuery<TElement>.Identity() => Identity();

        IGremlinQuery<TElement> IGremlinQuery<TElement>.Limit(long count) => Limit(count);
        IGremlinQuery<TElement> IGremlinQuery<TElement>.LimitLocal(long count) => LimitLocal(count);

        TTargetQuery IGremlinQuery<TElement>.Local<TTargetQuery>(Func<IGremlinQuery<TElement> , TTargetQuery> localTraversal) => Local(localTraversal);

        TTargetQuery IGremlinQuery<TElement>.Map<TTargetQuery>(Func<IGremlinQuery<TElement>, TTargetQuery> mapping) => Map(mapping);
        
        IGremlinQuery<TElement> IGremlinQuery<TElement>.Not(Func<IGremlinQuery<TElement>, IGremlinQuery> notTraversal) => Not(notTraversal);
        IGremlinQuery<TElement> IGremlinQuery<TElement>.None() => None();

        TTargetQuery IGremlinQuery<TElement>.Optional<TTargetQuery>(Func<IGremlinQuery<TElement>, TTargetQuery> optionalTraversal) => Optional(optionalTraversal);
        IGremlinQuery<TElement> IGremlinQuery<TElement>.Or(params Func<IGremlinQuery<TElement>, IGremlinQuery>[] orTraversals) => Or(orTraversals);

        IGremlinQuery<(TElement1, TElement2)> IGremlinQuery<TElement>.Project<TElement1, TElement2>(Func<IGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2) => Project<(TElement1, TElement2)>(projection1, projection2);
        IGremlinQuery<(TElement1, TElement2, TElement3)> IGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3>(Func<IGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3) => Project<(TElement1, TElement2, TElement3)>(projection1, projection2, projection3);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4)> IGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4>(Func<IGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4) => Project<(TElement1, TElement2, TElement3, TElement4)>(projection1, projection2, projection3, projection4);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5)> IGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5>(Func<IGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5)>(projection1, projection2, projection3, projection4, projection5);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6)> IGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6>(Func<IGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6)>(projection1, projection2, projection3, projection4, projection5, projection6);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7)> IGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7>(Func<IGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8)> IGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8>(Func<IGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9)> IGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9>(Func<IGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement9>> projection9) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10)> IGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10>(Func<IGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement9>> projection9, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement10>> projection10) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11)> IGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11>(Func<IGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement9>> projection9, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement10>> projection10, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement11>> projection11) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12)> IGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12>(Func<IGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement9>> projection9, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement10>> projection10, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement11>> projection11, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement12>> projection12) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13)> IGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13>(Func<IGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement9>> projection9, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement10>> projection10, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement11>> projection11, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement12>> projection12, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement13>> projection13) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14)> IGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14>(Func<IGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement9>> projection9, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement10>> projection10, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement11>> projection11, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement12>> projection12, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement13>> projection13, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement14>> projection14) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15)> IGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15>(Func<IGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement9>> projection9, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement10>> projection10, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement11>> projection11, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement12>> projection12, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement13>> projection13, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement14>> projection14, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement15>> projection15) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15, TElement16)> IGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15, TElement16>(Func<IGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement9>> projection9, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement10>> projection10, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement11>> projection11, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement12>> projection12, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement13>> projection13, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement14>> projection14, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement15>> projection15, Func<IGremlinQuery<TElement>, IGremlinQuery<TElement16>> projection16) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15, TElement16)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15, projection16);

        IGremlinQuery IGremlinQuery<TElement>.Project(Func<IGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IGremlinQuery<TElement>, IGremlinQuery> projection2) => Project<Unit>(projection1, projection2);
        IGremlinQuery IGremlinQuery<TElement>.Project(Func<IGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IGremlinQuery<TElement>, IGremlinQuery> projection3) => Project<Unit>(projection1, projection2, projection3);
        IGremlinQuery IGremlinQuery<TElement>.Project(Func<IGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IGremlinQuery<TElement>, IGremlinQuery> projection4) => Project<Unit>(projection1, projection2, projection3, projection4);
        IGremlinQuery IGremlinQuery<TElement>.Project(Func<IGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IGremlinQuery<TElement>, IGremlinQuery> projection5) => Project<Unit>(projection1, projection2, projection3, projection4, projection5);
        IGremlinQuery IGremlinQuery<TElement>.Project(Func<IGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IGremlinQuery<TElement>, IGremlinQuery> projection6) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6);
        IGremlinQuery IGremlinQuery<TElement>.Project(Func<IGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IGremlinQuery<TElement>, IGremlinQuery> projection7) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7);
        IGremlinQuery IGremlinQuery<TElement>.Project(Func<IGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IGremlinQuery<TElement>, IGremlinQuery> projection8) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8);
        IGremlinQuery IGremlinQuery<TElement>.Project(Func<IGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IGremlinQuery<TElement>, IGremlinQuery> projection8, Func<IGremlinQuery<TElement>, IGremlinQuery> projection9) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9);
        IGremlinQuery IGremlinQuery<TElement>.Project(Func<IGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IGremlinQuery<TElement>, IGremlinQuery> projection8, Func<IGremlinQuery<TElement>, IGremlinQuery> projection9, Func<IGremlinQuery<TElement>, IGremlinQuery> projection10) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10);
        IGremlinQuery IGremlinQuery<TElement>.Project(Func<IGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IGremlinQuery<TElement>, IGremlinQuery> projection8, Func<IGremlinQuery<TElement>, IGremlinQuery> projection9, Func<IGremlinQuery<TElement>, IGremlinQuery> projection10, Func<IGremlinQuery<TElement>, IGremlinQuery> projection11) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11);
        IGremlinQuery IGremlinQuery<TElement>.Project(Func<IGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IGremlinQuery<TElement>, IGremlinQuery> projection8, Func<IGremlinQuery<TElement>, IGremlinQuery> projection9, Func<IGremlinQuery<TElement>, IGremlinQuery> projection10, Func<IGremlinQuery<TElement>, IGremlinQuery> projection11, Func<IGremlinQuery<TElement>, IGremlinQuery> projection12) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12);
        IGremlinQuery IGremlinQuery<TElement>.Project(Func<IGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IGremlinQuery<TElement>, IGremlinQuery> projection8, Func<IGremlinQuery<TElement>, IGremlinQuery> projection9, Func<IGremlinQuery<TElement>, IGremlinQuery> projection10, Func<IGremlinQuery<TElement>, IGremlinQuery> projection11, Func<IGremlinQuery<TElement>, IGremlinQuery> projection12, Func<IGremlinQuery<TElement>, IGremlinQuery> projection13) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13);
        IGremlinQuery IGremlinQuery<TElement>.Project(Func<IGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IGremlinQuery<TElement>, IGremlinQuery> projection8, Func<IGremlinQuery<TElement>, IGremlinQuery> projection9, Func<IGremlinQuery<TElement>, IGremlinQuery> projection10, Func<IGremlinQuery<TElement>, IGremlinQuery> projection11, Func<IGremlinQuery<TElement>, IGremlinQuery> projection12, Func<IGremlinQuery<TElement>, IGremlinQuery> projection13, Func<IGremlinQuery<TElement>, IGremlinQuery> projection14) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14);
        IGremlinQuery IGremlinQuery<TElement>.Project(Func<IGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IGremlinQuery<TElement>, IGremlinQuery> projection8, Func<IGremlinQuery<TElement>, IGremlinQuery> projection9, Func<IGremlinQuery<TElement>, IGremlinQuery> projection10, Func<IGremlinQuery<TElement>, IGremlinQuery> projection11, Func<IGremlinQuery<TElement>, IGremlinQuery> projection12, Func<IGremlinQuery<TElement>, IGremlinQuery> projection13, Func<IGremlinQuery<TElement>, IGremlinQuery> projection14, Func<IGremlinQuery<TElement>, IGremlinQuery> projection15) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15);
        IGremlinQuery IGremlinQuery<TElement>.Project(Func<IGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IGremlinQuery<TElement>, IGremlinQuery> projection8, Func<IGremlinQuery<TElement>, IGremlinQuery> projection9, Func<IGremlinQuery<TElement>, IGremlinQuery> projection10, Func<IGremlinQuery<TElement>, IGremlinQuery> projection11, Func<IGremlinQuery<TElement>, IGremlinQuery> projection12, Func<IGremlinQuery<TElement>, IGremlinQuery> projection13, Func<IGremlinQuery<TElement>, IGremlinQuery> projection14, Func<IGremlinQuery<TElement>, IGremlinQuery> projection15, Func<IGremlinQuery<TElement>, IGremlinQuery> projection16) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15, projection16);

        IGremlinQuery<object> IGremlinQuery<TElement>.Project(Func<IProjectBuilder<IGremlinQuery<TElement>>, IProjectBuilder<IGremlinQuery<TElement>>> continuation) => Project(continuation);

        IGremlinQuery<TElement> IGremlinQuery<TElement>.Range(long low, long high) => Range(low, high);

        IGremlinQuery<TElement> IGremlinQuery<TElement>.Repeat(Func<IGremlinQuery<TElement>, IGremlinQuery<TElement>> repeatTraversal) => Repeat(repeatTraversal);
        IGremlinQuery<TElement> IGremlinQuery<TElement>.RepeatUntil(Func<IGremlinQuery<TElement>, IGremlinQuery<TElement>> repeatTraversal, Func<IGremlinQuery<TElement>, IGremlinQuery> untilTraversal) => RepeatUntil(repeatTraversal, untilTraversal);
        IGremlinQuery<TElement> IGremlinQuery<TElement>.UntilRepeat(Func<IGremlinQuery<TElement>, IGremlinQuery<TElement>> repeatTraversal, Func<IGremlinQuery<TElement>, IGremlinQuery> untilTraversal) => UntilRepeat(repeatTraversal, untilTraversal);

        IGremlinQuery<TElement> IGremlinQuery<TElement>.SideEffect(Func<IGremlinQuery<TElement>, IGremlinQuery> sideEffectTraversal) => SideEffect(sideEffectTraversal);
        IGremlinQuery<TElement> IGremlinQuery<TElement>.Skip(long count) => Skip(count);

        IGremlinQuery<TElement> IGremlinQuery<TElement>.Tail(long count) => Tail(count);
        IGremlinQuery<TElement> IGremlinQuery<TElement>.TailLocal(int count) => TailLocal(count);

        IGremlinQuery<TElement> IGremlinQuery<TElement>.Times(int count) => Times(count);

        TTargetQuery IGremlinQuery<TElement>.Union<TTargetQuery>(params Func<IGremlinQuery<TElement>, TTargetQuery>[] unionTraversals) => Union(unionTraversals);
        IValueGremlinQuery<TElement> IValueGremlinQuery<TElement>.And(params Func<IValueGremlinQuery<TElement>, IGremlinQuery>[] andTraversals) => And(andTraversals);
        IValueGremlinQuery<TElement> IValueGremlinQuery<TElement>.As(params StepLabel[] stepLabels) => As(stepLabels);

        IValueGremlinQuery<TElement> IValueGremlinQuery<TElement>.Barrier() => Barrier();

        TTargetQuery IValueGremlinQuery<TElement>.Choose<TTargetQuery>(Func<IValueGremlinQuery<TElement>, IGremlinQuery> traversalPredicate, Func<IValueGremlinQuery<TElement>, TTargetQuery> trueChoice, Func<IValueGremlinQuery<TElement>, TTargetQuery> falseChoice) => Choose(traversalPredicate, trueChoice, falseChoice);
        TTargetQuery IValueGremlinQuery<TElement>.Choose<TTargetQuery>(Func<IValueGremlinQuery<TElement>, IGremlinQuery> traversalPredicate, Func<IValueGremlinQuery<TElement>, TTargetQuery> trueChoice) => Choose(traversalPredicate, trueChoice);
        TTargetQuery IValueGremlinQuery<TElement>.Choose<TTargetQuery>(Func<IChooseBuilder<IValueGremlinQuery<TElement>>, IChooseBuilderWithCaseOrDefault<TTargetQuery>> continuation) => Choose<TTargetQuery>(continuation);

        TTargetQuery IValueGremlinQuery<TElement>.Coalesce<TTargetQuery>(params Func<IValueGremlinQuery<TElement>, TTargetQuery>[] traversals) => Coalesce(traversals);

        IValueGremlinQuery<TElement> IValueGremlinQuery<TElement>.Dedup() => Dedup();
        IValueGremlinQuery<TElement> IValueGremlinQuery<TElement>.Drop() => Drop();

        IValueGremlinQuery<TElement> IValueGremlinQuery<TElement>.Emit() => Emit();

        IValueGremlinQuery<TElement> IValueGremlinQuery<TElement>.Where(string lambda) => Where(lambda);

        TTargetQuery IValueGremlinQuery<TElement>.FlatMap<TTargetQuery>(Func<IValueGremlinQuery<TElement>, TTargetQuery> mapping) => FlatMap(mapping);

        IValueGremlinQuery<TElement> IValueGremlinQuery<TElement>.Identity() => Identity();

        IValueGremlinQuery<TElement> IValueGremlinQuery<TElement>.Limit(long count) => Limit(count);
        IValueGremlinQuery<TElement> IValueGremlinQuery<TElement>.LimitLocal(long count) => LimitLocal(count);

        TTargetQuery IValueGremlinQuery<TElement>.Local<TTargetQuery>(Func<IValueGremlinQuery<TElement> , TTargetQuery> localTraversal) => Local(localTraversal);

        TTargetQuery IValueGremlinQuery<TElement>.Map<TTargetQuery>(Func<IValueGremlinQuery<TElement>, TTargetQuery> mapping) => Map(mapping);
        
        IValueGremlinQuery<TElement> IValueGremlinQuery<TElement>.Not(Func<IValueGremlinQuery<TElement>, IGremlinQuery> notTraversal) => Not(notTraversal);
        IValueGremlinQuery<TElement> IValueGremlinQuery<TElement>.None() => None();

        TTargetQuery IValueGremlinQuery<TElement>.Optional<TTargetQuery>(Func<IValueGremlinQuery<TElement>, TTargetQuery> optionalTraversal) => Optional(optionalTraversal);
        IValueGremlinQuery<TElement> IValueGremlinQuery<TElement>.Or(params Func<IValueGremlinQuery<TElement>, IGremlinQuery>[] orTraversals) => Or(orTraversals);

        IGremlinQuery<(TElement1, TElement2)> IValueGremlinQuery<TElement>.Project<TElement1, TElement2>(Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2) => Project<(TElement1, TElement2)>(projection1, projection2);
        IGremlinQuery<(TElement1, TElement2, TElement3)> IValueGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3>(Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3) => Project<(TElement1, TElement2, TElement3)>(projection1, projection2, projection3);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4)> IValueGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4>(Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4) => Project<(TElement1, TElement2, TElement3, TElement4)>(projection1, projection2, projection3, projection4);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5)> IValueGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5>(Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5)>(projection1, projection2, projection3, projection4, projection5);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6)> IValueGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6>(Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6)>(projection1, projection2, projection3, projection4, projection5, projection6);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7)> IValueGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7>(Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8)> IValueGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8>(Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9)> IValueGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9>(Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement9>> projection9) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10)> IValueGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10>(Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement9>> projection9, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement10>> projection10) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11)> IValueGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11>(Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement9>> projection9, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement10>> projection10, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement11>> projection11) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12)> IValueGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12>(Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement9>> projection9, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement10>> projection10, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement11>> projection11, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement12>> projection12) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13)> IValueGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13>(Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement9>> projection9, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement10>> projection10, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement11>> projection11, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement12>> projection12, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement13>> projection13) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14)> IValueGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14>(Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement9>> projection9, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement10>> projection10, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement11>> projection11, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement12>> projection12, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement13>> projection13, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement14>> projection14) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15)> IValueGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15>(Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement9>> projection9, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement10>> projection10, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement11>> projection11, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement12>> projection12, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement13>> projection13, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement14>> projection14, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement15>> projection15) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15, TElement16)> IValueGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15, TElement16>(Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement9>> projection9, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement10>> projection10, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement11>> projection11, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement12>> projection12, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement13>> projection13, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement14>> projection14, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement15>> projection15, Func<IValueGremlinQuery<TElement>, IGremlinQuery<TElement16>> projection16) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15, TElement16)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15, projection16);

        IGremlinQuery IValueGremlinQuery<TElement>.Project(Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection2) => Project<Unit>(projection1, projection2);
        IGremlinQuery IValueGremlinQuery<TElement>.Project(Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection3) => Project<Unit>(projection1, projection2, projection3);
        IGremlinQuery IValueGremlinQuery<TElement>.Project(Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection4) => Project<Unit>(projection1, projection2, projection3, projection4);
        IGremlinQuery IValueGremlinQuery<TElement>.Project(Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection5) => Project<Unit>(projection1, projection2, projection3, projection4, projection5);
        IGremlinQuery IValueGremlinQuery<TElement>.Project(Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection6) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6);
        IGremlinQuery IValueGremlinQuery<TElement>.Project(Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection7) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7);
        IGremlinQuery IValueGremlinQuery<TElement>.Project(Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection8) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8);
        IGremlinQuery IValueGremlinQuery<TElement>.Project(Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection8, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection9) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9);
        IGremlinQuery IValueGremlinQuery<TElement>.Project(Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection8, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection9, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection10) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10);
        IGremlinQuery IValueGremlinQuery<TElement>.Project(Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection8, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection9, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection10, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection11) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11);
        IGremlinQuery IValueGremlinQuery<TElement>.Project(Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection8, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection9, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection10, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection11, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection12) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12);
        IGremlinQuery IValueGremlinQuery<TElement>.Project(Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection8, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection9, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection10, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection11, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection12, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection13) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13);
        IGremlinQuery IValueGremlinQuery<TElement>.Project(Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection8, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection9, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection10, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection11, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection12, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection13, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection14) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14);
        IGremlinQuery IValueGremlinQuery<TElement>.Project(Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection8, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection9, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection10, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection11, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection12, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection13, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection14, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection15) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15);
        IGremlinQuery IValueGremlinQuery<TElement>.Project(Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection8, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection9, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection10, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection11, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection12, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection13, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection14, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection15, Func<IValueGremlinQuery<TElement>, IGremlinQuery> projection16) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15, projection16);

        IGremlinQuery<object> IValueGremlinQuery<TElement>.Project(Func<IProjectBuilder<IValueGremlinQuery<TElement>>, IProjectBuilder<IValueGremlinQuery<TElement>>> continuation) => Project(continuation);

        IValueGremlinQuery<TElement> IValueGremlinQuery<TElement>.Range(long low, long high) => Range(low, high);

        IValueGremlinQuery<TElement> IValueGremlinQuery<TElement>.Repeat(Func<IValueGremlinQuery<TElement>, IValueGremlinQuery<TElement>> repeatTraversal) => Repeat(repeatTraversal);
        IValueGremlinQuery<TElement> IValueGremlinQuery<TElement>.RepeatUntil(Func<IValueGremlinQuery<TElement>, IValueGremlinQuery<TElement>> repeatTraversal, Func<IValueGremlinQuery<TElement>, IGremlinQuery> untilTraversal) => RepeatUntil(repeatTraversal, untilTraversal);
        IValueGremlinQuery<TElement> IValueGremlinQuery<TElement>.UntilRepeat(Func<IValueGremlinQuery<TElement>, IValueGremlinQuery<TElement>> repeatTraversal, Func<IValueGremlinQuery<TElement>, IGremlinQuery> untilTraversal) => UntilRepeat(repeatTraversal, untilTraversal);

        IValueGremlinQuery<TElement> IValueGremlinQuery<TElement>.SideEffect(Func<IValueGremlinQuery<TElement>, IGremlinQuery> sideEffectTraversal) => SideEffect(sideEffectTraversal);
        IValueGremlinQuery<TElement> IValueGremlinQuery<TElement>.Skip(long count) => Skip(count);

        IValueGremlinQuery<TElement> IValueGremlinQuery<TElement>.Tail(long count) => Tail(count);
        IValueGremlinQuery<TElement> IValueGremlinQuery<TElement>.TailLocal(int count) => TailLocal(count);

        IValueGremlinQuery<TElement> IValueGremlinQuery<TElement>.Times(int count) => Times(count);

        TTargetQuery IValueGremlinQuery<TElement>.Union<TTargetQuery>(params Func<IValueGremlinQuery<TElement>, TTargetQuery>[] unionTraversals) => Union(unionTraversals);
        IArrayGremlinQuery<TElement, TFoldedQuery> IArrayGremlinQuery<TElement, TFoldedQuery>.And(params Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery>[] andTraversals) => And(andTraversals);
        IArrayGremlinQuery<TElement, TFoldedQuery> IArrayGremlinQuery<TElement, TFoldedQuery>.As(params StepLabel[] stepLabels) => As(stepLabels);

        IArrayGremlinQuery<TElement, TFoldedQuery> IArrayGremlinQuery<TElement, TFoldedQuery>.Barrier() => Barrier();

        TTargetQuery IArrayGremlinQuery<TElement, TFoldedQuery>.Choose<TTargetQuery>(Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> traversalPredicate, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, TTargetQuery> trueChoice, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, TTargetQuery> falseChoice) => Choose(traversalPredicate, trueChoice, falseChoice);
        TTargetQuery IArrayGremlinQuery<TElement, TFoldedQuery>.Choose<TTargetQuery>(Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> traversalPredicate, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, TTargetQuery> trueChoice) => Choose(traversalPredicate, trueChoice);
        TTargetQuery IArrayGremlinQuery<TElement, TFoldedQuery>.Choose<TTargetQuery>(Func<IChooseBuilder<IArrayGremlinQuery<TElement, TFoldedQuery>>, IChooseBuilderWithCaseOrDefault<TTargetQuery>> continuation) => Choose<TTargetQuery>(continuation);

        TTargetQuery IArrayGremlinQuery<TElement, TFoldedQuery>.Coalesce<TTargetQuery>(params Func<IArrayGremlinQuery<TElement, TFoldedQuery>, TTargetQuery>[] traversals) => Coalesce(traversals);

        IArrayGremlinQuery<TElement, TFoldedQuery> IArrayGremlinQuery<TElement, TFoldedQuery>.Dedup() => Dedup();
        IArrayGremlinQuery<TElement, TFoldedQuery> IArrayGremlinQuery<TElement, TFoldedQuery>.Drop() => Drop();

        IArrayGremlinQuery<TElement, TFoldedQuery> IArrayGremlinQuery<TElement, TFoldedQuery>.Emit() => Emit();

        IArrayGremlinQuery<TElement, TFoldedQuery> IArrayGremlinQuery<TElement, TFoldedQuery>.Where(string lambda) => Where(lambda);

        TTargetQuery IArrayGremlinQuery<TElement, TFoldedQuery>.FlatMap<TTargetQuery>(Func<IArrayGremlinQuery<TElement, TFoldedQuery>, TTargetQuery> mapping) => FlatMap(mapping);

        IArrayGremlinQuery<TElement, TFoldedQuery> IArrayGremlinQuery<TElement, TFoldedQuery>.Identity() => Identity();

        IArrayGremlinQuery<TElement, TFoldedQuery> IArrayGremlinQuery<TElement, TFoldedQuery>.Limit(long count) => Limit(count);
        IArrayGremlinQuery<TElement, TFoldedQuery> IArrayGremlinQuery<TElement, TFoldedQuery>.LimitLocal(long count) => LimitLocal(count);

        TTargetQuery IArrayGremlinQuery<TElement, TFoldedQuery>.Local<TTargetQuery>(Func<IArrayGremlinQuery<TElement, TFoldedQuery> , TTargetQuery> localTraversal) => Local(localTraversal);

        TTargetQuery IArrayGremlinQuery<TElement, TFoldedQuery>.Map<TTargetQuery>(Func<IArrayGremlinQuery<TElement, TFoldedQuery>, TTargetQuery> mapping) => Map(mapping);
        
        IArrayGremlinQuery<TElement, TFoldedQuery> IArrayGremlinQuery<TElement, TFoldedQuery>.Not(Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> notTraversal) => Not(notTraversal);
        IArrayGremlinQuery<TElement, TFoldedQuery> IArrayGremlinQuery<TElement, TFoldedQuery>.None() => None();

        TTargetQuery IArrayGremlinQuery<TElement, TFoldedQuery>.Optional<TTargetQuery>(Func<IArrayGremlinQuery<TElement, TFoldedQuery>, TTargetQuery> optionalTraversal) => Optional(optionalTraversal);
        IArrayGremlinQuery<TElement, TFoldedQuery> IArrayGremlinQuery<TElement, TFoldedQuery>.Or(params Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery>[] orTraversals) => Or(orTraversals);

        IGremlinQuery<(TElement1, TElement2)> IArrayGremlinQuery<TElement, TFoldedQuery>.Project<TElement1, TElement2>(Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement1>> projection1, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement2>> projection2) => Project<(TElement1, TElement2)>(projection1, projection2);
        IGremlinQuery<(TElement1, TElement2, TElement3)> IArrayGremlinQuery<TElement, TFoldedQuery>.Project<TElement1, TElement2, TElement3>(Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement1>> projection1, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement2>> projection2, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement3>> projection3) => Project<(TElement1, TElement2, TElement3)>(projection1, projection2, projection3);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4)> IArrayGremlinQuery<TElement, TFoldedQuery>.Project<TElement1, TElement2, TElement3, TElement4>(Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement1>> projection1, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement2>> projection2, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement3>> projection3, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement4>> projection4) => Project<(TElement1, TElement2, TElement3, TElement4)>(projection1, projection2, projection3, projection4);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5)> IArrayGremlinQuery<TElement, TFoldedQuery>.Project<TElement1, TElement2, TElement3, TElement4, TElement5>(Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement1>> projection1, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement2>> projection2, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement3>> projection3, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement4>> projection4, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement5>> projection5) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5)>(projection1, projection2, projection3, projection4, projection5);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6)> IArrayGremlinQuery<TElement, TFoldedQuery>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6>(Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement1>> projection1, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement2>> projection2, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement3>> projection3, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement4>> projection4, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement5>> projection5, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement6>> projection6) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6)>(projection1, projection2, projection3, projection4, projection5, projection6);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7)> IArrayGremlinQuery<TElement, TFoldedQuery>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7>(Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement1>> projection1, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement2>> projection2, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement3>> projection3, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement4>> projection4, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement5>> projection5, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement6>> projection6, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement7>> projection7) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8)> IArrayGremlinQuery<TElement, TFoldedQuery>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8>(Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement1>> projection1, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement2>> projection2, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement3>> projection3, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement4>> projection4, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement5>> projection5, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement6>> projection6, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement7>> projection7, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement8>> projection8) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9)> IArrayGremlinQuery<TElement, TFoldedQuery>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9>(Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement1>> projection1, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement2>> projection2, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement3>> projection3, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement4>> projection4, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement5>> projection5, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement6>> projection6, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement7>> projection7, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement8>> projection8, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement9>> projection9) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10)> IArrayGremlinQuery<TElement, TFoldedQuery>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10>(Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement1>> projection1, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement2>> projection2, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement3>> projection3, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement4>> projection4, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement5>> projection5, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement6>> projection6, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement7>> projection7, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement8>> projection8, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement9>> projection9, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement10>> projection10) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11)> IArrayGremlinQuery<TElement, TFoldedQuery>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11>(Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement1>> projection1, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement2>> projection2, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement3>> projection3, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement4>> projection4, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement5>> projection5, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement6>> projection6, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement7>> projection7, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement8>> projection8, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement9>> projection9, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement10>> projection10, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement11>> projection11) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12)> IArrayGremlinQuery<TElement, TFoldedQuery>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12>(Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement1>> projection1, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement2>> projection2, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement3>> projection3, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement4>> projection4, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement5>> projection5, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement6>> projection6, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement7>> projection7, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement8>> projection8, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement9>> projection9, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement10>> projection10, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement11>> projection11, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement12>> projection12) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13)> IArrayGremlinQuery<TElement, TFoldedQuery>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13>(Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement1>> projection1, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement2>> projection2, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement3>> projection3, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement4>> projection4, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement5>> projection5, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement6>> projection6, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement7>> projection7, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement8>> projection8, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement9>> projection9, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement10>> projection10, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement11>> projection11, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement12>> projection12, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement13>> projection13) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14)> IArrayGremlinQuery<TElement, TFoldedQuery>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14>(Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement1>> projection1, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement2>> projection2, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement3>> projection3, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement4>> projection4, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement5>> projection5, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement6>> projection6, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement7>> projection7, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement8>> projection8, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement9>> projection9, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement10>> projection10, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement11>> projection11, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement12>> projection12, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement13>> projection13, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement14>> projection14) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15)> IArrayGremlinQuery<TElement, TFoldedQuery>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15>(Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement1>> projection1, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement2>> projection2, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement3>> projection3, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement4>> projection4, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement5>> projection5, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement6>> projection6, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement7>> projection7, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement8>> projection8, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement9>> projection9, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement10>> projection10, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement11>> projection11, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement12>> projection12, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement13>> projection13, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement14>> projection14, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement15>> projection15) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15, TElement16)> IArrayGremlinQuery<TElement, TFoldedQuery>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15, TElement16>(Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement1>> projection1, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement2>> projection2, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement3>> projection3, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement4>> projection4, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement5>> projection5, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement6>> projection6, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement7>> projection7, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement8>> projection8, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement9>> projection9, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement10>> projection10, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement11>> projection11, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement12>> projection12, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement13>> projection13, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement14>> projection14, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement15>> projection15, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery<TElement16>> projection16) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15, TElement16)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15, projection16);

        IGremlinQuery IArrayGremlinQuery<TElement, TFoldedQuery>.Project(Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection1, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection2) => Project<Unit>(projection1, projection2);
        IGremlinQuery IArrayGremlinQuery<TElement, TFoldedQuery>.Project(Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection1, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection2, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection3) => Project<Unit>(projection1, projection2, projection3);
        IGremlinQuery IArrayGremlinQuery<TElement, TFoldedQuery>.Project(Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection1, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection2, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection3, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection4) => Project<Unit>(projection1, projection2, projection3, projection4);
        IGremlinQuery IArrayGremlinQuery<TElement, TFoldedQuery>.Project(Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection1, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection2, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection3, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection4, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection5) => Project<Unit>(projection1, projection2, projection3, projection4, projection5);
        IGremlinQuery IArrayGremlinQuery<TElement, TFoldedQuery>.Project(Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection1, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection2, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection3, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection4, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection5, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection6) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6);
        IGremlinQuery IArrayGremlinQuery<TElement, TFoldedQuery>.Project(Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection1, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection2, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection3, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection4, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection5, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection6, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection7) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7);
        IGremlinQuery IArrayGremlinQuery<TElement, TFoldedQuery>.Project(Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection1, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection2, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection3, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection4, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection5, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection6, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection7, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection8) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8);
        IGremlinQuery IArrayGremlinQuery<TElement, TFoldedQuery>.Project(Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection1, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection2, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection3, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection4, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection5, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection6, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection7, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection8, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection9) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9);
        IGremlinQuery IArrayGremlinQuery<TElement, TFoldedQuery>.Project(Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection1, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection2, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection3, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection4, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection5, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection6, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection7, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection8, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection9, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection10) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10);
        IGremlinQuery IArrayGremlinQuery<TElement, TFoldedQuery>.Project(Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection1, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection2, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection3, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection4, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection5, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection6, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection7, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection8, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection9, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection10, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection11) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11);
        IGremlinQuery IArrayGremlinQuery<TElement, TFoldedQuery>.Project(Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection1, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection2, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection3, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection4, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection5, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection6, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection7, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection8, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection9, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection10, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection11, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection12) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12);
        IGremlinQuery IArrayGremlinQuery<TElement, TFoldedQuery>.Project(Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection1, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection2, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection3, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection4, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection5, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection6, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection7, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection8, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection9, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection10, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection11, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection12, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection13) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13);
        IGremlinQuery IArrayGremlinQuery<TElement, TFoldedQuery>.Project(Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection1, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection2, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection3, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection4, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection5, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection6, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection7, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection8, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection9, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection10, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection11, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection12, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection13, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection14) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14);
        IGremlinQuery IArrayGremlinQuery<TElement, TFoldedQuery>.Project(Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection1, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection2, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection3, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection4, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection5, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection6, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection7, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection8, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection9, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection10, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection11, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection12, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection13, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection14, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection15) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15);
        IGremlinQuery IArrayGremlinQuery<TElement, TFoldedQuery>.Project(Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection1, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection2, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection3, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection4, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection5, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection6, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection7, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection8, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection9, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection10, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection11, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection12, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection13, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection14, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection15, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> projection16) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15, projection16);

        IGremlinQuery<object> IArrayGremlinQuery<TElement, TFoldedQuery>.Project(Func<IProjectBuilder<IArrayGremlinQuery<TElement, TFoldedQuery>>, IProjectBuilder<IArrayGremlinQuery<TElement, TFoldedQuery>>> continuation) => Project(continuation);

        IArrayGremlinQuery<TElement, TFoldedQuery> IArrayGremlinQuery<TElement, TFoldedQuery>.Range(long low, long high) => Range(low, high);

        IArrayGremlinQuery<TElement, TFoldedQuery> IArrayGremlinQuery<TElement, TFoldedQuery>.Repeat(Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IArrayGremlinQuery<TElement, TFoldedQuery>> repeatTraversal) => Repeat(repeatTraversal);
        IArrayGremlinQuery<TElement, TFoldedQuery> IArrayGremlinQuery<TElement, TFoldedQuery>.RepeatUntil(Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IArrayGremlinQuery<TElement, TFoldedQuery>> repeatTraversal, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> untilTraversal) => RepeatUntil(repeatTraversal, untilTraversal);
        IArrayGremlinQuery<TElement, TFoldedQuery> IArrayGremlinQuery<TElement, TFoldedQuery>.UntilRepeat(Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IArrayGremlinQuery<TElement, TFoldedQuery>> repeatTraversal, Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> untilTraversal) => UntilRepeat(repeatTraversal, untilTraversal);

        IArrayGremlinQuery<TElement, TFoldedQuery> IArrayGremlinQuery<TElement, TFoldedQuery>.SideEffect(Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> sideEffectTraversal) => SideEffect(sideEffectTraversal);
        IArrayGremlinQuery<TElement, TFoldedQuery> IArrayGremlinQuery<TElement, TFoldedQuery>.Skip(long count) => Skip(count);

        IArrayGremlinQuery<TElement, TFoldedQuery> IArrayGremlinQuery<TElement, TFoldedQuery>.Tail(long count) => Tail(count);
        IArrayGremlinQuery<TElement, TFoldedQuery> IArrayGremlinQuery<TElement, TFoldedQuery>.TailLocal(int count) => TailLocal(count);

        IArrayGremlinQuery<TElement, TFoldedQuery> IArrayGremlinQuery<TElement, TFoldedQuery>.Times(int count) => Times(count);

        TTargetQuery IArrayGremlinQuery<TElement, TFoldedQuery>.Union<TTargetQuery>(params Func<IArrayGremlinQuery<TElement, TFoldedQuery>, TTargetQuery>[] unionTraversals) => Union(unionTraversals);
        IElementGremlinQuery<TElement> IElementGremlinQuery<TElement>.And(params Func<IElementGremlinQuery<TElement>, IGremlinQuery>[] andTraversals) => And(andTraversals);
        IElementGremlinQuery<TElement> IElementGremlinQuery<TElement>.As(params StepLabel[] stepLabels) => As(stepLabels);

        IElementGremlinQuery<TElement> IElementGremlinQuery<TElement>.Barrier() => Barrier();

        TTargetQuery IElementGremlinQuery<TElement>.Choose<TTargetQuery>(Func<IElementGremlinQuery<TElement>, IGremlinQuery> traversalPredicate, Func<IElementGremlinQuery<TElement>, TTargetQuery> trueChoice, Func<IElementGremlinQuery<TElement>, TTargetQuery> falseChoice) => Choose(traversalPredicate, trueChoice, falseChoice);
        TTargetQuery IElementGremlinQuery<TElement>.Choose<TTargetQuery>(Func<IElementGremlinQuery<TElement>, IGremlinQuery> traversalPredicate, Func<IElementGremlinQuery<TElement>, TTargetQuery> trueChoice) => Choose(traversalPredicate, trueChoice);
        TTargetQuery IElementGremlinQuery<TElement>.Choose<TTargetQuery>(Func<IChooseBuilder<IElementGremlinQuery<TElement>>, IChooseBuilderWithCaseOrDefault<TTargetQuery>> continuation) => Choose<TTargetQuery>(continuation);

        TTargetQuery IElementGremlinQuery<TElement>.Coalesce<TTargetQuery>(params Func<IElementGremlinQuery<TElement>, TTargetQuery>[] traversals) => Coalesce(traversals);

        IElementGremlinQuery<TElement> IElementGremlinQuery<TElement>.Dedup() => Dedup();
        IElementGremlinQuery<TElement> IElementGremlinQuery<TElement>.Drop() => Drop();

        IElementGremlinQuery<TElement> IElementGremlinQuery<TElement>.Emit() => Emit();

        IElementGremlinQuery<TElement> IElementGremlinQuery<TElement>.Where(string lambda) => Where(lambda);

        TTargetQuery IElementGremlinQuery<TElement>.FlatMap<TTargetQuery>(Func<IElementGremlinQuery<TElement>, TTargetQuery> mapping) => FlatMap(mapping);

        IElementGremlinQuery<TElement> IElementGremlinQuery<TElement>.Identity() => Identity();

        IElementGremlinQuery<TElement> IElementGremlinQuery<TElement>.Limit(long count) => Limit(count);
        IElementGremlinQuery<TElement> IElementGremlinQuery<TElement>.LimitLocal(long count) => LimitLocal(count);

        TTargetQuery IElementGremlinQuery<TElement>.Local<TTargetQuery>(Func<IElementGremlinQuery<TElement> , TTargetQuery> localTraversal) => Local(localTraversal);

        TTargetQuery IElementGremlinQuery<TElement>.Map<TTargetQuery>(Func<IElementGremlinQuery<TElement>, TTargetQuery> mapping) => Map(mapping);
        
        IElementGremlinQuery<TElement> IElementGremlinQuery<TElement>.Not(Func<IElementGremlinQuery<TElement>, IGremlinQuery> notTraversal) => Not(notTraversal);
        IElementGremlinQuery<TElement> IElementGremlinQuery<TElement>.None() => None();

        TTargetQuery IElementGremlinQuery<TElement>.Optional<TTargetQuery>(Func<IElementGremlinQuery<TElement>, TTargetQuery> optionalTraversal) => Optional(optionalTraversal);
        IElementGremlinQuery<TElement> IElementGremlinQuery<TElement>.Or(params Func<IElementGremlinQuery<TElement>, IGremlinQuery>[] orTraversals) => Or(orTraversals);

        IGremlinQuery<(TElement1, TElement2)> IElementGremlinQuery<TElement>.Project<TElement1, TElement2>(Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2) => Project<(TElement1, TElement2)>(projection1, projection2);
        IGremlinQuery<(TElement1, TElement2, TElement3)> IElementGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3>(Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3) => Project<(TElement1, TElement2, TElement3)>(projection1, projection2, projection3);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4)> IElementGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4>(Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4) => Project<(TElement1, TElement2, TElement3, TElement4)>(projection1, projection2, projection3, projection4);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5)> IElementGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5>(Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5)>(projection1, projection2, projection3, projection4, projection5);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6)> IElementGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6>(Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6)>(projection1, projection2, projection3, projection4, projection5, projection6);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7)> IElementGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7>(Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8)> IElementGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8>(Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9)> IElementGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9>(Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement9>> projection9) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10)> IElementGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10>(Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement9>> projection9, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement10>> projection10) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11)> IElementGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11>(Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement9>> projection9, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement10>> projection10, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement11>> projection11) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12)> IElementGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12>(Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement9>> projection9, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement10>> projection10, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement11>> projection11, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement12>> projection12) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13)> IElementGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13>(Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement9>> projection9, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement10>> projection10, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement11>> projection11, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement12>> projection12, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement13>> projection13) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14)> IElementGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14>(Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement9>> projection9, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement10>> projection10, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement11>> projection11, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement12>> projection12, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement13>> projection13, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement14>> projection14) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15)> IElementGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15>(Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement9>> projection9, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement10>> projection10, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement11>> projection11, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement12>> projection12, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement13>> projection13, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement14>> projection14, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement15>> projection15) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15, TElement16)> IElementGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15, TElement16>(Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement9>> projection9, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement10>> projection10, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement11>> projection11, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement12>> projection12, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement13>> projection13, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement14>> projection14, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement15>> projection15, Func<IElementGremlinQuery<TElement>, IGremlinQuery<TElement16>> projection16) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15, TElement16)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15, projection16);

        IGremlinQuery IElementGremlinQuery<TElement>.Project(Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection2) => Project<Unit>(projection1, projection2);
        IGremlinQuery IElementGremlinQuery<TElement>.Project(Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection3) => Project<Unit>(projection1, projection2, projection3);
        IGremlinQuery IElementGremlinQuery<TElement>.Project(Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection4) => Project<Unit>(projection1, projection2, projection3, projection4);
        IGremlinQuery IElementGremlinQuery<TElement>.Project(Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection5) => Project<Unit>(projection1, projection2, projection3, projection4, projection5);
        IGremlinQuery IElementGremlinQuery<TElement>.Project(Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection6) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6);
        IGremlinQuery IElementGremlinQuery<TElement>.Project(Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection7) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7);
        IGremlinQuery IElementGremlinQuery<TElement>.Project(Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection8) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8);
        IGremlinQuery IElementGremlinQuery<TElement>.Project(Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection8, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection9) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9);
        IGremlinQuery IElementGremlinQuery<TElement>.Project(Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection8, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection9, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection10) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10);
        IGremlinQuery IElementGremlinQuery<TElement>.Project(Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection8, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection9, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection10, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection11) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11);
        IGremlinQuery IElementGremlinQuery<TElement>.Project(Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection8, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection9, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection10, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection11, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection12) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12);
        IGremlinQuery IElementGremlinQuery<TElement>.Project(Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection8, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection9, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection10, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection11, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection12, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection13) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13);
        IGremlinQuery IElementGremlinQuery<TElement>.Project(Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection8, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection9, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection10, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection11, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection12, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection13, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection14) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14);
        IGremlinQuery IElementGremlinQuery<TElement>.Project(Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection8, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection9, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection10, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection11, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection12, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection13, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection14, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection15) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15);
        IGremlinQuery IElementGremlinQuery<TElement>.Project(Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection8, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection9, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection10, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection11, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection12, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection13, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection14, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection15, Func<IElementGremlinQuery<TElement>, IGremlinQuery> projection16) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15, projection16);

        IGremlinQuery<object> IElementGremlinQuery<TElement>.Project(Func<IProjectBuilder<IElementGremlinQuery<TElement>>, IProjectBuilder<IElementGremlinQuery<TElement>>> continuation) => Project(continuation);

        IElementGremlinQuery<TElement> IElementGremlinQuery<TElement>.Range(long low, long high) => Range(low, high);

        IElementGremlinQuery<TElement> IElementGremlinQuery<TElement>.Repeat(Func<IElementGremlinQuery<TElement>, IElementGremlinQuery<TElement>> repeatTraversal) => Repeat(repeatTraversal);
        IElementGremlinQuery<TElement> IElementGremlinQuery<TElement>.RepeatUntil(Func<IElementGremlinQuery<TElement>, IElementGremlinQuery<TElement>> repeatTraversal, Func<IElementGremlinQuery<TElement>, IGremlinQuery> untilTraversal) => RepeatUntil(repeatTraversal, untilTraversal);
        IElementGremlinQuery<TElement> IElementGremlinQuery<TElement>.UntilRepeat(Func<IElementGremlinQuery<TElement>, IElementGremlinQuery<TElement>> repeatTraversal, Func<IElementGremlinQuery<TElement>, IGremlinQuery> untilTraversal) => UntilRepeat(repeatTraversal, untilTraversal);

        IElementGremlinQuery<TElement> IElementGremlinQuery<TElement>.SideEffect(Func<IElementGremlinQuery<TElement>, IGremlinQuery> sideEffectTraversal) => SideEffect(sideEffectTraversal);
        IElementGremlinQuery<TElement> IElementGremlinQuery<TElement>.Skip(long count) => Skip(count);

        IElementGremlinQuery<TElement> IElementGremlinQuery<TElement>.Tail(long count) => Tail(count);
        IElementGremlinQuery<TElement> IElementGremlinQuery<TElement>.TailLocal(int count) => TailLocal(count);

        IElementGremlinQuery<TElement> IElementGremlinQuery<TElement>.Times(int count) => Times(count);

        TTargetQuery IElementGremlinQuery<TElement>.Union<TTargetQuery>(params Func<IElementGremlinQuery<TElement>, TTargetQuery>[] unionTraversals) => Union(unionTraversals);
        IVertexGremlinQuery<TElement> IVertexGremlinQuery<TElement>.And(params Func<IVertexGremlinQuery<TElement>, IGremlinQuery>[] andTraversals) => And(andTraversals);
        IVertexGremlinQuery<TElement> IVertexGremlinQuery<TElement>.As(params StepLabel[] stepLabels) => As(stepLabels);

        IVertexGremlinQuery<TElement> IVertexGremlinQuery<TElement>.Barrier() => Barrier();

        TTargetQuery IVertexGremlinQuery<TElement>.Choose<TTargetQuery>(Func<IVertexGremlinQuery<TElement>, IGremlinQuery> traversalPredicate, Func<IVertexGremlinQuery<TElement>, TTargetQuery> trueChoice, Func<IVertexGremlinQuery<TElement>, TTargetQuery> falseChoice) => Choose(traversalPredicate, trueChoice, falseChoice);
        TTargetQuery IVertexGremlinQuery<TElement>.Choose<TTargetQuery>(Func<IVertexGremlinQuery<TElement>, IGremlinQuery> traversalPredicate, Func<IVertexGremlinQuery<TElement>, TTargetQuery> trueChoice) => Choose(traversalPredicate, trueChoice);
        TTargetQuery IVertexGremlinQuery<TElement>.Choose<TTargetQuery>(Func<IChooseBuilder<IVertexGremlinQuery<TElement>>, IChooseBuilderWithCaseOrDefault<TTargetQuery>> continuation) => Choose<TTargetQuery>(continuation);

        TTargetQuery IVertexGremlinQuery<TElement>.Coalesce<TTargetQuery>(params Func<IVertexGremlinQuery<TElement>, TTargetQuery>[] traversals) => Coalesce(traversals);

        IVertexGremlinQuery<TElement> IVertexGremlinQuery<TElement>.Dedup() => Dedup();
        IVertexGremlinQuery<TElement> IVertexGremlinQuery<TElement>.Drop() => Drop();

        IVertexGremlinQuery<TElement> IVertexGremlinQuery<TElement>.Emit() => Emit();

        IVertexGremlinQuery<TElement> IVertexGremlinQuery<TElement>.Where(string lambda) => Where(lambda);

        TTargetQuery IVertexGremlinQuery<TElement>.FlatMap<TTargetQuery>(Func<IVertexGremlinQuery<TElement>, TTargetQuery> mapping) => FlatMap(mapping);

        IVertexGremlinQuery<TElement> IVertexGremlinQuery<TElement>.Identity() => Identity();

        IVertexGremlinQuery<TElement> IVertexGremlinQuery<TElement>.Limit(long count) => Limit(count);
        IVertexGremlinQuery<TElement> IVertexGremlinQuery<TElement>.LimitLocal(long count) => LimitLocal(count);

        TTargetQuery IVertexGremlinQuery<TElement>.Local<TTargetQuery>(Func<IVertexGremlinQuery<TElement> , TTargetQuery> localTraversal) => Local(localTraversal);

        TTargetQuery IVertexGremlinQuery<TElement>.Map<TTargetQuery>(Func<IVertexGremlinQuery<TElement>, TTargetQuery> mapping) => Map(mapping);
        
        IVertexGremlinQuery<TElement> IVertexGremlinQuery<TElement>.Not(Func<IVertexGremlinQuery<TElement>, IGremlinQuery> notTraversal) => Not(notTraversal);
        IVertexGremlinQuery<TElement> IVertexGremlinQuery<TElement>.None() => None();

        TTargetQuery IVertexGremlinQuery<TElement>.Optional<TTargetQuery>(Func<IVertexGremlinQuery<TElement>, TTargetQuery> optionalTraversal) => Optional(optionalTraversal);
        IVertexGremlinQuery<TElement> IVertexGremlinQuery<TElement>.Or(params Func<IVertexGremlinQuery<TElement>, IGremlinQuery>[] orTraversals) => Or(orTraversals);

        IGremlinQuery<(TElement1, TElement2)> IVertexGremlinQuery<TElement>.Project<TElement1, TElement2>(Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2) => Project<(TElement1, TElement2)>(projection1, projection2);
        IGremlinQuery<(TElement1, TElement2, TElement3)> IVertexGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3>(Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3) => Project<(TElement1, TElement2, TElement3)>(projection1, projection2, projection3);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4)> IVertexGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4>(Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4) => Project<(TElement1, TElement2, TElement3, TElement4)>(projection1, projection2, projection3, projection4);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5)> IVertexGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5>(Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5)>(projection1, projection2, projection3, projection4, projection5);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6)> IVertexGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6>(Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6)>(projection1, projection2, projection3, projection4, projection5, projection6);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7)> IVertexGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7>(Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8)> IVertexGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8>(Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9)> IVertexGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9>(Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement9>> projection9) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10)> IVertexGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10>(Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement9>> projection9, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement10>> projection10) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11)> IVertexGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11>(Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement9>> projection9, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement10>> projection10, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement11>> projection11) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12)> IVertexGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12>(Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement9>> projection9, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement10>> projection10, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement11>> projection11, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement12>> projection12) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13)> IVertexGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13>(Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement9>> projection9, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement10>> projection10, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement11>> projection11, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement12>> projection12, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement13>> projection13) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14)> IVertexGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14>(Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement9>> projection9, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement10>> projection10, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement11>> projection11, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement12>> projection12, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement13>> projection13, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement14>> projection14) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15)> IVertexGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15>(Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement9>> projection9, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement10>> projection10, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement11>> projection11, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement12>> projection12, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement13>> projection13, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement14>> projection14, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement15>> projection15) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15, TElement16)> IVertexGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15, TElement16>(Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement9>> projection9, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement10>> projection10, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement11>> projection11, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement12>> projection12, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement13>> projection13, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement14>> projection14, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement15>> projection15, Func<IVertexGremlinQuery<TElement>, IGremlinQuery<TElement16>> projection16) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15, TElement16)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15, projection16);

        IGremlinQuery IVertexGremlinQuery<TElement>.Project(Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection2) => Project<Unit>(projection1, projection2);
        IGremlinQuery IVertexGremlinQuery<TElement>.Project(Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection3) => Project<Unit>(projection1, projection2, projection3);
        IGremlinQuery IVertexGremlinQuery<TElement>.Project(Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection4) => Project<Unit>(projection1, projection2, projection3, projection4);
        IGremlinQuery IVertexGremlinQuery<TElement>.Project(Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection5) => Project<Unit>(projection1, projection2, projection3, projection4, projection5);
        IGremlinQuery IVertexGremlinQuery<TElement>.Project(Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection6) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6);
        IGremlinQuery IVertexGremlinQuery<TElement>.Project(Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection7) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7);
        IGremlinQuery IVertexGremlinQuery<TElement>.Project(Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection8) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8);
        IGremlinQuery IVertexGremlinQuery<TElement>.Project(Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection8, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection9) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9);
        IGremlinQuery IVertexGremlinQuery<TElement>.Project(Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection8, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection9, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection10) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10);
        IGremlinQuery IVertexGremlinQuery<TElement>.Project(Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection8, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection9, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection10, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection11) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11);
        IGremlinQuery IVertexGremlinQuery<TElement>.Project(Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection8, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection9, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection10, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection11, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection12) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12);
        IGremlinQuery IVertexGremlinQuery<TElement>.Project(Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection8, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection9, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection10, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection11, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection12, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection13) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13);
        IGremlinQuery IVertexGremlinQuery<TElement>.Project(Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection8, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection9, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection10, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection11, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection12, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection13, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection14) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14);
        IGremlinQuery IVertexGremlinQuery<TElement>.Project(Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection8, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection9, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection10, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection11, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection12, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection13, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection14, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection15) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15);
        IGremlinQuery IVertexGremlinQuery<TElement>.Project(Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection8, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection9, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection10, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection11, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection12, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection13, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection14, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection15, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> projection16) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15, projection16);

        IGremlinQuery<object> IVertexGremlinQuery<TElement>.Project(Func<IProjectBuilder<IVertexGremlinQuery<TElement>>, IProjectBuilder<IVertexGremlinQuery<TElement>>> continuation) => Project(continuation);

        IVertexGremlinQuery<TElement> IVertexGremlinQuery<TElement>.Range(long low, long high) => Range(low, high);

        IVertexGremlinQuery<TElement> IVertexGremlinQuery<TElement>.Repeat(Func<IVertexGremlinQuery<TElement>, IVertexGremlinQuery<TElement>> repeatTraversal) => Repeat(repeatTraversal);
        IVertexGremlinQuery<TElement> IVertexGremlinQuery<TElement>.RepeatUntil(Func<IVertexGremlinQuery<TElement>, IVertexGremlinQuery<TElement>> repeatTraversal, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> untilTraversal) => RepeatUntil(repeatTraversal, untilTraversal);
        IVertexGremlinQuery<TElement> IVertexGremlinQuery<TElement>.UntilRepeat(Func<IVertexGremlinQuery<TElement>, IVertexGremlinQuery<TElement>> repeatTraversal, Func<IVertexGremlinQuery<TElement>, IGremlinQuery> untilTraversal) => UntilRepeat(repeatTraversal, untilTraversal);

        IVertexGremlinQuery<TElement> IVertexGremlinQuery<TElement>.SideEffect(Func<IVertexGremlinQuery<TElement>, IGremlinQuery> sideEffectTraversal) => SideEffect(sideEffectTraversal);
        IVertexGremlinQuery<TElement> IVertexGremlinQuery<TElement>.Skip(long count) => Skip(count);

        IVertexGremlinQuery<TElement> IVertexGremlinQuery<TElement>.Tail(long count) => Tail(count);
        IVertexGremlinQuery<TElement> IVertexGremlinQuery<TElement>.TailLocal(int count) => TailLocal(count);

        IVertexGremlinQuery<TElement> IVertexGremlinQuery<TElement>.Times(int count) => Times(count);

        TTargetQuery IVertexGremlinQuery<TElement>.Union<TTargetQuery>(params Func<IVertexGremlinQuery<TElement>, TTargetQuery>[] unionTraversals) => Union(unionTraversals);
        IEdgeGremlinQuery<TElement> IEdgeGremlinQuery<TElement>.And(params Func<IEdgeGremlinQuery<TElement>, IGremlinQuery>[] andTraversals) => And(andTraversals);
        IEdgeGremlinQuery<TElement> IEdgeGremlinQuery<TElement>.As(params StepLabel[] stepLabels) => As(stepLabels);

        IEdgeGremlinQuery<TElement> IEdgeGremlinQuery<TElement>.Barrier() => Barrier();

        TTargetQuery IEdgeGremlinQuery<TElement>.Choose<TTargetQuery>(Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> traversalPredicate, Func<IEdgeGremlinQuery<TElement>, TTargetQuery> trueChoice, Func<IEdgeGremlinQuery<TElement>, TTargetQuery> falseChoice) => Choose(traversalPredicate, trueChoice, falseChoice);
        TTargetQuery IEdgeGremlinQuery<TElement>.Choose<TTargetQuery>(Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> traversalPredicate, Func<IEdgeGremlinQuery<TElement>, TTargetQuery> trueChoice) => Choose(traversalPredicate, trueChoice);
        TTargetQuery IEdgeGremlinQuery<TElement>.Choose<TTargetQuery>(Func<IChooseBuilder<IEdgeGremlinQuery<TElement>>, IChooseBuilderWithCaseOrDefault<TTargetQuery>> continuation) => Choose<TTargetQuery>(continuation);

        TTargetQuery IEdgeGremlinQuery<TElement>.Coalesce<TTargetQuery>(params Func<IEdgeGremlinQuery<TElement>, TTargetQuery>[] traversals) => Coalesce(traversals);

        IEdgeGremlinQuery<TElement> IEdgeGremlinQuery<TElement>.Dedup() => Dedup();
        IEdgeGremlinQuery<TElement> IEdgeGremlinQuery<TElement>.Drop() => Drop();

        IEdgeGremlinQuery<TElement> IEdgeGremlinQuery<TElement>.Emit() => Emit();

        IEdgeGremlinQuery<TElement> IEdgeGremlinQuery<TElement>.Where(string lambda) => Where(lambda);

        TTargetQuery IEdgeGremlinQuery<TElement>.FlatMap<TTargetQuery>(Func<IEdgeGremlinQuery<TElement>, TTargetQuery> mapping) => FlatMap(mapping);

        IEdgeGremlinQuery<TElement> IEdgeGremlinQuery<TElement>.Identity() => Identity();

        IEdgeGremlinQuery<TElement> IEdgeGremlinQuery<TElement>.Limit(long count) => Limit(count);
        IEdgeGremlinQuery<TElement> IEdgeGremlinQuery<TElement>.LimitLocal(long count) => LimitLocal(count);

        TTargetQuery IEdgeGremlinQuery<TElement>.Local<TTargetQuery>(Func<IEdgeGremlinQuery<TElement> , TTargetQuery> localTraversal) => Local(localTraversal);

        TTargetQuery IEdgeGremlinQuery<TElement>.Map<TTargetQuery>(Func<IEdgeGremlinQuery<TElement>, TTargetQuery> mapping) => Map(mapping);
        
        IEdgeGremlinQuery<TElement> IEdgeGremlinQuery<TElement>.Not(Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> notTraversal) => Not(notTraversal);
        IEdgeGremlinQuery<TElement> IEdgeGremlinQuery<TElement>.None() => None();

        TTargetQuery IEdgeGremlinQuery<TElement>.Optional<TTargetQuery>(Func<IEdgeGremlinQuery<TElement>, TTargetQuery> optionalTraversal) => Optional(optionalTraversal);
        IEdgeGremlinQuery<TElement> IEdgeGremlinQuery<TElement>.Or(params Func<IEdgeGremlinQuery<TElement>, IGremlinQuery>[] orTraversals) => Or(orTraversals);

        IGremlinQuery<(TElement1, TElement2)> IEdgeGremlinQuery<TElement>.Project<TElement1, TElement2>(Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2) => Project<(TElement1, TElement2)>(projection1, projection2);
        IGremlinQuery<(TElement1, TElement2, TElement3)> IEdgeGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3>(Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3) => Project<(TElement1, TElement2, TElement3)>(projection1, projection2, projection3);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4)> IEdgeGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4>(Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4) => Project<(TElement1, TElement2, TElement3, TElement4)>(projection1, projection2, projection3, projection4);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5)> IEdgeGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5>(Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5)>(projection1, projection2, projection3, projection4, projection5);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6)> IEdgeGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6>(Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6)>(projection1, projection2, projection3, projection4, projection5, projection6);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7)> IEdgeGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7>(Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8)> IEdgeGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8>(Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9)> IEdgeGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9>(Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement9>> projection9) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10)> IEdgeGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10>(Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement9>> projection9, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement10>> projection10) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11)> IEdgeGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11>(Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement9>> projection9, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement10>> projection10, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement11>> projection11) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12)> IEdgeGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12>(Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement9>> projection9, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement10>> projection10, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement11>> projection11, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement12>> projection12) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13)> IEdgeGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13>(Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement9>> projection9, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement10>> projection10, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement11>> projection11, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement12>> projection12, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement13>> projection13) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14)> IEdgeGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14>(Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement9>> projection9, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement10>> projection10, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement11>> projection11, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement12>> projection12, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement13>> projection13, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement14>> projection14) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15)> IEdgeGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15>(Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement9>> projection9, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement10>> projection10, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement11>> projection11, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement12>> projection12, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement13>> projection13, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement14>> projection14, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement15>> projection15) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15, TElement16)> IEdgeGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15, TElement16>(Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement9>> projection9, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement10>> projection10, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement11>> projection11, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement12>> projection12, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement13>> projection13, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement14>> projection14, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement15>> projection15, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery<TElement16>> projection16) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15, TElement16)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15, projection16);

        IGremlinQuery IEdgeGremlinQuery<TElement>.Project(Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection2) => Project<Unit>(projection1, projection2);
        IGremlinQuery IEdgeGremlinQuery<TElement>.Project(Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection3) => Project<Unit>(projection1, projection2, projection3);
        IGremlinQuery IEdgeGremlinQuery<TElement>.Project(Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection4) => Project<Unit>(projection1, projection2, projection3, projection4);
        IGremlinQuery IEdgeGremlinQuery<TElement>.Project(Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection5) => Project<Unit>(projection1, projection2, projection3, projection4, projection5);
        IGremlinQuery IEdgeGremlinQuery<TElement>.Project(Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection6) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6);
        IGremlinQuery IEdgeGremlinQuery<TElement>.Project(Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection7) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7);
        IGremlinQuery IEdgeGremlinQuery<TElement>.Project(Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection8) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8);
        IGremlinQuery IEdgeGremlinQuery<TElement>.Project(Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection8, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection9) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9);
        IGremlinQuery IEdgeGremlinQuery<TElement>.Project(Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection8, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection9, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection10) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10);
        IGremlinQuery IEdgeGremlinQuery<TElement>.Project(Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection8, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection9, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection10, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection11) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11);
        IGremlinQuery IEdgeGremlinQuery<TElement>.Project(Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection8, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection9, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection10, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection11, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection12) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12);
        IGremlinQuery IEdgeGremlinQuery<TElement>.Project(Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection8, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection9, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection10, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection11, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection12, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection13) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13);
        IGremlinQuery IEdgeGremlinQuery<TElement>.Project(Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection8, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection9, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection10, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection11, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection12, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection13, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection14) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14);
        IGremlinQuery IEdgeGremlinQuery<TElement>.Project(Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection8, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection9, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection10, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection11, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection12, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection13, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection14, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection15) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15);
        IGremlinQuery IEdgeGremlinQuery<TElement>.Project(Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection8, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection9, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection10, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection11, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection12, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection13, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection14, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection15, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> projection16) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15, projection16);

        IGremlinQuery<object> IEdgeGremlinQuery<TElement>.Project(Func<IProjectBuilder<IEdgeGremlinQuery<TElement>>, IProjectBuilder<IEdgeGremlinQuery<TElement>>> continuation) => Project(continuation);

        IEdgeGremlinQuery<TElement> IEdgeGremlinQuery<TElement>.Range(long low, long high) => Range(low, high);

        IEdgeGremlinQuery<TElement> IEdgeGremlinQuery<TElement>.Repeat(Func<IEdgeGremlinQuery<TElement>, IEdgeGremlinQuery<TElement>> repeatTraversal) => Repeat(repeatTraversal);
        IEdgeGremlinQuery<TElement> IEdgeGremlinQuery<TElement>.RepeatUntil(Func<IEdgeGremlinQuery<TElement>, IEdgeGremlinQuery<TElement>> repeatTraversal, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> untilTraversal) => RepeatUntil(repeatTraversal, untilTraversal);
        IEdgeGremlinQuery<TElement> IEdgeGremlinQuery<TElement>.UntilRepeat(Func<IEdgeGremlinQuery<TElement>, IEdgeGremlinQuery<TElement>> repeatTraversal, Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> untilTraversal) => UntilRepeat(repeatTraversal, untilTraversal);

        IEdgeGremlinQuery<TElement> IEdgeGremlinQuery<TElement>.SideEffect(Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> sideEffectTraversal) => SideEffect(sideEffectTraversal);
        IEdgeGremlinQuery<TElement> IEdgeGremlinQuery<TElement>.Skip(long count) => Skip(count);

        IEdgeGremlinQuery<TElement> IEdgeGremlinQuery<TElement>.Tail(long count) => Tail(count);
        IEdgeGremlinQuery<TElement> IEdgeGremlinQuery<TElement>.TailLocal(int count) => TailLocal(count);

        IEdgeGremlinQuery<TElement> IEdgeGremlinQuery<TElement>.Times(int count) => Times(count);

        TTargetQuery IEdgeGremlinQuery<TElement>.Union<TTargetQuery>(params Func<IEdgeGremlinQuery<TElement>, TTargetQuery>[] unionTraversals) => Union(unionTraversals);
        IEdgeGremlinQuery<TElement, TOutVertex> IEdgeGremlinQuery<TElement, TOutVertex>.And(params Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery>[] andTraversals) => And(andTraversals);
        IEdgeGremlinQuery<TElement, TOutVertex> IEdgeGremlinQuery<TElement, TOutVertex>.As(params StepLabel[] stepLabels) => As(stepLabels);

        IEdgeGremlinQuery<TElement, TOutVertex> IEdgeGremlinQuery<TElement, TOutVertex>.Barrier() => Barrier();

        TTargetQuery IEdgeGremlinQuery<TElement, TOutVertex>.Choose<TTargetQuery>(Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> traversalPredicate, Func<IEdgeGremlinQuery<TElement, TOutVertex>, TTargetQuery> trueChoice, Func<IEdgeGremlinQuery<TElement, TOutVertex>, TTargetQuery> falseChoice) => Choose(traversalPredicate, trueChoice, falseChoice);
        TTargetQuery IEdgeGremlinQuery<TElement, TOutVertex>.Choose<TTargetQuery>(Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> traversalPredicate, Func<IEdgeGremlinQuery<TElement, TOutVertex>, TTargetQuery> trueChoice) => Choose(traversalPredicate, trueChoice);
        TTargetQuery IEdgeGremlinQuery<TElement, TOutVertex>.Choose<TTargetQuery>(Func<IChooseBuilder<IEdgeGremlinQuery<TElement, TOutVertex>>, IChooseBuilderWithCaseOrDefault<TTargetQuery>> continuation) => Choose<TTargetQuery>(continuation);

        TTargetQuery IEdgeGremlinQuery<TElement, TOutVertex>.Coalesce<TTargetQuery>(params Func<IEdgeGremlinQuery<TElement, TOutVertex>, TTargetQuery>[] traversals) => Coalesce(traversals);

        IEdgeGremlinQuery<TElement, TOutVertex> IEdgeGremlinQuery<TElement, TOutVertex>.Dedup() => Dedup();
        IEdgeGremlinQuery<TElement, TOutVertex> IEdgeGremlinQuery<TElement, TOutVertex>.Drop() => Drop();

        IEdgeGremlinQuery<TElement, TOutVertex> IEdgeGremlinQuery<TElement, TOutVertex>.Emit() => Emit();

        IEdgeGremlinQuery<TElement, TOutVertex> IEdgeGremlinQuery<TElement, TOutVertex>.Where(string lambda) => Where(lambda);

        TTargetQuery IEdgeGremlinQuery<TElement, TOutVertex>.FlatMap<TTargetQuery>(Func<IEdgeGremlinQuery<TElement, TOutVertex>, TTargetQuery> mapping) => FlatMap(mapping);

        IEdgeGremlinQuery<TElement, TOutVertex> IEdgeGremlinQuery<TElement, TOutVertex>.Identity() => Identity();

        IEdgeGremlinQuery<TElement, TOutVertex> IEdgeGremlinQuery<TElement, TOutVertex>.Limit(long count) => Limit(count);
        IEdgeGremlinQuery<TElement, TOutVertex> IEdgeGremlinQuery<TElement, TOutVertex>.LimitLocal(long count) => LimitLocal(count);

        TTargetQuery IEdgeGremlinQuery<TElement, TOutVertex>.Local<TTargetQuery>(Func<IEdgeGremlinQuery<TElement, TOutVertex> , TTargetQuery> localTraversal) => Local(localTraversal);

        TTargetQuery IEdgeGremlinQuery<TElement, TOutVertex>.Map<TTargetQuery>(Func<IEdgeGremlinQuery<TElement, TOutVertex>, TTargetQuery> mapping) => Map(mapping);
        
        IEdgeGremlinQuery<TElement, TOutVertex> IEdgeGremlinQuery<TElement, TOutVertex>.Not(Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> notTraversal) => Not(notTraversal);
        IEdgeGremlinQuery<TElement, TOutVertex> IEdgeGremlinQuery<TElement, TOutVertex>.None() => None();

        TTargetQuery IEdgeGremlinQuery<TElement, TOutVertex>.Optional<TTargetQuery>(Func<IEdgeGremlinQuery<TElement, TOutVertex>, TTargetQuery> optionalTraversal) => Optional(optionalTraversal);
        IEdgeGremlinQuery<TElement, TOutVertex> IEdgeGremlinQuery<TElement, TOutVertex>.Or(params Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery>[] orTraversals) => Or(orTraversals);

        IGremlinQuery<(TElement1, TElement2)> IEdgeGremlinQuery<TElement, TOutVertex>.Project<TElement1, TElement2>(Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement2>> projection2) => Project<(TElement1, TElement2)>(projection1, projection2);
        IGremlinQuery<(TElement1, TElement2, TElement3)> IEdgeGremlinQuery<TElement, TOutVertex>.Project<TElement1, TElement2, TElement3>(Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement3>> projection3) => Project<(TElement1, TElement2, TElement3)>(projection1, projection2, projection3);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4)> IEdgeGremlinQuery<TElement, TOutVertex>.Project<TElement1, TElement2, TElement3, TElement4>(Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement4>> projection4) => Project<(TElement1, TElement2, TElement3, TElement4)>(projection1, projection2, projection3, projection4);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5)> IEdgeGremlinQuery<TElement, TOutVertex>.Project<TElement1, TElement2, TElement3, TElement4, TElement5>(Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement4>> projection4, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement5>> projection5) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5)>(projection1, projection2, projection3, projection4, projection5);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6)> IEdgeGremlinQuery<TElement, TOutVertex>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6>(Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement4>> projection4, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement5>> projection5, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement6>> projection6) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6)>(projection1, projection2, projection3, projection4, projection5, projection6);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7)> IEdgeGremlinQuery<TElement, TOutVertex>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7>(Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement4>> projection4, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement5>> projection5, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement6>> projection6, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement7>> projection7) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8)> IEdgeGremlinQuery<TElement, TOutVertex>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8>(Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement4>> projection4, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement5>> projection5, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement6>> projection6, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement7>> projection7, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement8>> projection8) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9)> IEdgeGremlinQuery<TElement, TOutVertex>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9>(Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement4>> projection4, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement5>> projection5, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement6>> projection6, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement7>> projection7, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement8>> projection8, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement9>> projection9) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10)> IEdgeGremlinQuery<TElement, TOutVertex>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10>(Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement4>> projection4, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement5>> projection5, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement6>> projection6, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement7>> projection7, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement8>> projection8, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement9>> projection9, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement10>> projection10) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11)> IEdgeGremlinQuery<TElement, TOutVertex>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11>(Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement4>> projection4, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement5>> projection5, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement6>> projection6, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement7>> projection7, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement8>> projection8, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement9>> projection9, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement10>> projection10, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement11>> projection11) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12)> IEdgeGremlinQuery<TElement, TOutVertex>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12>(Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement4>> projection4, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement5>> projection5, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement6>> projection6, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement7>> projection7, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement8>> projection8, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement9>> projection9, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement10>> projection10, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement11>> projection11, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement12>> projection12) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13)> IEdgeGremlinQuery<TElement, TOutVertex>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13>(Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement4>> projection4, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement5>> projection5, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement6>> projection6, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement7>> projection7, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement8>> projection8, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement9>> projection9, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement10>> projection10, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement11>> projection11, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement12>> projection12, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement13>> projection13) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14)> IEdgeGremlinQuery<TElement, TOutVertex>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14>(Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement4>> projection4, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement5>> projection5, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement6>> projection6, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement7>> projection7, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement8>> projection8, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement9>> projection9, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement10>> projection10, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement11>> projection11, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement12>> projection12, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement13>> projection13, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement14>> projection14) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15)> IEdgeGremlinQuery<TElement, TOutVertex>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15>(Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement4>> projection4, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement5>> projection5, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement6>> projection6, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement7>> projection7, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement8>> projection8, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement9>> projection9, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement10>> projection10, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement11>> projection11, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement12>> projection12, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement13>> projection13, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement14>> projection14, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement15>> projection15) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15, TElement16)> IEdgeGremlinQuery<TElement, TOutVertex>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15, TElement16>(Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement4>> projection4, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement5>> projection5, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement6>> projection6, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement7>> projection7, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement8>> projection8, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement9>> projection9, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement10>> projection10, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement11>> projection11, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement12>> projection12, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement13>> projection13, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement14>> projection14, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement15>> projection15, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement16>> projection16) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15, TElement16)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15, projection16);

        IGremlinQuery IEdgeGremlinQuery<TElement, TOutVertex>.Project(Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection2) => Project<Unit>(projection1, projection2);
        IGremlinQuery IEdgeGremlinQuery<TElement, TOutVertex>.Project(Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection3) => Project<Unit>(projection1, projection2, projection3);
        IGremlinQuery IEdgeGremlinQuery<TElement, TOutVertex>.Project(Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection4) => Project<Unit>(projection1, projection2, projection3, projection4);
        IGremlinQuery IEdgeGremlinQuery<TElement, TOutVertex>.Project(Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection4, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection5) => Project<Unit>(projection1, projection2, projection3, projection4, projection5);
        IGremlinQuery IEdgeGremlinQuery<TElement, TOutVertex>.Project(Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection4, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection5, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection6) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6);
        IGremlinQuery IEdgeGremlinQuery<TElement, TOutVertex>.Project(Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection4, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection5, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection6, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection7) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7);
        IGremlinQuery IEdgeGremlinQuery<TElement, TOutVertex>.Project(Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection4, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection5, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection6, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection7, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection8) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8);
        IGremlinQuery IEdgeGremlinQuery<TElement, TOutVertex>.Project(Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection4, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection5, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection6, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection7, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection8, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection9) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9);
        IGremlinQuery IEdgeGremlinQuery<TElement, TOutVertex>.Project(Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection4, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection5, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection6, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection7, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection8, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection9, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection10) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10);
        IGremlinQuery IEdgeGremlinQuery<TElement, TOutVertex>.Project(Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection4, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection5, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection6, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection7, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection8, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection9, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection10, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection11) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11);
        IGremlinQuery IEdgeGremlinQuery<TElement, TOutVertex>.Project(Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection4, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection5, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection6, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection7, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection8, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection9, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection10, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection11, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection12) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12);
        IGremlinQuery IEdgeGremlinQuery<TElement, TOutVertex>.Project(Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection4, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection5, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection6, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection7, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection8, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection9, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection10, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection11, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection12, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection13) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13);
        IGremlinQuery IEdgeGremlinQuery<TElement, TOutVertex>.Project(Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection4, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection5, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection6, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection7, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection8, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection9, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection10, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection11, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection12, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection13, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection14) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14);
        IGremlinQuery IEdgeGremlinQuery<TElement, TOutVertex>.Project(Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection4, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection5, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection6, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection7, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection8, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection9, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection10, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection11, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection12, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection13, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection14, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection15) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15);
        IGremlinQuery IEdgeGremlinQuery<TElement, TOutVertex>.Project(Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection4, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection5, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection6, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection7, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection8, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection9, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection10, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection11, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection12, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection13, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection14, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection15, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection16) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15, projection16);

        IGremlinQuery<object> IEdgeGremlinQuery<TElement, TOutVertex>.Project(Func<IProjectBuilder<IEdgeGremlinQuery<TElement, TOutVertex>>, IProjectBuilder<IEdgeGremlinQuery<TElement, TOutVertex>>> continuation) => Project(continuation);

        IEdgeGremlinQuery<TElement, TOutVertex> IEdgeGremlinQuery<TElement, TOutVertex>.Range(long low, long high) => Range(low, high);

        IEdgeGremlinQuery<TElement, TOutVertex> IEdgeGremlinQuery<TElement, TOutVertex>.Repeat(Func<IEdgeGremlinQuery<TElement, TOutVertex>, IEdgeGremlinQuery<TElement, TOutVertex>> repeatTraversal) => Repeat(repeatTraversal);
        IEdgeGremlinQuery<TElement, TOutVertex> IEdgeGremlinQuery<TElement, TOutVertex>.RepeatUntil(Func<IEdgeGremlinQuery<TElement, TOutVertex>, IEdgeGremlinQuery<TElement, TOutVertex>> repeatTraversal, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> untilTraversal) => RepeatUntil(repeatTraversal, untilTraversal);
        IEdgeGremlinQuery<TElement, TOutVertex> IEdgeGremlinQuery<TElement, TOutVertex>.UntilRepeat(Func<IEdgeGremlinQuery<TElement, TOutVertex>, IEdgeGremlinQuery<TElement, TOutVertex>> repeatTraversal, Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> untilTraversal) => UntilRepeat(repeatTraversal, untilTraversal);

        IEdgeGremlinQuery<TElement, TOutVertex> IEdgeGremlinQuery<TElement, TOutVertex>.SideEffect(Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> sideEffectTraversal) => SideEffect(sideEffectTraversal);
        IEdgeGremlinQuery<TElement, TOutVertex> IEdgeGremlinQuery<TElement, TOutVertex>.Skip(long count) => Skip(count);

        IEdgeGremlinQuery<TElement, TOutVertex> IEdgeGremlinQuery<TElement, TOutVertex>.Tail(long count) => Tail(count);
        IEdgeGremlinQuery<TElement, TOutVertex> IEdgeGremlinQuery<TElement, TOutVertex>.TailLocal(int count) => TailLocal(count);

        IEdgeGremlinQuery<TElement, TOutVertex> IEdgeGremlinQuery<TElement, TOutVertex>.Times(int count) => Times(count);

        TTargetQuery IEdgeGremlinQuery<TElement, TOutVertex>.Union<TTargetQuery>(params Func<IEdgeGremlinQuery<TElement, TOutVertex>, TTargetQuery>[] unionTraversals) => Union(unionTraversals);
        IEdgeGremlinQuery<TElement, TOutVertex, TInVertex> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.And(params Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery>[] andTraversals) => And(andTraversals);
        IEdgeGremlinQuery<TElement, TOutVertex, TInVertex> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.As(params StepLabel[] stepLabels) => As(stepLabels);

        IEdgeGremlinQuery<TElement, TOutVertex, TInVertex> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Barrier() => Barrier();

        TTargetQuery IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Choose<TTargetQuery>(Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> traversalPredicate, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, TTargetQuery> trueChoice, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, TTargetQuery> falseChoice) => Choose(traversalPredicate, trueChoice, falseChoice);
        TTargetQuery IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Choose<TTargetQuery>(Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> traversalPredicate, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, TTargetQuery> trueChoice) => Choose(traversalPredicate, trueChoice);
        TTargetQuery IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Choose<TTargetQuery>(Func<IChooseBuilder<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>>, IChooseBuilderWithCaseOrDefault<TTargetQuery>> continuation) => Choose<TTargetQuery>(continuation);

        TTargetQuery IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Coalesce<TTargetQuery>(params Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, TTargetQuery>[] traversals) => Coalesce(traversals);

        IEdgeGremlinQuery<TElement, TOutVertex, TInVertex> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Dedup() => Dedup();
        IEdgeGremlinQuery<TElement, TOutVertex, TInVertex> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Drop() => Drop();

        IEdgeGremlinQuery<TElement, TOutVertex, TInVertex> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Emit() => Emit();

        IEdgeGremlinQuery<TElement, TOutVertex, TInVertex> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Where(string lambda) => Where(lambda);

        TTargetQuery IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.FlatMap<TTargetQuery>(Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, TTargetQuery> mapping) => FlatMap(mapping);

        IEdgeGremlinQuery<TElement, TOutVertex, TInVertex> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Identity() => Identity();

        IEdgeGremlinQuery<TElement, TOutVertex, TInVertex> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Limit(long count) => Limit(count);
        IEdgeGremlinQuery<TElement, TOutVertex, TInVertex> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.LimitLocal(long count) => LimitLocal(count);

        TTargetQuery IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Local<TTargetQuery>(Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex> , TTargetQuery> localTraversal) => Local(localTraversal);

        TTargetQuery IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Map<TTargetQuery>(Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, TTargetQuery> mapping) => Map(mapping);
        
        IEdgeGremlinQuery<TElement, TOutVertex, TInVertex> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Not(Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> notTraversal) => Not(notTraversal);
        IEdgeGremlinQuery<TElement, TOutVertex, TInVertex> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.None() => None();

        TTargetQuery IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Optional<TTargetQuery>(Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, TTargetQuery> optionalTraversal) => Optional(optionalTraversal);
        IEdgeGremlinQuery<TElement, TOutVertex, TInVertex> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Or(params Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery>[] orTraversals) => Or(orTraversals);

        IGremlinQuery<(TElement1, TElement2)> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Project<TElement1, TElement2>(Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement2>> projection2) => Project<(TElement1, TElement2)>(projection1, projection2);
        IGremlinQuery<(TElement1, TElement2, TElement3)> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Project<TElement1, TElement2, TElement3>(Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement3>> projection3) => Project<(TElement1, TElement2, TElement3)>(projection1, projection2, projection3);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4)> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Project<TElement1, TElement2, TElement3, TElement4>(Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement4>> projection4) => Project<(TElement1, TElement2, TElement3, TElement4)>(projection1, projection2, projection3, projection4);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5)> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Project<TElement1, TElement2, TElement3, TElement4, TElement5>(Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement4>> projection4, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement5>> projection5) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5)>(projection1, projection2, projection3, projection4, projection5);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6)> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6>(Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement4>> projection4, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement5>> projection5, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement6>> projection6) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6)>(projection1, projection2, projection3, projection4, projection5, projection6);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7)> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7>(Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement4>> projection4, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement5>> projection5, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement6>> projection6, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement7>> projection7) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8)> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8>(Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement4>> projection4, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement5>> projection5, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement6>> projection6, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement7>> projection7, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement8>> projection8) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9)> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9>(Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement4>> projection4, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement5>> projection5, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement6>> projection6, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement7>> projection7, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement8>> projection8, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement9>> projection9) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10)> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10>(Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement4>> projection4, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement5>> projection5, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement6>> projection6, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement7>> projection7, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement8>> projection8, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement9>> projection9, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement10>> projection10) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11)> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11>(Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement4>> projection4, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement5>> projection5, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement6>> projection6, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement7>> projection7, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement8>> projection8, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement9>> projection9, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement10>> projection10, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement11>> projection11) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12)> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12>(Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement4>> projection4, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement5>> projection5, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement6>> projection6, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement7>> projection7, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement8>> projection8, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement9>> projection9, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement10>> projection10, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement11>> projection11, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement12>> projection12) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13)> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13>(Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement4>> projection4, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement5>> projection5, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement6>> projection6, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement7>> projection7, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement8>> projection8, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement9>> projection9, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement10>> projection10, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement11>> projection11, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement12>> projection12, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement13>> projection13) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14)> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14>(Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement4>> projection4, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement5>> projection5, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement6>> projection6, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement7>> projection7, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement8>> projection8, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement9>> projection9, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement10>> projection10, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement11>> projection11, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement12>> projection12, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement13>> projection13, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement14>> projection14) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15)> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15>(Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement4>> projection4, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement5>> projection5, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement6>> projection6, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement7>> projection7, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement8>> projection8, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement9>> projection9, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement10>> projection10, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement11>> projection11, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement12>> projection12, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement13>> projection13, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement14>> projection14, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement15>> projection15) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15, TElement16)> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15, TElement16>(Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement1>> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement2>> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement3>> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement4>> projection4, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement5>> projection5, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement6>> projection6, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement7>> projection7, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement8>> projection8, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement9>> projection9, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement10>> projection10, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement11>> projection11, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement12>> projection12, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement13>> projection13, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement14>> projection14, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement15>> projection15, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery<TElement16>> projection16) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15, TElement16)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15, projection16);

        IGremlinQuery IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Project(Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection2) => Project<Unit>(projection1, projection2);
        IGremlinQuery IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Project(Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection3) => Project<Unit>(projection1, projection2, projection3);
        IGremlinQuery IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Project(Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection4) => Project<Unit>(projection1, projection2, projection3, projection4);
        IGremlinQuery IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Project(Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection4, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection5) => Project<Unit>(projection1, projection2, projection3, projection4, projection5);
        IGremlinQuery IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Project(Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection4, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection5, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection6) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6);
        IGremlinQuery IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Project(Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection4, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection5, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection6, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection7) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7);
        IGremlinQuery IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Project(Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection4, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection5, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection6, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection7, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection8) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8);
        IGremlinQuery IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Project(Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection4, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection5, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection6, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection7, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection8, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection9) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9);
        IGremlinQuery IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Project(Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection4, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection5, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection6, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection7, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection8, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection9, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection10) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10);
        IGremlinQuery IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Project(Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection4, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection5, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection6, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection7, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection8, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection9, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection10, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection11) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11);
        IGremlinQuery IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Project(Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection4, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection5, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection6, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection7, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection8, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection9, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection10, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection11, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection12) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12);
        IGremlinQuery IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Project(Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection4, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection5, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection6, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection7, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection8, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection9, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection10, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection11, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection12, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection13) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13);
        IGremlinQuery IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Project(Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection4, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection5, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection6, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection7, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection8, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection9, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection10, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection11, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection12, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection13, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection14) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14);
        IGremlinQuery IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Project(Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection4, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection5, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection6, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection7, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection8, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection9, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection10, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection11, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection12, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection13, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection14, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection15) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15);
        IGremlinQuery IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Project(Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection1, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection2, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection3, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection4, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection5, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection6, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection7, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection8, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection9, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection10, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection11, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection12, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection13, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection14, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection15, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> projection16) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15, projection16);

        IGremlinQuery<object> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Project(Func<IProjectBuilder<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>>, IProjectBuilder<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>>> continuation) => Project(continuation);

        IEdgeGremlinQuery<TElement, TOutVertex, TInVertex> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Range(long low, long high) => Range(low, high);

        IEdgeGremlinQuery<TElement, TOutVertex, TInVertex> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Repeat(Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>> repeatTraversal) => Repeat(repeatTraversal);
        IEdgeGremlinQuery<TElement, TOutVertex, TInVertex> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.RepeatUntil(Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>> repeatTraversal, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> untilTraversal) => RepeatUntil(repeatTraversal, untilTraversal);
        IEdgeGremlinQuery<TElement, TOutVertex, TInVertex> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.UntilRepeat(Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>> repeatTraversal, Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> untilTraversal) => UntilRepeat(repeatTraversal, untilTraversal);

        IEdgeGremlinQuery<TElement, TOutVertex, TInVertex> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.SideEffect(Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> sideEffectTraversal) => SideEffect(sideEffectTraversal);
        IEdgeGremlinQuery<TElement, TOutVertex, TInVertex> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Skip(long count) => Skip(count);

        IEdgeGremlinQuery<TElement, TOutVertex, TInVertex> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Tail(long count) => Tail(count);
        IEdgeGremlinQuery<TElement, TOutVertex, TInVertex> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.TailLocal(int count) => TailLocal(count);

        IEdgeGremlinQuery<TElement, TOutVertex, TInVertex> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Times(int count) => Times(count);

        TTargetQuery IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Union<TTargetQuery>(params Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, TTargetQuery>[] unionTraversals) => Union(unionTraversals);
        IInEdgeGremlinQuery<TElement, TInVertex> IInEdgeGremlinQuery<TElement, TInVertex>.And(params Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery>[] andTraversals) => And(andTraversals);
        IInEdgeGremlinQuery<TElement, TInVertex> IInEdgeGremlinQuery<TElement, TInVertex>.As(params StepLabel[] stepLabels) => As(stepLabels);

        IInEdgeGremlinQuery<TElement, TInVertex> IInEdgeGremlinQuery<TElement, TInVertex>.Barrier() => Barrier();

        TTargetQuery IInEdgeGremlinQuery<TElement, TInVertex>.Choose<TTargetQuery>(Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> traversalPredicate, Func<IInEdgeGremlinQuery<TElement, TInVertex>, TTargetQuery> trueChoice, Func<IInEdgeGremlinQuery<TElement, TInVertex>, TTargetQuery> falseChoice) => Choose(traversalPredicate, trueChoice, falseChoice);
        TTargetQuery IInEdgeGremlinQuery<TElement, TInVertex>.Choose<TTargetQuery>(Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> traversalPredicate, Func<IInEdgeGremlinQuery<TElement, TInVertex>, TTargetQuery> trueChoice) => Choose(traversalPredicate, trueChoice);
        TTargetQuery IInEdgeGremlinQuery<TElement, TInVertex>.Choose<TTargetQuery>(Func<IChooseBuilder<IInEdgeGremlinQuery<TElement, TInVertex>>, IChooseBuilderWithCaseOrDefault<TTargetQuery>> continuation) => Choose<TTargetQuery>(continuation);

        TTargetQuery IInEdgeGremlinQuery<TElement, TInVertex>.Coalesce<TTargetQuery>(params Func<IInEdgeGremlinQuery<TElement, TInVertex>, TTargetQuery>[] traversals) => Coalesce(traversals);

        IInEdgeGremlinQuery<TElement, TInVertex> IInEdgeGremlinQuery<TElement, TInVertex>.Dedup() => Dedup();
        IInEdgeGremlinQuery<TElement, TInVertex> IInEdgeGremlinQuery<TElement, TInVertex>.Drop() => Drop();

        IInEdgeGremlinQuery<TElement, TInVertex> IInEdgeGremlinQuery<TElement, TInVertex>.Emit() => Emit();

        IInEdgeGremlinQuery<TElement, TInVertex> IInEdgeGremlinQuery<TElement, TInVertex>.Where(string lambda) => Where(lambda);

        TTargetQuery IInEdgeGremlinQuery<TElement, TInVertex>.FlatMap<TTargetQuery>(Func<IInEdgeGremlinQuery<TElement, TInVertex>, TTargetQuery> mapping) => FlatMap(mapping);

        IInEdgeGremlinQuery<TElement, TInVertex> IInEdgeGremlinQuery<TElement, TInVertex>.Identity() => Identity();

        IInEdgeGremlinQuery<TElement, TInVertex> IInEdgeGremlinQuery<TElement, TInVertex>.Limit(long count) => Limit(count);
        IInEdgeGremlinQuery<TElement, TInVertex> IInEdgeGremlinQuery<TElement, TInVertex>.LimitLocal(long count) => LimitLocal(count);

        TTargetQuery IInEdgeGremlinQuery<TElement, TInVertex>.Local<TTargetQuery>(Func<IInEdgeGremlinQuery<TElement, TInVertex> , TTargetQuery> localTraversal) => Local(localTraversal);

        TTargetQuery IInEdgeGremlinQuery<TElement, TInVertex>.Map<TTargetQuery>(Func<IInEdgeGremlinQuery<TElement, TInVertex>, TTargetQuery> mapping) => Map(mapping);
        
        IInEdgeGremlinQuery<TElement, TInVertex> IInEdgeGremlinQuery<TElement, TInVertex>.Not(Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> notTraversal) => Not(notTraversal);
        IInEdgeGremlinQuery<TElement, TInVertex> IInEdgeGremlinQuery<TElement, TInVertex>.None() => None();

        TTargetQuery IInEdgeGremlinQuery<TElement, TInVertex>.Optional<TTargetQuery>(Func<IInEdgeGremlinQuery<TElement, TInVertex>, TTargetQuery> optionalTraversal) => Optional(optionalTraversal);
        IInEdgeGremlinQuery<TElement, TInVertex> IInEdgeGremlinQuery<TElement, TInVertex>.Or(params Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery>[] orTraversals) => Or(orTraversals);

        IGremlinQuery<(TElement1, TElement2)> IInEdgeGremlinQuery<TElement, TInVertex>.Project<TElement1, TElement2>(Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement1>> projection1, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement2>> projection2) => Project<(TElement1, TElement2)>(projection1, projection2);
        IGremlinQuery<(TElement1, TElement2, TElement3)> IInEdgeGremlinQuery<TElement, TInVertex>.Project<TElement1, TElement2, TElement3>(Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement1>> projection1, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement2>> projection2, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement3>> projection3) => Project<(TElement1, TElement2, TElement3)>(projection1, projection2, projection3);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4)> IInEdgeGremlinQuery<TElement, TInVertex>.Project<TElement1, TElement2, TElement3, TElement4>(Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement1>> projection1, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement2>> projection2, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement3>> projection3, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement4>> projection4) => Project<(TElement1, TElement2, TElement3, TElement4)>(projection1, projection2, projection3, projection4);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5)> IInEdgeGremlinQuery<TElement, TInVertex>.Project<TElement1, TElement2, TElement3, TElement4, TElement5>(Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement1>> projection1, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement2>> projection2, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement3>> projection3, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement4>> projection4, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement5>> projection5) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5)>(projection1, projection2, projection3, projection4, projection5);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6)> IInEdgeGremlinQuery<TElement, TInVertex>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6>(Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement1>> projection1, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement2>> projection2, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement3>> projection3, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement4>> projection4, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement5>> projection5, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement6>> projection6) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6)>(projection1, projection2, projection3, projection4, projection5, projection6);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7)> IInEdgeGremlinQuery<TElement, TInVertex>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7>(Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement1>> projection1, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement2>> projection2, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement3>> projection3, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement4>> projection4, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement5>> projection5, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement6>> projection6, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement7>> projection7) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8)> IInEdgeGremlinQuery<TElement, TInVertex>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8>(Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement1>> projection1, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement2>> projection2, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement3>> projection3, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement4>> projection4, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement5>> projection5, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement6>> projection6, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement7>> projection7, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement8>> projection8) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9)> IInEdgeGremlinQuery<TElement, TInVertex>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9>(Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement1>> projection1, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement2>> projection2, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement3>> projection3, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement4>> projection4, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement5>> projection5, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement6>> projection6, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement7>> projection7, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement8>> projection8, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement9>> projection9) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10)> IInEdgeGremlinQuery<TElement, TInVertex>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10>(Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement1>> projection1, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement2>> projection2, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement3>> projection3, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement4>> projection4, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement5>> projection5, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement6>> projection6, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement7>> projection7, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement8>> projection8, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement9>> projection9, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement10>> projection10) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11)> IInEdgeGremlinQuery<TElement, TInVertex>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11>(Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement1>> projection1, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement2>> projection2, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement3>> projection3, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement4>> projection4, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement5>> projection5, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement6>> projection6, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement7>> projection7, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement8>> projection8, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement9>> projection9, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement10>> projection10, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement11>> projection11) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12)> IInEdgeGremlinQuery<TElement, TInVertex>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12>(Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement1>> projection1, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement2>> projection2, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement3>> projection3, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement4>> projection4, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement5>> projection5, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement6>> projection6, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement7>> projection7, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement8>> projection8, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement9>> projection9, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement10>> projection10, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement11>> projection11, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement12>> projection12) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13)> IInEdgeGremlinQuery<TElement, TInVertex>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13>(Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement1>> projection1, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement2>> projection2, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement3>> projection3, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement4>> projection4, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement5>> projection5, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement6>> projection6, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement7>> projection7, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement8>> projection8, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement9>> projection9, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement10>> projection10, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement11>> projection11, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement12>> projection12, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement13>> projection13) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14)> IInEdgeGremlinQuery<TElement, TInVertex>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14>(Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement1>> projection1, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement2>> projection2, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement3>> projection3, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement4>> projection4, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement5>> projection5, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement6>> projection6, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement7>> projection7, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement8>> projection8, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement9>> projection9, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement10>> projection10, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement11>> projection11, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement12>> projection12, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement13>> projection13, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement14>> projection14) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15)> IInEdgeGremlinQuery<TElement, TInVertex>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15>(Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement1>> projection1, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement2>> projection2, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement3>> projection3, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement4>> projection4, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement5>> projection5, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement6>> projection6, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement7>> projection7, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement8>> projection8, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement9>> projection9, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement10>> projection10, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement11>> projection11, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement12>> projection12, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement13>> projection13, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement14>> projection14, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement15>> projection15) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15, TElement16)> IInEdgeGremlinQuery<TElement, TInVertex>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15, TElement16>(Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement1>> projection1, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement2>> projection2, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement3>> projection3, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement4>> projection4, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement5>> projection5, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement6>> projection6, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement7>> projection7, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement8>> projection8, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement9>> projection9, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement10>> projection10, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement11>> projection11, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement12>> projection12, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement13>> projection13, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement14>> projection14, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement15>> projection15, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery<TElement16>> projection16) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15, TElement16)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15, projection16);

        IGremlinQuery IInEdgeGremlinQuery<TElement, TInVertex>.Project(Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection1, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection2) => Project<Unit>(projection1, projection2);
        IGremlinQuery IInEdgeGremlinQuery<TElement, TInVertex>.Project(Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection1, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection2, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection3) => Project<Unit>(projection1, projection2, projection3);
        IGremlinQuery IInEdgeGremlinQuery<TElement, TInVertex>.Project(Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection1, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection2, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection3, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection4) => Project<Unit>(projection1, projection2, projection3, projection4);
        IGremlinQuery IInEdgeGremlinQuery<TElement, TInVertex>.Project(Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection1, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection2, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection3, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection4, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection5) => Project<Unit>(projection1, projection2, projection3, projection4, projection5);
        IGremlinQuery IInEdgeGremlinQuery<TElement, TInVertex>.Project(Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection1, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection2, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection3, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection4, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection5, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection6) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6);
        IGremlinQuery IInEdgeGremlinQuery<TElement, TInVertex>.Project(Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection1, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection2, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection3, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection4, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection5, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection6, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection7) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7);
        IGremlinQuery IInEdgeGremlinQuery<TElement, TInVertex>.Project(Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection1, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection2, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection3, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection4, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection5, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection6, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection7, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection8) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8);
        IGremlinQuery IInEdgeGremlinQuery<TElement, TInVertex>.Project(Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection1, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection2, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection3, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection4, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection5, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection6, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection7, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection8, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection9) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9);
        IGremlinQuery IInEdgeGremlinQuery<TElement, TInVertex>.Project(Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection1, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection2, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection3, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection4, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection5, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection6, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection7, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection8, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection9, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection10) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10);
        IGremlinQuery IInEdgeGremlinQuery<TElement, TInVertex>.Project(Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection1, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection2, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection3, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection4, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection5, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection6, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection7, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection8, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection9, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection10, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection11) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11);
        IGremlinQuery IInEdgeGremlinQuery<TElement, TInVertex>.Project(Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection1, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection2, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection3, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection4, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection5, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection6, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection7, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection8, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection9, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection10, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection11, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection12) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12);
        IGremlinQuery IInEdgeGremlinQuery<TElement, TInVertex>.Project(Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection1, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection2, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection3, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection4, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection5, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection6, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection7, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection8, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection9, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection10, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection11, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection12, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection13) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13);
        IGremlinQuery IInEdgeGremlinQuery<TElement, TInVertex>.Project(Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection1, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection2, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection3, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection4, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection5, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection6, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection7, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection8, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection9, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection10, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection11, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection12, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection13, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection14) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14);
        IGremlinQuery IInEdgeGremlinQuery<TElement, TInVertex>.Project(Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection1, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection2, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection3, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection4, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection5, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection6, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection7, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection8, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection9, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection10, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection11, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection12, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection13, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection14, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection15) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15);
        IGremlinQuery IInEdgeGremlinQuery<TElement, TInVertex>.Project(Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection1, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection2, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection3, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection4, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection5, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection6, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection7, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection8, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection9, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection10, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection11, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection12, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection13, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection14, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection15, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> projection16) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15, projection16);

        IGremlinQuery<object> IInEdgeGremlinQuery<TElement, TInVertex>.Project(Func<IProjectBuilder<IInEdgeGremlinQuery<TElement, TInVertex>>, IProjectBuilder<IInEdgeGremlinQuery<TElement, TInVertex>>> continuation) => Project(continuation);

        IInEdgeGremlinQuery<TElement, TInVertex> IInEdgeGremlinQuery<TElement, TInVertex>.Range(long low, long high) => Range(low, high);

        IInEdgeGremlinQuery<TElement, TInVertex> IInEdgeGremlinQuery<TElement, TInVertex>.Repeat(Func<IInEdgeGremlinQuery<TElement, TInVertex>, IInEdgeGremlinQuery<TElement, TInVertex>> repeatTraversal) => Repeat(repeatTraversal);
        IInEdgeGremlinQuery<TElement, TInVertex> IInEdgeGremlinQuery<TElement, TInVertex>.RepeatUntil(Func<IInEdgeGremlinQuery<TElement, TInVertex>, IInEdgeGremlinQuery<TElement, TInVertex>> repeatTraversal, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> untilTraversal) => RepeatUntil(repeatTraversal, untilTraversal);
        IInEdgeGremlinQuery<TElement, TInVertex> IInEdgeGremlinQuery<TElement, TInVertex>.UntilRepeat(Func<IInEdgeGremlinQuery<TElement, TInVertex>, IInEdgeGremlinQuery<TElement, TInVertex>> repeatTraversal, Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> untilTraversal) => UntilRepeat(repeatTraversal, untilTraversal);

        IInEdgeGremlinQuery<TElement, TInVertex> IInEdgeGremlinQuery<TElement, TInVertex>.SideEffect(Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> sideEffectTraversal) => SideEffect(sideEffectTraversal);
        IInEdgeGremlinQuery<TElement, TInVertex> IInEdgeGremlinQuery<TElement, TInVertex>.Skip(long count) => Skip(count);

        IInEdgeGremlinQuery<TElement, TInVertex> IInEdgeGremlinQuery<TElement, TInVertex>.Tail(long count) => Tail(count);
        IInEdgeGremlinQuery<TElement, TInVertex> IInEdgeGremlinQuery<TElement, TInVertex>.TailLocal(int count) => TailLocal(count);

        IInEdgeGremlinQuery<TElement, TInVertex> IInEdgeGremlinQuery<TElement, TInVertex>.Times(int count) => Times(count);

        TTargetQuery IInEdgeGremlinQuery<TElement, TInVertex>.Union<TTargetQuery>(params Func<IInEdgeGremlinQuery<TElement, TInVertex>, TTargetQuery>[] unionTraversals) => Union(unionTraversals);
        IOutEdgeGremlinQuery<TElement, TOutVertex> IOutEdgeGremlinQuery<TElement, TOutVertex>.And(params Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery>[] andTraversals) => And(andTraversals);
        IOutEdgeGremlinQuery<TElement, TOutVertex> IOutEdgeGremlinQuery<TElement, TOutVertex>.As(params StepLabel[] stepLabels) => As(stepLabels);

        IOutEdgeGremlinQuery<TElement, TOutVertex> IOutEdgeGremlinQuery<TElement, TOutVertex>.Barrier() => Barrier();

        TTargetQuery IOutEdgeGremlinQuery<TElement, TOutVertex>.Choose<TTargetQuery>(Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> traversalPredicate, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, TTargetQuery> trueChoice, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, TTargetQuery> falseChoice) => Choose(traversalPredicate, trueChoice, falseChoice);
        TTargetQuery IOutEdgeGremlinQuery<TElement, TOutVertex>.Choose<TTargetQuery>(Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> traversalPredicate, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, TTargetQuery> trueChoice) => Choose(traversalPredicate, trueChoice);
        TTargetQuery IOutEdgeGremlinQuery<TElement, TOutVertex>.Choose<TTargetQuery>(Func<IChooseBuilder<IOutEdgeGremlinQuery<TElement, TOutVertex>>, IChooseBuilderWithCaseOrDefault<TTargetQuery>> continuation) => Choose<TTargetQuery>(continuation);

        TTargetQuery IOutEdgeGremlinQuery<TElement, TOutVertex>.Coalesce<TTargetQuery>(params Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, TTargetQuery>[] traversals) => Coalesce(traversals);

        IOutEdgeGremlinQuery<TElement, TOutVertex> IOutEdgeGremlinQuery<TElement, TOutVertex>.Dedup() => Dedup();
        IOutEdgeGremlinQuery<TElement, TOutVertex> IOutEdgeGremlinQuery<TElement, TOutVertex>.Drop() => Drop();

        IOutEdgeGremlinQuery<TElement, TOutVertex> IOutEdgeGremlinQuery<TElement, TOutVertex>.Emit() => Emit();

        IOutEdgeGremlinQuery<TElement, TOutVertex> IOutEdgeGremlinQuery<TElement, TOutVertex>.Where(string lambda) => Where(lambda);

        TTargetQuery IOutEdgeGremlinQuery<TElement, TOutVertex>.FlatMap<TTargetQuery>(Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, TTargetQuery> mapping) => FlatMap(mapping);

        IOutEdgeGremlinQuery<TElement, TOutVertex> IOutEdgeGremlinQuery<TElement, TOutVertex>.Identity() => Identity();

        IOutEdgeGremlinQuery<TElement, TOutVertex> IOutEdgeGremlinQuery<TElement, TOutVertex>.Limit(long count) => Limit(count);
        IOutEdgeGremlinQuery<TElement, TOutVertex> IOutEdgeGremlinQuery<TElement, TOutVertex>.LimitLocal(long count) => LimitLocal(count);

        TTargetQuery IOutEdgeGremlinQuery<TElement, TOutVertex>.Local<TTargetQuery>(Func<IOutEdgeGremlinQuery<TElement, TOutVertex> , TTargetQuery> localTraversal) => Local(localTraversal);

        TTargetQuery IOutEdgeGremlinQuery<TElement, TOutVertex>.Map<TTargetQuery>(Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, TTargetQuery> mapping) => Map(mapping);
        
        IOutEdgeGremlinQuery<TElement, TOutVertex> IOutEdgeGremlinQuery<TElement, TOutVertex>.Not(Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> notTraversal) => Not(notTraversal);
        IOutEdgeGremlinQuery<TElement, TOutVertex> IOutEdgeGremlinQuery<TElement, TOutVertex>.None() => None();

        TTargetQuery IOutEdgeGremlinQuery<TElement, TOutVertex>.Optional<TTargetQuery>(Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, TTargetQuery> optionalTraversal) => Optional(optionalTraversal);
        IOutEdgeGremlinQuery<TElement, TOutVertex> IOutEdgeGremlinQuery<TElement, TOutVertex>.Or(params Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery>[] orTraversals) => Or(orTraversals);

        IGremlinQuery<(TElement1, TElement2)> IOutEdgeGremlinQuery<TElement, TOutVertex>.Project<TElement1, TElement2>(Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement1>> projection1, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement2>> projection2) => Project<(TElement1, TElement2)>(projection1, projection2);
        IGremlinQuery<(TElement1, TElement2, TElement3)> IOutEdgeGremlinQuery<TElement, TOutVertex>.Project<TElement1, TElement2, TElement3>(Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement1>> projection1, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement2>> projection2, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement3>> projection3) => Project<(TElement1, TElement2, TElement3)>(projection1, projection2, projection3);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4)> IOutEdgeGremlinQuery<TElement, TOutVertex>.Project<TElement1, TElement2, TElement3, TElement4>(Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement1>> projection1, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement2>> projection2, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement3>> projection3, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement4>> projection4) => Project<(TElement1, TElement2, TElement3, TElement4)>(projection1, projection2, projection3, projection4);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5)> IOutEdgeGremlinQuery<TElement, TOutVertex>.Project<TElement1, TElement2, TElement3, TElement4, TElement5>(Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement1>> projection1, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement2>> projection2, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement3>> projection3, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement4>> projection4, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement5>> projection5) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5)>(projection1, projection2, projection3, projection4, projection5);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6)> IOutEdgeGremlinQuery<TElement, TOutVertex>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6>(Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement1>> projection1, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement2>> projection2, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement3>> projection3, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement4>> projection4, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement5>> projection5, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement6>> projection6) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6)>(projection1, projection2, projection3, projection4, projection5, projection6);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7)> IOutEdgeGremlinQuery<TElement, TOutVertex>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7>(Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement1>> projection1, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement2>> projection2, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement3>> projection3, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement4>> projection4, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement5>> projection5, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement6>> projection6, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement7>> projection7) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8)> IOutEdgeGremlinQuery<TElement, TOutVertex>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8>(Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement1>> projection1, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement2>> projection2, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement3>> projection3, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement4>> projection4, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement5>> projection5, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement6>> projection6, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement7>> projection7, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement8>> projection8) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9)> IOutEdgeGremlinQuery<TElement, TOutVertex>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9>(Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement1>> projection1, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement2>> projection2, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement3>> projection3, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement4>> projection4, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement5>> projection5, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement6>> projection6, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement7>> projection7, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement8>> projection8, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement9>> projection9) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10)> IOutEdgeGremlinQuery<TElement, TOutVertex>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10>(Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement1>> projection1, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement2>> projection2, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement3>> projection3, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement4>> projection4, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement5>> projection5, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement6>> projection6, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement7>> projection7, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement8>> projection8, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement9>> projection9, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement10>> projection10) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11)> IOutEdgeGremlinQuery<TElement, TOutVertex>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11>(Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement1>> projection1, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement2>> projection2, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement3>> projection3, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement4>> projection4, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement5>> projection5, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement6>> projection6, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement7>> projection7, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement8>> projection8, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement9>> projection9, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement10>> projection10, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement11>> projection11) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12)> IOutEdgeGremlinQuery<TElement, TOutVertex>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12>(Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement1>> projection1, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement2>> projection2, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement3>> projection3, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement4>> projection4, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement5>> projection5, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement6>> projection6, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement7>> projection7, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement8>> projection8, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement9>> projection9, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement10>> projection10, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement11>> projection11, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement12>> projection12) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13)> IOutEdgeGremlinQuery<TElement, TOutVertex>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13>(Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement1>> projection1, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement2>> projection2, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement3>> projection3, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement4>> projection4, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement5>> projection5, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement6>> projection6, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement7>> projection7, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement8>> projection8, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement9>> projection9, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement10>> projection10, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement11>> projection11, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement12>> projection12, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement13>> projection13) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14)> IOutEdgeGremlinQuery<TElement, TOutVertex>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14>(Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement1>> projection1, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement2>> projection2, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement3>> projection3, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement4>> projection4, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement5>> projection5, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement6>> projection6, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement7>> projection7, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement8>> projection8, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement9>> projection9, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement10>> projection10, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement11>> projection11, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement12>> projection12, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement13>> projection13, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement14>> projection14) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15)> IOutEdgeGremlinQuery<TElement, TOutVertex>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15>(Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement1>> projection1, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement2>> projection2, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement3>> projection3, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement4>> projection4, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement5>> projection5, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement6>> projection6, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement7>> projection7, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement8>> projection8, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement9>> projection9, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement10>> projection10, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement11>> projection11, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement12>> projection12, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement13>> projection13, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement14>> projection14, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement15>> projection15) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15, TElement16)> IOutEdgeGremlinQuery<TElement, TOutVertex>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15, TElement16>(Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement1>> projection1, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement2>> projection2, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement3>> projection3, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement4>> projection4, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement5>> projection5, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement6>> projection6, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement7>> projection7, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement8>> projection8, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement9>> projection9, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement10>> projection10, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement11>> projection11, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement12>> projection12, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement13>> projection13, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement14>> projection14, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement15>> projection15, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery<TElement16>> projection16) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15, TElement16)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15, projection16);

        IGremlinQuery IOutEdgeGremlinQuery<TElement, TOutVertex>.Project(Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection1, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection2) => Project<Unit>(projection1, projection2);
        IGremlinQuery IOutEdgeGremlinQuery<TElement, TOutVertex>.Project(Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection1, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection2, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection3) => Project<Unit>(projection1, projection2, projection3);
        IGremlinQuery IOutEdgeGremlinQuery<TElement, TOutVertex>.Project(Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection1, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection2, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection3, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection4) => Project<Unit>(projection1, projection2, projection3, projection4);
        IGremlinQuery IOutEdgeGremlinQuery<TElement, TOutVertex>.Project(Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection1, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection2, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection3, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection4, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection5) => Project<Unit>(projection1, projection2, projection3, projection4, projection5);
        IGremlinQuery IOutEdgeGremlinQuery<TElement, TOutVertex>.Project(Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection1, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection2, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection3, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection4, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection5, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection6) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6);
        IGremlinQuery IOutEdgeGremlinQuery<TElement, TOutVertex>.Project(Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection1, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection2, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection3, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection4, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection5, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection6, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection7) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7);
        IGremlinQuery IOutEdgeGremlinQuery<TElement, TOutVertex>.Project(Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection1, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection2, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection3, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection4, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection5, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection6, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection7, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection8) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8);
        IGremlinQuery IOutEdgeGremlinQuery<TElement, TOutVertex>.Project(Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection1, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection2, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection3, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection4, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection5, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection6, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection7, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection8, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection9) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9);
        IGremlinQuery IOutEdgeGremlinQuery<TElement, TOutVertex>.Project(Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection1, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection2, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection3, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection4, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection5, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection6, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection7, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection8, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection9, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection10) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10);
        IGremlinQuery IOutEdgeGremlinQuery<TElement, TOutVertex>.Project(Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection1, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection2, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection3, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection4, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection5, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection6, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection7, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection8, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection9, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection10, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection11) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11);
        IGremlinQuery IOutEdgeGremlinQuery<TElement, TOutVertex>.Project(Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection1, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection2, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection3, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection4, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection5, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection6, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection7, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection8, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection9, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection10, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection11, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection12) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12);
        IGremlinQuery IOutEdgeGremlinQuery<TElement, TOutVertex>.Project(Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection1, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection2, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection3, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection4, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection5, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection6, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection7, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection8, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection9, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection10, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection11, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection12, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection13) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13);
        IGremlinQuery IOutEdgeGremlinQuery<TElement, TOutVertex>.Project(Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection1, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection2, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection3, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection4, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection5, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection6, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection7, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection8, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection9, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection10, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection11, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection12, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection13, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection14) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14);
        IGremlinQuery IOutEdgeGremlinQuery<TElement, TOutVertex>.Project(Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection1, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection2, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection3, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection4, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection5, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection6, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection7, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection8, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection9, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection10, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection11, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection12, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection13, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection14, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection15) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15);
        IGremlinQuery IOutEdgeGremlinQuery<TElement, TOutVertex>.Project(Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection1, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection2, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection3, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection4, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection5, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection6, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection7, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection8, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection9, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection10, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection11, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection12, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection13, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection14, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection15, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> projection16) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15, projection16);

        IGremlinQuery<object> IOutEdgeGremlinQuery<TElement, TOutVertex>.Project(Func<IProjectBuilder<IOutEdgeGremlinQuery<TElement, TOutVertex>>, IProjectBuilder<IOutEdgeGremlinQuery<TElement, TOutVertex>>> continuation) => Project(continuation);

        IOutEdgeGremlinQuery<TElement, TOutVertex> IOutEdgeGremlinQuery<TElement, TOutVertex>.Range(long low, long high) => Range(low, high);

        IOutEdgeGremlinQuery<TElement, TOutVertex> IOutEdgeGremlinQuery<TElement, TOutVertex>.Repeat(Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IOutEdgeGremlinQuery<TElement, TOutVertex>> repeatTraversal) => Repeat(repeatTraversal);
        IOutEdgeGremlinQuery<TElement, TOutVertex> IOutEdgeGremlinQuery<TElement, TOutVertex>.RepeatUntil(Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IOutEdgeGremlinQuery<TElement, TOutVertex>> repeatTraversal, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> untilTraversal) => RepeatUntil(repeatTraversal, untilTraversal);
        IOutEdgeGremlinQuery<TElement, TOutVertex> IOutEdgeGremlinQuery<TElement, TOutVertex>.UntilRepeat(Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IOutEdgeGremlinQuery<TElement, TOutVertex>> repeatTraversal, Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> untilTraversal) => UntilRepeat(repeatTraversal, untilTraversal);

        IOutEdgeGremlinQuery<TElement, TOutVertex> IOutEdgeGremlinQuery<TElement, TOutVertex>.SideEffect(Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> sideEffectTraversal) => SideEffect(sideEffectTraversal);
        IOutEdgeGremlinQuery<TElement, TOutVertex> IOutEdgeGremlinQuery<TElement, TOutVertex>.Skip(long count) => Skip(count);

        IOutEdgeGremlinQuery<TElement, TOutVertex> IOutEdgeGremlinQuery<TElement, TOutVertex>.Tail(long count) => Tail(count);
        IOutEdgeGremlinQuery<TElement, TOutVertex> IOutEdgeGremlinQuery<TElement, TOutVertex>.TailLocal(int count) => TailLocal(count);

        IOutEdgeGremlinQuery<TElement, TOutVertex> IOutEdgeGremlinQuery<TElement, TOutVertex>.Times(int count) => Times(count);

        TTargetQuery IOutEdgeGremlinQuery<TElement, TOutVertex>.Union<TTargetQuery>(params Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, TTargetQuery>[] unionTraversals) => Union(unionTraversals);
        IVertexPropertyGremlinQuery<TElement, TPropertyValue> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.And(params Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery>[] andTraversals) => And(andTraversals);
        IVertexPropertyGremlinQuery<TElement, TPropertyValue> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.As(params StepLabel[] stepLabels) => As(stepLabels);

        IVertexPropertyGremlinQuery<TElement, TPropertyValue> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Barrier() => Barrier();

        TTargetQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Choose<TTargetQuery>(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> traversalPredicate, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, TTargetQuery> trueChoice, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, TTargetQuery> falseChoice) => Choose(traversalPredicate, trueChoice, falseChoice);
        TTargetQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Choose<TTargetQuery>(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> traversalPredicate, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, TTargetQuery> trueChoice) => Choose(traversalPredicate, trueChoice);
        TTargetQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Choose<TTargetQuery>(Func<IChooseBuilder<IVertexPropertyGremlinQuery<TElement, TPropertyValue>>, IChooseBuilderWithCaseOrDefault<TTargetQuery>> continuation) => Choose<TTargetQuery>(continuation);

        TTargetQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Coalesce<TTargetQuery>(params Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, TTargetQuery>[] traversals) => Coalesce(traversals);

        IVertexPropertyGremlinQuery<TElement, TPropertyValue> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Dedup() => Dedup();
        IVertexPropertyGremlinQuery<TElement, TPropertyValue> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Drop() => Drop();

        IVertexPropertyGremlinQuery<TElement, TPropertyValue> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Emit() => Emit();

        IVertexPropertyGremlinQuery<TElement, TPropertyValue> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Where(string lambda) => Where(lambda);

        TTargetQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue>.FlatMap<TTargetQuery>(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, TTargetQuery> mapping) => FlatMap(mapping);

        IVertexPropertyGremlinQuery<TElement, TPropertyValue> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Identity() => Identity();

        IVertexPropertyGremlinQuery<TElement, TPropertyValue> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Limit(long count) => Limit(count);
        IVertexPropertyGremlinQuery<TElement, TPropertyValue> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.LimitLocal(long count) => LimitLocal(count);

        TTargetQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Local<TTargetQuery>(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue> , TTargetQuery> localTraversal) => Local(localTraversal);

        TTargetQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Map<TTargetQuery>(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, TTargetQuery> mapping) => Map(mapping);
        
        IVertexPropertyGremlinQuery<TElement, TPropertyValue> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Not(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> notTraversal) => Not(notTraversal);
        IVertexPropertyGremlinQuery<TElement, TPropertyValue> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.None() => None();

        TTargetQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Optional<TTargetQuery>(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, TTargetQuery> optionalTraversal) => Optional(optionalTraversal);
        IVertexPropertyGremlinQuery<TElement, TPropertyValue> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Or(params Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery>[] orTraversals) => Or(orTraversals);

        IGremlinQuery<(TElement1, TElement2)> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Project<TElement1, TElement2>(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement1>> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement2>> projection2) => Project<(TElement1, TElement2)>(projection1, projection2);
        IGremlinQuery<(TElement1, TElement2, TElement3)> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Project<TElement1, TElement2, TElement3>(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement1>> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement2>> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement3>> projection3) => Project<(TElement1, TElement2, TElement3)>(projection1, projection2, projection3);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4)> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Project<TElement1, TElement2, TElement3, TElement4>(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement1>> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement2>> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement3>> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement4>> projection4) => Project<(TElement1, TElement2, TElement3, TElement4)>(projection1, projection2, projection3, projection4);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5)> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Project<TElement1, TElement2, TElement3, TElement4, TElement5>(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement1>> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement2>> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement3>> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement4>> projection4, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement5>> projection5) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5)>(projection1, projection2, projection3, projection4, projection5);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6)> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6>(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement1>> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement2>> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement3>> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement4>> projection4, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement5>> projection5, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement6>> projection6) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6)>(projection1, projection2, projection3, projection4, projection5, projection6);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7)> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7>(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement1>> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement2>> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement3>> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement4>> projection4, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement5>> projection5, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement6>> projection6, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement7>> projection7) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8)> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8>(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement1>> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement2>> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement3>> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement4>> projection4, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement5>> projection5, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement6>> projection6, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement7>> projection7, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement8>> projection8) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9)> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9>(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement1>> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement2>> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement3>> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement4>> projection4, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement5>> projection5, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement6>> projection6, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement7>> projection7, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement8>> projection8, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement9>> projection9) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10)> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10>(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement1>> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement2>> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement3>> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement4>> projection4, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement5>> projection5, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement6>> projection6, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement7>> projection7, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement8>> projection8, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement9>> projection9, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement10>> projection10) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11)> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11>(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement1>> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement2>> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement3>> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement4>> projection4, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement5>> projection5, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement6>> projection6, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement7>> projection7, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement8>> projection8, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement9>> projection9, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement10>> projection10, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement11>> projection11) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12)> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12>(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement1>> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement2>> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement3>> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement4>> projection4, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement5>> projection5, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement6>> projection6, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement7>> projection7, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement8>> projection8, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement9>> projection9, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement10>> projection10, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement11>> projection11, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement12>> projection12) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13)> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13>(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement1>> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement2>> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement3>> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement4>> projection4, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement5>> projection5, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement6>> projection6, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement7>> projection7, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement8>> projection8, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement9>> projection9, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement10>> projection10, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement11>> projection11, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement12>> projection12, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement13>> projection13) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14)> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14>(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement1>> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement2>> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement3>> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement4>> projection4, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement5>> projection5, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement6>> projection6, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement7>> projection7, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement8>> projection8, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement9>> projection9, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement10>> projection10, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement11>> projection11, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement12>> projection12, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement13>> projection13, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement14>> projection14) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15)> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15>(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement1>> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement2>> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement3>> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement4>> projection4, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement5>> projection5, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement6>> projection6, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement7>> projection7, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement8>> projection8, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement9>> projection9, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement10>> projection10, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement11>> projection11, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement12>> projection12, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement13>> projection13, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement14>> projection14, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement15>> projection15) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15, TElement16)> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15, TElement16>(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement1>> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement2>> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement3>> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement4>> projection4, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement5>> projection5, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement6>> projection6, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement7>> projection7, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement8>> projection8, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement9>> projection9, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement10>> projection10, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement11>> projection11, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement12>> projection12, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement13>> projection13, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement14>> projection14, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement15>> projection15, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery<TElement16>> projection16) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15, TElement16)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15, projection16);

        IGremlinQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Project(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection2) => Project<Unit>(projection1, projection2);
        IGremlinQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Project(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection3) => Project<Unit>(projection1, projection2, projection3);
        IGremlinQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Project(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection4) => Project<Unit>(projection1, projection2, projection3, projection4);
        IGremlinQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Project(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection4, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection5) => Project<Unit>(projection1, projection2, projection3, projection4, projection5);
        IGremlinQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Project(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection4, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection5, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection6) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6);
        IGremlinQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Project(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection4, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection5, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection6, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection7) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7);
        IGremlinQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Project(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection4, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection5, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection6, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection7, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection8) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8);
        IGremlinQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Project(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection4, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection5, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection6, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection7, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection8, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection9) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9);
        IGremlinQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Project(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection4, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection5, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection6, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection7, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection8, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection9, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection10) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10);
        IGremlinQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Project(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection4, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection5, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection6, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection7, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection8, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection9, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection10, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection11) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11);
        IGremlinQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Project(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection4, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection5, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection6, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection7, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection8, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection9, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection10, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection11, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection12) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12);
        IGremlinQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Project(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection4, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection5, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection6, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection7, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection8, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection9, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection10, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection11, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection12, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection13) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13);
        IGremlinQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Project(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection4, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection5, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection6, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection7, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection8, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection9, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection10, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection11, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection12, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection13, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection14) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14);
        IGremlinQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Project(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection4, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection5, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection6, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection7, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection8, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection9, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection10, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection11, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection12, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection13, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection14, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection15) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15);
        IGremlinQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Project(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection4, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection5, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection6, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection7, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection8, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection9, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection10, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection11, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection12, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection13, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection14, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection15, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> projection16) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15, projection16);

        IGremlinQuery<object> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Project(Func<IProjectBuilder<IVertexPropertyGremlinQuery<TElement, TPropertyValue>>, IProjectBuilder<IVertexPropertyGremlinQuery<TElement, TPropertyValue>>> continuation) => Project(continuation);

        IVertexPropertyGremlinQuery<TElement, TPropertyValue> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Range(long low, long high) => Range(low, high);

        IVertexPropertyGremlinQuery<TElement, TPropertyValue> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Repeat(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IVertexPropertyGremlinQuery<TElement, TPropertyValue>> repeatTraversal) => Repeat(repeatTraversal);
        IVertexPropertyGremlinQuery<TElement, TPropertyValue> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.RepeatUntil(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IVertexPropertyGremlinQuery<TElement, TPropertyValue>> repeatTraversal, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> untilTraversal) => RepeatUntil(repeatTraversal, untilTraversal);
        IVertexPropertyGremlinQuery<TElement, TPropertyValue> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.UntilRepeat(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IVertexPropertyGremlinQuery<TElement, TPropertyValue>> repeatTraversal, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> untilTraversal) => UntilRepeat(repeatTraversal, untilTraversal);

        IVertexPropertyGremlinQuery<TElement, TPropertyValue> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.SideEffect(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> sideEffectTraversal) => SideEffect(sideEffectTraversal);
        IVertexPropertyGremlinQuery<TElement, TPropertyValue> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Skip(long count) => Skip(count);

        IVertexPropertyGremlinQuery<TElement, TPropertyValue> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Tail(long count) => Tail(count);
        IVertexPropertyGremlinQuery<TElement, TPropertyValue> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.TailLocal(int count) => TailLocal(count);

        IVertexPropertyGremlinQuery<TElement, TPropertyValue> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Times(int count) => Times(count);

        TTargetQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Union<TTargetQuery>(params Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, TTargetQuery>[] unionTraversals) => Union(unionTraversals);
        IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta> IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.And(params Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery>[] andTraversals) => And(andTraversals);
        IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta> IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.As(params StepLabel[] stepLabels) => As(stepLabels);

        IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta> IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Barrier() => Barrier();

        TTargetQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Choose<TTargetQuery>(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> traversalPredicate, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, TTargetQuery> trueChoice, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, TTargetQuery> falseChoice) => Choose(traversalPredicate, trueChoice, falseChoice);
        TTargetQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Choose<TTargetQuery>(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> traversalPredicate, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, TTargetQuery> trueChoice) => Choose(traversalPredicate, trueChoice);
        TTargetQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Choose<TTargetQuery>(Func<IChooseBuilder<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>>, IChooseBuilderWithCaseOrDefault<TTargetQuery>> continuation) => Choose<TTargetQuery>(continuation);

        TTargetQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Coalesce<TTargetQuery>(params Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, TTargetQuery>[] traversals) => Coalesce(traversals);

        IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta> IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Dedup() => Dedup();
        IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta> IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Drop() => Drop();

        IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta> IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Emit() => Emit();

        IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta> IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Where(string lambda) => Where(lambda);

        TTargetQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.FlatMap<TTargetQuery>(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, TTargetQuery> mapping) => FlatMap(mapping);

        IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta> IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Identity() => Identity();

        IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta> IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Limit(long count) => Limit(count);
        IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta> IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.LimitLocal(long count) => LimitLocal(count);

        TTargetQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Local<TTargetQuery>(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta> , TTargetQuery> localTraversal) => Local(localTraversal);

        TTargetQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Map<TTargetQuery>(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, TTargetQuery> mapping) => Map(mapping);
        
        IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta> IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Not(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> notTraversal) => Not(notTraversal);
        IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta> IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.None() => None();

        TTargetQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Optional<TTargetQuery>(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, TTargetQuery> optionalTraversal) => Optional(optionalTraversal);
        IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta> IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Or(params Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery>[] orTraversals) => Or(orTraversals);

        IGremlinQuery<(TElement1, TElement2)> IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Project<TElement1, TElement2>(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement1>> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement2>> projection2) => Project<(TElement1, TElement2)>(projection1, projection2);
        IGremlinQuery<(TElement1, TElement2, TElement3)> IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Project<TElement1, TElement2, TElement3>(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement1>> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement2>> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement3>> projection3) => Project<(TElement1, TElement2, TElement3)>(projection1, projection2, projection3);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4)> IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Project<TElement1, TElement2, TElement3, TElement4>(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement1>> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement2>> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement3>> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement4>> projection4) => Project<(TElement1, TElement2, TElement3, TElement4)>(projection1, projection2, projection3, projection4);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5)> IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Project<TElement1, TElement2, TElement3, TElement4, TElement5>(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement1>> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement2>> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement3>> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement4>> projection4, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement5>> projection5) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5)>(projection1, projection2, projection3, projection4, projection5);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6)> IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6>(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement1>> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement2>> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement3>> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement4>> projection4, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement5>> projection5, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement6>> projection6) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6)>(projection1, projection2, projection3, projection4, projection5, projection6);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7)> IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7>(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement1>> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement2>> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement3>> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement4>> projection4, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement5>> projection5, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement6>> projection6, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement7>> projection7) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8)> IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8>(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement1>> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement2>> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement3>> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement4>> projection4, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement5>> projection5, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement6>> projection6, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement7>> projection7, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement8>> projection8) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9)> IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9>(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement1>> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement2>> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement3>> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement4>> projection4, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement5>> projection5, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement6>> projection6, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement7>> projection7, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement8>> projection8, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement9>> projection9) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10)> IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10>(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement1>> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement2>> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement3>> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement4>> projection4, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement5>> projection5, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement6>> projection6, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement7>> projection7, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement8>> projection8, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement9>> projection9, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement10>> projection10) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11)> IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11>(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement1>> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement2>> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement3>> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement4>> projection4, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement5>> projection5, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement6>> projection6, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement7>> projection7, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement8>> projection8, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement9>> projection9, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement10>> projection10, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement11>> projection11) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12)> IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12>(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement1>> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement2>> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement3>> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement4>> projection4, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement5>> projection5, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement6>> projection6, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement7>> projection7, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement8>> projection8, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement9>> projection9, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement10>> projection10, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement11>> projection11, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement12>> projection12) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13)> IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13>(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement1>> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement2>> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement3>> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement4>> projection4, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement5>> projection5, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement6>> projection6, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement7>> projection7, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement8>> projection8, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement9>> projection9, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement10>> projection10, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement11>> projection11, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement12>> projection12, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement13>> projection13) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14)> IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14>(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement1>> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement2>> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement3>> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement4>> projection4, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement5>> projection5, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement6>> projection6, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement7>> projection7, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement8>> projection8, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement9>> projection9, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement10>> projection10, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement11>> projection11, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement12>> projection12, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement13>> projection13, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement14>> projection14) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15)> IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15>(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement1>> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement2>> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement3>> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement4>> projection4, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement5>> projection5, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement6>> projection6, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement7>> projection7, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement8>> projection8, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement9>> projection9, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement10>> projection10, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement11>> projection11, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement12>> projection12, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement13>> projection13, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement14>> projection14, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement15>> projection15) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15, TElement16)> IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15, TElement16>(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement1>> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement2>> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement3>> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement4>> projection4, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement5>> projection5, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement6>> projection6, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement7>> projection7, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement8>> projection8, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement9>> projection9, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement10>> projection10, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement11>> projection11, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement12>> projection12, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement13>> projection13, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement14>> projection14, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement15>> projection15, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery<TElement16>> projection16) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15, TElement16)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15, projection16);

        IGremlinQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Project(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection2) => Project<Unit>(projection1, projection2);
        IGremlinQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Project(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection3) => Project<Unit>(projection1, projection2, projection3);
        IGremlinQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Project(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection4) => Project<Unit>(projection1, projection2, projection3, projection4);
        IGremlinQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Project(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection4, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection5) => Project<Unit>(projection1, projection2, projection3, projection4, projection5);
        IGremlinQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Project(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection4, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection5, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection6) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6);
        IGremlinQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Project(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection4, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection5, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection6, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection7) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7);
        IGremlinQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Project(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection4, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection5, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection6, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection7, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection8) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8);
        IGremlinQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Project(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection4, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection5, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection6, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection7, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection8, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection9) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9);
        IGremlinQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Project(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection4, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection5, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection6, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection7, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection8, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection9, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection10) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10);
        IGremlinQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Project(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection4, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection5, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection6, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection7, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection8, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection9, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection10, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection11) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11);
        IGremlinQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Project(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection4, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection5, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection6, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection7, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection8, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection9, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection10, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection11, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection12) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12);
        IGremlinQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Project(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection4, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection5, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection6, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection7, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection8, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection9, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection10, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection11, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection12, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection13) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13);
        IGremlinQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Project(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection4, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection5, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection6, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection7, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection8, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection9, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection10, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection11, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection12, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection13, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection14) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14);
        IGremlinQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Project(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection4, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection5, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection6, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection7, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection8, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection9, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection10, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection11, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection12, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection13, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection14, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection15) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15);
        IGremlinQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Project(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection1, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection2, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection3, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection4, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection5, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection6, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection7, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection8, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection9, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection10, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection11, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection12, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection13, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection14, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection15, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> projection16) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15, projection16);

        IGremlinQuery<object> IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Project(Func<IProjectBuilder<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>>, IProjectBuilder<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>>> continuation) => Project(continuation);

        IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta> IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Range(long low, long high) => Range(low, high);

        IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta> IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Repeat(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>> repeatTraversal) => Repeat(repeatTraversal);
        IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta> IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.RepeatUntil(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>> repeatTraversal, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> untilTraversal) => RepeatUntil(repeatTraversal, untilTraversal);
        IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta> IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.UntilRepeat(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>> repeatTraversal, Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> untilTraversal) => UntilRepeat(repeatTraversal, untilTraversal);

        IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta> IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.SideEffect(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> sideEffectTraversal) => SideEffect(sideEffectTraversal);
        IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta> IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Skip(long count) => Skip(count);

        IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta> IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Tail(long count) => Tail(count);
        IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta> IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.TailLocal(int count) => TailLocal(count);

        IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta> IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Times(int count) => Times(count);

        TTargetQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Union<TTargetQuery>(params Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, TTargetQuery>[] unionTraversals) => Union(unionTraversals);
        IPropertyGremlinQuery<TElement> IPropertyGremlinQuery<TElement>.And(params Func<IPropertyGremlinQuery<TElement>, IGremlinQuery>[] andTraversals) => And(andTraversals);
        IPropertyGremlinQuery<TElement> IPropertyGremlinQuery<TElement>.As(params StepLabel[] stepLabels) => As(stepLabels);

        IPropertyGremlinQuery<TElement> IPropertyGremlinQuery<TElement>.Barrier() => Barrier();

        TTargetQuery IPropertyGremlinQuery<TElement>.Choose<TTargetQuery>(Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> traversalPredicate, Func<IPropertyGremlinQuery<TElement>, TTargetQuery> trueChoice, Func<IPropertyGremlinQuery<TElement>, TTargetQuery> falseChoice) => Choose(traversalPredicate, trueChoice, falseChoice);
        TTargetQuery IPropertyGremlinQuery<TElement>.Choose<TTargetQuery>(Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> traversalPredicate, Func<IPropertyGremlinQuery<TElement>, TTargetQuery> trueChoice) => Choose(traversalPredicate, trueChoice);
        TTargetQuery IPropertyGremlinQuery<TElement>.Choose<TTargetQuery>(Func<IChooseBuilder<IPropertyGremlinQuery<TElement>>, IChooseBuilderWithCaseOrDefault<TTargetQuery>> continuation) => Choose<TTargetQuery>(continuation);

        TTargetQuery IPropertyGremlinQuery<TElement>.Coalesce<TTargetQuery>(params Func<IPropertyGremlinQuery<TElement>, TTargetQuery>[] traversals) => Coalesce(traversals);

        IPropertyGremlinQuery<TElement> IPropertyGremlinQuery<TElement>.Dedup() => Dedup();
        IPropertyGremlinQuery<TElement> IPropertyGremlinQuery<TElement>.Drop() => Drop();

        IPropertyGremlinQuery<TElement> IPropertyGremlinQuery<TElement>.Emit() => Emit();

        IPropertyGremlinQuery<TElement> IPropertyGremlinQuery<TElement>.Where(string lambda) => Where(lambda);

        TTargetQuery IPropertyGremlinQuery<TElement>.FlatMap<TTargetQuery>(Func<IPropertyGremlinQuery<TElement>, TTargetQuery> mapping) => FlatMap(mapping);

        IPropertyGremlinQuery<TElement> IPropertyGremlinQuery<TElement>.Identity() => Identity();

        IPropertyGremlinQuery<TElement> IPropertyGremlinQuery<TElement>.Limit(long count) => Limit(count);
        IPropertyGremlinQuery<TElement> IPropertyGremlinQuery<TElement>.LimitLocal(long count) => LimitLocal(count);

        TTargetQuery IPropertyGremlinQuery<TElement>.Local<TTargetQuery>(Func<IPropertyGremlinQuery<TElement> , TTargetQuery> localTraversal) => Local(localTraversal);

        TTargetQuery IPropertyGremlinQuery<TElement>.Map<TTargetQuery>(Func<IPropertyGremlinQuery<TElement>, TTargetQuery> mapping) => Map(mapping);
        
        IPropertyGremlinQuery<TElement> IPropertyGremlinQuery<TElement>.Not(Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> notTraversal) => Not(notTraversal);
        IPropertyGremlinQuery<TElement> IPropertyGremlinQuery<TElement>.None() => None();

        TTargetQuery IPropertyGremlinQuery<TElement>.Optional<TTargetQuery>(Func<IPropertyGremlinQuery<TElement>, TTargetQuery> optionalTraversal) => Optional(optionalTraversal);
        IPropertyGremlinQuery<TElement> IPropertyGremlinQuery<TElement>.Or(params Func<IPropertyGremlinQuery<TElement>, IGremlinQuery>[] orTraversals) => Or(orTraversals);

        IGremlinQuery<(TElement1, TElement2)> IPropertyGremlinQuery<TElement>.Project<TElement1, TElement2>(Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2) => Project<(TElement1, TElement2)>(projection1, projection2);
        IGremlinQuery<(TElement1, TElement2, TElement3)> IPropertyGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3>(Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3) => Project<(TElement1, TElement2, TElement3)>(projection1, projection2, projection3);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4)> IPropertyGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4>(Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4) => Project<(TElement1, TElement2, TElement3, TElement4)>(projection1, projection2, projection3, projection4);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5)> IPropertyGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5>(Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5)>(projection1, projection2, projection3, projection4, projection5);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6)> IPropertyGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6>(Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6)>(projection1, projection2, projection3, projection4, projection5, projection6);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7)> IPropertyGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7>(Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8)> IPropertyGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8>(Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9)> IPropertyGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9>(Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement9>> projection9) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10)> IPropertyGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10>(Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement9>> projection9, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement10>> projection10) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11)> IPropertyGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11>(Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement9>> projection9, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement10>> projection10, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement11>> projection11) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12)> IPropertyGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12>(Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement9>> projection9, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement10>> projection10, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement11>> projection11, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement12>> projection12) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13)> IPropertyGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13>(Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement9>> projection9, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement10>> projection10, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement11>> projection11, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement12>> projection12, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement13>> projection13) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14)> IPropertyGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14>(Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement9>> projection9, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement10>> projection10, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement11>> projection11, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement12>> projection12, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement13>> projection13, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement14>> projection14) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15)> IPropertyGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15>(Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement9>> projection9, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement10>> projection10, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement11>> projection11, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement12>> projection12, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement13>> projection13, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement14>> projection14, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement15>> projection15) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15);
        IGremlinQuery<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15, TElement16)> IPropertyGremlinQuery<TElement>.Project<TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15, TElement16>(Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement1>> projection1, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement2>> projection2, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement3>> projection3, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement4>> projection4, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement5>> projection5, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement6>> projection6, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement7>> projection7, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement8>> projection8, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement9>> projection9, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement10>> projection10, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement11>> projection11, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement12>> projection12, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement13>> projection13, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement14>> projection14, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement15>> projection15, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery<TElement16>> projection16) => Project<(TElement1, TElement2, TElement3, TElement4, TElement5, TElement6, TElement7, TElement8, TElement9, TElement10, TElement11, TElement12, TElement13, TElement14, TElement15, TElement16)>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15, projection16);

        IGremlinQuery IPropertyGremlinQuery<TElement>.Project(Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection2) => Project<Unit>(projection1, projection2);
        IGremlinQuery IPropertyGremlinQuery<TElement>.Project(Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection3) => Project<Unit>(projection1, projection2, projection3);
        IGremlinQuery IPropertyGremlinQuery<TElement>.Project(Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection4) => Project<Unit>(projection1, projection2, projection3, projection4);
        IGremlinQuery IPropertyGremlinQuery<TElement>.Project(Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection5) => Project<Unit>(projection1, projection2, projection3, projection4, projection5);
        IGremlinQuery IPropertyGremlinQuery<TElement>.Project(Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection6) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6);
        IGremlinQuery IPropertyGremlinQuery<TElement>.Project(Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection7) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7);
        IGremlinQuery IPropertyGremlinQuery<TElement>.Project(Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection8) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8);
        IGremlinQuery IPropertyGremlinQuery<TElement>.Project(Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection8, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection9) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9);
        IGremlinQuery IPropertyGremlinQuery<TElement>.Project(Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection8, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection9, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection10) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10);
        IGremlinQuery IPropertyGremlinQuery<TElement>.Project(Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection8, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection9, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection10, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection11) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11);
        IGremlinQuery IPropertyGremlinQuery<TElement>.Project(Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection8, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection9, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection10, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection11, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection12) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12);
        IGremlinQuery IPropertyGremlinQuery<TElement>.Project(Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection8, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection9, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection10, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection11, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection12, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection13) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13);
        IGremlinQuery IPropertyGremlinQuery<TElement>.Project(Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection8, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection9, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection10, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection11, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection12, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection13, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection14) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14);
        IGremlinQuery IPropertyGremlinQuery<TElement>.Project(Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection8, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection9, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection10, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection11, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection12, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection13, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection14, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection15) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15);
        IGremlinQuery IPropertyGremlinQuery<TElement>.Project(Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection1, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection2, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection3, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection4, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection5, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection6, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection7, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection8, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection9, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection10, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection11, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection12, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection13, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection14, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection15, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> projection16) => Project<Unit>(projection1, projection2, projection3, projection4, projection5, projection6, projection7, projection8, projection9, projection10, projection11, projection12, projection13, projection14, projection15, projection16);

        IGremlinQuery<object> IPropertyGremlinQuery<TElement>.Project(Func<IProjectBuilder<IPropertyGremlinQuery<TElement>>, IProjectBuilder<IPropertyGremlinQuery<TElement>>> continuation) => Project(continuation);

        IPropertyGremlinQuery<TElement> IPropertyGremlinQuery<TElement>.Range(long low, long high) => Range(low, high);

        IPropertyGremlinQuery<TElement> IPropertyGremlinQuery<TElement>.Repeat(Func<IPropertyGremlinQuery<TElement>, IPropertyGremlinQuery<TElement>> repeatTraversal) => Repeat(repeatTraversal);
        IPropertyGremlinQuery<TElement> IPropertyGremlinQuery<TElement>.RepeatUntil(Func<IPropertyGremlinQuery<TElement>, IPropertyGremlinQuery<TElement>> repeatTraversal, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> untilTraversal) => RepeatUntil(repeatTraversal, untilTraversal);
        IPropertyGremlinQuery<TElement> IPropertyGremlinQuery<TElement>.UntilRepeat(Func<IPropertyGremlinQuery<TElement>, IPropertyGremlinQuery<TElement>> repeatTraversal, Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> untilTraversal) => UntilRepeat(repeatTraversal, untilTraversal);

        IPropertyGremlinQuery<TElement> IPropertyGremlinQuery<TElement>.SideEffect(Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> sideEffectTraversal) => SideEffect(sideEffectTraversal);
        IPropertyGremlinQuery<TElement> IPropertyGremlinQuery<TElement>.Skip(long count) => Skip(count);

        IPropertyGremlinQuery<TElement> IPropertyGremlinQuery<TElement>.Tail(long count) => Tail(count);
        IPropertyGremlinQuery<TElement> IPropertyGremlinQuery<TElement>.TailLocal(int count) => TailLocal(count);

        IPropertyGremlinQuery<TElement> IPropertyGremlinQuery<TElement>.Times(int count) => Times(count);

        TTargetQuery IPropertyGremlinQuery<TElement>.Union<TTargetQuery>(params Func<IPropertyGremlinQuery<TElement>, TTargetQuery>[] unionTraversals) => Union(unionTraversals);


        IGremlinQuery<TResult> IGremlinQuery.Cast<TResult>() => Cast<TResult>();
        IElementGremlinQuery<TResult> IElementGremlinQuery.Cast<TResult>() => Cast<TResult>();
        IVertexGremlinQuery<TResult> IVertexGremlinQuery.Cast<TResult>() => Cast<TResult>();
        IEdgeGremlinQuery<TResult> IEdgeGremlinQuery.Cast<TResult>() => Cast<TResult>();


        IOrderedValueGremlinQuery<TElement> IValueGremlinQuery<TElement>.OrderBy(Expression<Func<TElement, object>> projection) => OrderBy(projection, Order.Incr);
        IOrderedValueGremlinQuery<TElement> IValueGremlinQuery<TElement>.OrderByDescending(Expression<Func<TElement, object>> projection) => OrderBy(projection, Order.Decr);
        IOrderedArrayGremlinQuery<TElement, TFoldedQuery> IArrayGremlinQuery<TElement, TFoldedQuery>.OrderBy(Expression<Func<TElement, object>> projection) => OrderBy(projection, Order.Incr);
        IOrderedArrayGremlinQuery<TElement, TFoldedQuery> IArrayGremlinQuery<TElement, TFoldedQuery>.OrderByDescending(Expression<Func<TElement, object>> projection) => OrderBy(projection, Order.Decr);
        IOrderedVertexGremlinQuery<TElement> IVertexGremlinQuery<TElement>.OrderBy(Expression<Func<TElement, object>> projection) => OrderBy(projection, Order.Incr);
        IOrderedVertexGremlinQuery<TElement> IVertexGremlinQuery<TElement>.OrderByDescending(Expression<Func<TElement, object>> projection) => OrderBy(projection, Order.Decr);
        IOrderedEdgeGremlinQuery<TElement> IEdgeGremlinQuery<TElement>.OrderBy(Expression<Func<TElement, object>> projection) => OrderBy(projection, Order.Incr);
        IOrderedEdgeGremlinQuery<TElement> IEdgeGremlinQuery<TElement>.OrderByDescending(Expression<Func<TElement, object>> projection) => OrderBy(projection, Order.Decr);
        IOrderedEdgeGremlinQuery<TElement, TOutVertex> IEdgeGremlinQuery<TElement, TOutVertex>.OrderBy(Expression<Func<TElement, object>> projection) => OrderBy(projection, Order.Incr);
        IOrderedEdgeGremlinQuery<TElement, TOutVertex> IEdgeGremlinQuery<TElement, TOutVertex>.OrderByDescending(Expression<Func<TElement, object>> projection) => OrderBy(projection, Order.Decr);
        IOrderedEdgeGremlinQuery<TElement, TOutVertex, TInVertex> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.OrderBy(Expression<Func<TElement, object>> projection) => OrderBy(projection, Order.Incr);
        IOrderedEdgeGremlinQuery<TElement, TOutVertex, TInVertex> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.OrderByDescending(Expression<Func<TElement, object>> projection) => OrderBy(projection, Order.Decr);
        IOrderedInEdgeGremlinQuery<TElement, TInVertex> IInEdgeGremlinQuery<TElement, TInVertex>.OrderBy(Expression<Func<TElement, object>> projection) => OrderBy(projection, Order.Incr);
        IOrderedInEdgeGremlinQuery<TElement, TInVertex> IInEdgeGremlinQuery<TElement, TInVertex>.OrderByDescending(Expression<Func<TElement, object>> projection) => OrderBy(projection, Order.Decr);
        IOrderedOutEdgeGremlinQuery<TElement, TOutVertex> IOutEdgeGremlinQuery<TElement, TOutVertex>.OrderBy(Expression<Func<TElement, object>> projection) => OrderBy(projection, Order.Incr);
        IOrderedOutEdgeGremlinQuery<TElement, TOutVertex> IOutEdgeGremlinQuery<TElement, TOutVertex>.OrderByDescending(Expression<Func<TElement, object>> projection) => OrderBy(projection, Order.Decr);
        IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.OrderBy(Expression<Func<TElement, object>> projection) => OrderBy(projection, Order.Incr);
        IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.OrderByDescending(Expression<Func<TElement, object>> projection) => OrderBy(projection, Order.Decr);
        IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta> IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.OrderBy(Expression<Func<TElement, object>> projection) => OrderBy(projection, Order.Incr);
        IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta> IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.OrderByDescending(Expression<Func<TElement, object>> projection) => OrderBy(projection, Order.Decr);
        IOrderedPropertyGremlinQuery<TElement> IPropertyGremlinQuery<TElement>.OrderBy(Expression<Func<TElement, object>> projection) => OrderBy(projection, Order.Incr);
        IOrderedPropertyGremlinQuery<TElement> IPropertyGremlinQuery<TElement>.OrderByDescending(Expression<Func<TElement, object>> projection) => OrderBy(projection, Order.Decr);


        IOrderedVertexGremlinQuery IVertexGremlinQuery.OrderBy(Func<IVertexGremlinQuery, IGremlinQuery> traversal) => OrderBy(traversal, Order.Incr);
        IOrderedVertexGremlinQuery IVertexGremlinQuery.OrderBy(string lambda) => OrderBy(lambda);
        IOrderedVertexGremlinQuery IVertexGremlinQuery.OrderByDescending(Func<IVertexGremlinQuery, IGremlinQuery> traversal) => OrderBy(traversal, Order.Decr);
        IOrderedEdgeGremlinQuery IEdgeGremlinQuery.OrderBy(Func<IEdgeGremlinQuery, IGremlinQuery> traversal) => OrderBy(traversal, Order.Incr);
        IOrderedEdgeGremlinQuery IEdgeGremlinQuery.OrderBy(string lambda) => OrderBy(lambda);
        IOrderedEdgeGremlinQuery IEdgeGremlinQuery.OrderByDescending(Func<IEdgeGremlinQuery, IGremlinQuery> traversal) => OrderBy(traversal, Order.Decr);
        IOrderedValueGremlinQuery<TElement> IValueGremlinQuery<TElement>.OrderBy(Func<IValueGremlinQuery<TElement>, IGremlinQuery> traversal) => OrderBy(traversal, Order.Incr);
        IOrderedValueGremlinQuery<TElement> IValueGremlinQuery<TElement>.OrderBy(string lambda) => OrderBy(lambda);
        IOrderedValueGremlinQuery<TElement> IValueGremlinQuery<TElement>.OrderByDescending(Func<IValueGremlinQuery<TElement>, IGremlinQuery> traversal) => OrderBy(traversal, Order.Decr);
        IOrderedArrayGremlinQuery<TElement, TFoldedQuery> IArrayGremlinQuery<TElement, TFoldedQuery>.OrderBy(Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> traversal) => OrderBy(traversal, Order.Incr);
        IOrderedArrayGremlinQuery<TElement, TFoldedQuery> IArrayGremlinQuery<TElement, TFoldedQuery>.OrderBy(string lambda) => OrderBy(lambda);
        IOrderedArrayGremlinQuery<TElement, TFoldedQuery> IArrayGremlinQuery<TElement, TFoldedQuery>.OrderByDescending(Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> traversal) => OrderBy(traversal, Order.Decr);
        IOrderedVertexGremlinQuery<TElement> IVertexGremlinQuery<TElement>.OrderBy(Func<IVertexGremlinQuery<TElement>, IGremlinQuery> traversal) => OrderBy(traversal, Order.Incr);
        IOrderedVertexGremlinQuery<TElement> IVertexGremlinQuery<TElement>.OrderBy(string lambda) => OrderBy(lambda);
        IOrderedVertexGremlinQuery<TElement> IVertexGremlinQuery<TElement>.OrderByDescending(Func<IVertexGremlinQuery<TElement>, IGremlinQuery> traversal) => OrderBy(traversal, Order.Decr);
        IOrderedEdgeGremlinQuery<TElement> IEdgeGremlinQuery<TElement>.OrderBy(Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> traversal) => OrderBy(traversal, Order.Incr);
        IOrderedEdgeGremlinQuery<TElement> IEdgeGremlinQuery<TElement>.OrderBy(string lambda) => OrderBy(lambda);
        IOrderedEdgeGremlinQuery<TElement> IEdgeGremlinQuery<TElement>.OrderByDescending(Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> traversal) => OrderBy(traversal, Order.Decr);
        IOrderedEdgeGremlinQuery<TElement, TOutVertex> IEdgeGremlinQuery<TElement, TOutVertex>.OrderBy(Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> traversal) => OrderBy(traversal, Order.Incr);
        IOrderedEdgeGremlinQuery<TElement, TOutVertex> IEdgeGremlinQuery<TElement, TOutVertex>.OrderBy(string lambda) => OrderBy(lambda);
        IOrderedEdgeGremlinQuery<TElement, TOutVertex> IEdgeGremlinQuery<TElement, TOutVertex>.OrderByDescending(Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> traversal) => OrderBy(traversal, Order.Decr);
        IOrderedEdgeGremlinQuery<TElement, TOutVertex, TInVertex> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.OrderBy(Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> traversal) => OrderBy(traversal, Order.Incr);
        IOrderedEdgeGremlinQuery<TElement, TOutVertex, TInVertex> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.OrderBy(string lambda) => OrderBy(lambda);
        IOrderedEdgeGremlinQuery<TElement, TOutVertex, TInVertex> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.OrderByDescending(Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> traversal) => OrderBy(traversal, Order.Decr);
        IOrderedInEdgeGremlinQuery<TElement, TInVertex> IInEdgeGremlinQuery<TElement, TInVertex>.OrderBy(Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> traversal) => OrderBy(traversal, Order.Incr);
        IOrderedInEdgeGremlinQuery<TElement, TInVertex> IInEdgeGremlinQuery<TElement, TInVertex>.OrderBy(string lambda) => OrderBy(lambda);
        IOrderedInEdgeGremlinQuery<TElement, TInVertex> IInEdgeGremlinQuery<TElement, TInVertex>.OrderByDescending(Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> traversal) => OrderBy(traversal, Order.Decr);
        IOrderedOutEdgeGremlinQuery<TElement, TOutVertex> IOutEdgeGremlinQuery<TElement, TOutVertex>.OrderBy(Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> traversal) => OrderBy(traversal, Order.Incr);
        IOrderedOutEdgeGremlinQuery<TElement, TOutVertex> IOutEdgeGremlinQuery<TElement, TOutVertex>.OrderBy(string lambda) => OrderBy(lambda);
        IOrderedOutEdgeGremlinQuery<TElement, TOutVertex> IOutEdgeGremlinQuery<TElement, TOutVertex>.OrderByDescending(Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> traversal) => OrderBy(traversal, Order.Decr);
        IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.OrderBy(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> traversal) => OrderBy(traversal, Order.Incr);
        IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.OrderBy(string lambda) => OrderBy(lambda);
        IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.OrderByDescending(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> traversal) => OrderBy(traversal, Order.Decr);
        IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta> IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.OrderBy(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> traversal) => OrderBy(traversal, Order.Incr);
        IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta> IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.OrderBy(string lambda) => OrderBy(lambda);
        IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta> IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.OrderByDescending(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> traversal) => OrderBy(traversal, Order.Decr);
        IOrderedPropertyGremlinQuery<TElement> IPropertyGremlinQuery<TElement>.OrderBy(Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> traversal) => OrderBy(traversal, Order.Incr);
        IOrderedPropertyGremlinQuery<TElement> IPropertyGremlinQuery<TElement>.OrderBy(string lambda) => OrderBy(lambda);
        IOrderedPropertyGremlinQuery<TElement> IPropertyGremlinQuery<TElement>.OrderByDescending(Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> traversal) => OrderBy(traversal, Order.Decr);


        IOrderedVertexGremlinQuery IOrderedVertexGremlinQuery.ThenBy(Func<IVertexGremlinQuery, IGremlinQuery> traversal) => By(traversal, Order.Incr);
        IOrderedVertexGremlinQuery IOrderedVertexGremlinQuery.ThenByDescending(Func<IVertexGremlinQuery, IGremlinQuery> traversal) => By(traversal, Order.Decr);
        IOrderedVertexGremlinQuery IOrderedVertexGremlinQuery.ThenBy(string lambda) => By(lambda);
        IOrderedEdgeGremlinQuery IOrderedEdgeGremlinQuery.ThenBy(Func<IEdgeGremlinQuery, IGremlinQuery> traversal) => By(traversal, Order.Incr);
        IOrderedEdgeGremlinQuery IOrderedEdgeGremlinQuery.ThenByDescending(Func<IEdgeGremlinQuery, IGremlinQuery> traversal) => By(traversal, Order.Decr);
        IOrderedEdgeGremlinQuery IOrderedEdgeGremlinQuery.ThenBy(string lambda) => By(lambda);
        IOrderedValueGremlinQuery<TElement> IOrderedValueGremlinQuery<TElement>.ThenBy(Func<IValueGremlinQuery<TElement>, IGremlinQuery> traversal) => By(traversal, Order.Incr);
        IOrderedValueGremlinQuery<TElement> IOrderedValueGremlinQuery<TElement>.ThenByDescending(Func<IValueGremlinQuery<TElement>, IGremlinQuery> traversal) => By(traversal, Order.Decr);
        IOrderedValueGremlinQuery<TElement> IOrderedValueGremlinQuery<TElement>.ThenBy(string lambda) => By(lambda);
        IOrderedArrayGremlinQuery<TElement, TFoldedQuery> IOrderedArrayGremlinQuery<TElement, TFoldedQuery>.ThenBy(Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> traversal) => By(traversal, Order.Incr);
        IOrderedArrayGremlinQuery<TElement, TFoldedQuery> IOrderedArrayGremlinQuery<TElement, TFoldedQuery>.ThenByDescending(Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> traversal) => By(traversal, Order.Decr);
        IOrderedArrayGremlinQuery<TElement, TFoldedQuery> IOrderedArrayGremlinQuery<TElement, TFoldedQuery>.ThenBy(string lambda) => By(lambda);
        IOrderedVertexGremlinQuery<TElement> IOrderedVertexGremlinQuery<TElement>.ThenBy(Func<IVertexGremlinQuery<TElement>, IGremlinQuery> traversal) => By(traversal, Order.Incr);
        IOrderedVertexGremlinQuery<TElement> IOrderedVertexGremlinQuery<TElement>.ThenByDescending(Func<IVertexGremlinQuery<TElement>, IGremlinQuery> traversal) => By(traversal, Order.Decr);
        IOrderedVertexGremlinQuery<TElement> IOrderedVertexGremlinQuery<TElement>.ThenBy(string lambda) => By(lambda);
        IOrderedEdgeGremlinQuery<TElement> IOrderedEdgeGremlinQuery<TElement>.ThenBy(Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> traversal) => By(traversal, Order.Incr);
        IOrderedEdgeGremlinQuery<TElement> IOrderedEdgeGremlinQuery<TElement>.ThenByDescending(Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> traversal) => By(traversal, Order.Decr);
        IOrderedEdgeGremlinQuery<TElement> IOrderedEdgeGremlinQuery<TElement>.ThenBy(string lambda) => By(lambda);
        IOrderedEdgeGremlinQuery<TElement, TOutVertex> IOrderedEdgeGremlinQuery<TElement, TOutVertex>.ThenBy(Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> traversal) => By(traversal, Order.Incr);
        IOrderedEdgeGremlinQuery<TElement, TOutVertex> IOrderedEdgeGremlinQuery<TElement, TOutVertex>.ThenByDescending(Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> traversal) => By(traversal, Order.Decr);
        IOrderedEdgeGremlinQuery<TElement, TOutVertex> IOrderedEdgeGremlinQuery<TElement, TOutVertex>.ThenBy(string lambda) => By(lambda);
        IOrderedEdgeGremlinQuery<TElement, TOutVertex, TInVertex> IOrderedEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.ThenBy(Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> traversal) => By(traversal, Order.Incr);
        IOrderedEdgeGremlinQuery<TElement, TOutVertex, TInVertex> IOrderedEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.ThenByDescending(Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> traversal) => By(traversal, Order.Decr);
        IOrderedEdgeGremlinQuery<TElement, TOutVertex, TInVertex> IOrderedEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.ThenBy(string lambda) => By(lambda);
        IOrderedInEdgeGremlinQuery<TElement, TInVertex> IOrderedInEdgeGremlinQuery<TElement, TInVertex>.ThenBy(Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> traversal) => By(traversal, Order.Incr);
        IOrderedInEdgeGremlinQuery<TElement, TInVertex> IOrderedInEdgeGremlinQuery<TElement, TInVertex>.ThenByDescending(Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> traversal) => By(traversal, Order.Decr);
        IOrderedInEdgeGremlinQuery<TElement, TInVertex> IOrderedInEdgeGremlinQuery<TElement, TInVertex>.ThenBy(string lambda) => By(lambda);
        IOrderedOutEdgeGremlinQuery<TElement, TOutVertex> IOrderedOutEdgeGremlinQuery<TElement, TOutVertex>.ThenBy(Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> traversal) => By(traversal, Order.Incr);
        IOrderedOutEdgeGremlinQuery<TElement, TOutVertex> IOrderedOutEdgeGremlinQuery<TElement, TOutVertex>.ThenByDescending(Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> traversal) => By(traversal, Order.Decr);
        IOrderedOutEdgeGremlinQuery<TElement, TOutVertex> IOrderedOutEdgeGremlinQuery<TElement, TOutVertex>.ThenBy(string lambda) => By(lambda);
        IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue> IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue>.ThenBy(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> traversal) => By(traversal, Order.Incr);
        IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue> IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue>.ThenByDescending(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> traversal) => By(traversal, Order.Decr);
        IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue> IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue>.ThenBy(string lambda) => By(lambda);
        IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta> IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.ThenBy(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> traversal) => By(traversal, Order.Incr);
        IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta> IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.ThenByDescending(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> traversal) => By(traversal, Order.Decr);
        IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta> IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.ThenBy(string lambda) => By(lambda);
        IOrderedPropertyGremlinQuery<TElement> IOrderedPropertyGremlinQuery<TElement>.ThenBy(Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> traversal) => By(traversal, Order.Incr);
        IOrderedPropertyGremlinQuery<TElement> IOrderedPropertyGremlinQuery<TElement>.ThenByDescending(Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> traversal) => By(traversal, Order.Decr);
        IOrderedPropertyGremlinQuery<TElement> IOrderedPropertyGremlinQuery<TElement>.ThenBy(string lambda) => By(lambda);


        IOrderedValueGremlinQuery<TElement> IOrderedValueGremlinQuery<TElement>.ThenBy(Expression<Func<TElement, object>> projection) => By(projection, Order.Incr);
        IOrderedValueGremlinQuery<TElement> IOrderedValueGremlinQuery<TElement>.ThenByDescending(Expression<Func<TElement, object>> projection) => By(projection, Order.Decr);
        IOrderedArrayGremlinQuery<TElement, TFoldedQuery> IOrderedArrayGremlinQuery<TElement, TFoldedQuery>.ThenBy(Expression<Func<TElement, object>> projection) => By(projection, Order.Incr);
        IOrderedArrayGremlinQuery<TElement, TFoldedQuery> IOrderedArrayGremlinQuery<TElement, TFoldedQuery>.ThenByDescending(Expression<Func<TElement, object>> projection) => By(projection, Order.Decr);
        IOrderedVertexGremlinQuery<TElement> IOrderedVertexGremlinQuery<TElement>.ThenBy(Expression<Func<TElement, object>> projection) => By(projection, Order.Incr);
        IOrderedVertexGremlinQuery<TElement> IOrderedVertexGremlinQuery<TElement>.ThenByDescending(Expression<Func<TElement, object>> projection) => By(projection, Order.Decr);
        IOrderedEdgeGremlinQuery<TElement> IOrderedEdgeGremlinQuery<TElement>.ThenBy(Expression<Func<TElement, object>> projection) => By(projection, Order.Incr);
        IOrderedEdgeGremlinQuery<TElement> IOrderedEdgeGremlinQuery<TElement>.ThenByDescending(Expression<Func<TElement, object>> projection) => By(projection, Order.Decr);
        IOrderedEdgeGremlinQuery<TElement, TOutVertex> IOrderedEdgeGremlinQuery<TElement, TOutVertex>.ThenBy(Expression<Func<TElement, object>> projection) => By(projection, Order.Incr);
        IOrderedEdgeGremlinQuery<TElement, TOutVertex> IOrderedEdgeGremlinQuery<TElement, TOutVertex>.ThenByDescending(Expression<Func<TElement, object>> projection) => By(projection, Order.Decr);
        IOrderedEdgeGremlinQuery<TElement, TOutVertex, TInVertex> IOrderedEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.ThenBy(Expression<Func<TElement, object>> projection) => By(projection, Order.Incr);
        IOrderedEdgeGremlinQuery<TElement, TOutVertex, TInVertex> IOrderedEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.ThenByDescending(Expression<Func<TElement, object>> projection) => By(projection, Order.Decr);
        IOrderedInEdgeGremlinQuery<TElement, TInVertex> IOrderedInEdgeGremlinQuery<TElement, TInVertex>.ThenBy(Expression<Func<TElement, object>> projection) => By(projection, Order.Incr);
        IOrderedInEdgeGremlinQuery<TElement, TInVertex> IOrderedInEdgeGremlinQuery<TElement, TInVertex>.ThenByDescending(Expression<Func<TElement, object>> projection) => By(projection, Order.Decr);
        IOrderedOutEdgeGremlinQuery<TElement, TOutVertex> IOrderedOutEdgeGremlinQuery<TElement, TOutVertex>.ThenBy(Expression<Func<TElement, object>> projection) => By(projection, Order.Incr);
        IOrderedOutEdgeGremlinQuery<TElement, TOutVertex> IOrderedOutEdgeGremlinQuery<TElement, TOutVertex>.ThenByDescending(Expression<Func<TElement, object>> projection) => By(projection, Order.Decr);
        IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue> IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue>.ThenBy(Expression<Func<TElement, object>> projection) => By(projection, Order.Incr);
        IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue> IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue>.ThenByDescending(Expression<Func<TElement, object>> projection) => By(projection, Order.Decr);
        IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta> IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.ThenBy(Expression<Func<TElement, object>> projection) => By(projection, Order.Incr);
        IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta> IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.ThenByDescending(Expression<Func<TElement, object>> projection) => By(projection, Order.Decr);
        IOrderedPropertyGremlinQuery<TElement> IOrderedPropertyGremlinQuery<TElement>.ThenBy(Expression<Func<TElement, object>> projection) => By(projection, Order.Incr);
        IOrderedPropertyGremlinQuery<TElement> IOrderedPropertyGremlinQuery<TElement>.ThenByDescending(Expression<Func<TElement, object>> projection) => By(projection, Order.Decr);


        IValueGremlinQuery<IDictionary<string, TTarget>> IVertexGremlinQuery<TElement>.ValueMap<TTarget>(params Expression<Func<TElement, TTarget>>[] keys) => ValueMap<IDictionary<string, TTarget>>(keys);

        IValueGremlinQuery<TTarget> IVertexGremlinQuery<TElement>.Values<TTarget>() => ValuesForProjections<TTarget>(Enumerable.Empty<LambdaExpression>()); 
        IValueGremlinQuery<TTarget> IVertexGremlinQuery<TElement>.Values<TTarget>(params Expression<Func<TElement, TTarget>>[] projections) => ValuesForProjections<TTarget>(projections);
        IValueGremlinQuery<TTarget> IVertexGremlinQuery<TElement>.Values<TTarget>(params Expression<Func<TElement, TTarget[]>>[] projections) => ValuesForProjections<TTarget>(projections);
        IValueGremlinQuery<IDictionary<string, TTarget>> IEdgeGremlinQuery<TElement>.ValueMap<TTarget>(params Expression<Func<TElement, TTarget>>[] keys) => ValueMap<IDictionary<string, TTarget>>(keys);

        IValueGremlinQuery<TTarget> IEdgeGremlinQuery<TElement>.Values<TTarget>() => ValuesForProjections<TTarget>(Enumerable.Empty<LambdaExpression>()); 
        IValueGremlinQuery<TTarget> IEdgeGremlinQuery<TElement>.Values<TTarget>(params Expression<Func<TElement, TTarget>>[] projections) => ValuesForProjections<TTarget>(projections);
        IValueGremlinQuery<TTarget> IEdgeGremlinQuery<TElement>.Values<TTarget>(params Expression<Func<TElement, TTarget[]>>[] projections) => ValuesForProjections<TTarget>(projections);

        IValueGremlinQuery<TTarget> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Values<TTarget>() => ValuesForProjections<TTarget>(Enumerable.Empty<LambdaExpression>()); 
        IValueGremlinQuery<TTarget> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Values<TTarget>(params Expression<Func<TElement, TTarget>>[] projections) => ValuesForProjections<TTarget>(projections);
        IValueGremlinQuery<TTarget> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Values<TTarget>(params Expression<Func<TElement, TTarget[]>>[] projections) => ValuesForProjections<TTarget>(projections);


        IGremlinQuery<TTarget> IGremlinQuery.OfType<TTarget>() => OfType<TTarget>(Environment.Model.EdgesModel);
        IElementGremlinQuery<TTarget> IElementGremlinQuery.OfType<TTarget>() => OfType<TTarget>(Environment.Model.EdgesModel);
        IVertexGremlinQuery<TTarget> IVertexGremlinQuery.OfType<TTarget>() => OfType<TTarget>(Environment.Model.VerticesModel);
        IEdgeGremlinQuery<TTarget> IEdgeGremlinQuery.OfType<TTarget>() => OfType<TTarget>(Environment.Model.EdgesModel);
    


        IVertexGremlinQuery<TElement> IVertexGremlinQuery<TElement>.Update(TElement element) => AddOrUpdate(element, false, true);

        IVertexGremlinQuery<TTarget> IVertexGremlinQuery<TElement>.OfType<TTarget>() => OfType<TTarget>(Environment.Model.VerticesModel);

        IVertexGremlinQuery<TElement> IVertexGremlinQuery<TElement>.Property<TProjectedValue>(Expression<Func<TElement, TProjectedValue>> projection, [AllowNull] TProjectedValue value) => VertexProperty(projection, value);

        IVertexGremlinQuery<TElement> IVertexGremlinQuery<TElement>.Property<TProjectedValue>(Expression<Func<TElement, TProjectedValue[]>> projection, [AllowNull] TProjectedValue value) => VertexProperty(projection, value);


        IVertexGremlinQuery<TElement> IVertexGremlinQuery<TElement>.Property(string key, [AllowNull] object value) => Property(key, value);

        IVertexGremlinQuery<TElement> IVertexGremlinQuery<TElement>.Where(Expression<Func<TElement, bool>> predicate) => Where(predicate);
        IVertexGremlinQuery<TElement> IVertexGremlinQuery<TElement>.Where<TProjection>(Expression<Func<TElement, TProjection>> projection, Func<IGremlinQuery<TProjection>, IGremlinQuery> propertyTraversal) => Where(projection, propertyTraversal);


        IEdgeGremlinQuery<TElement> IEdgeGremlinQuery<TElement>.Update(TElement element) => AddOrUpdate(element, false, false);

        IEdgeGremlinQuery<TTarget> IEdgeGremlinQuery<TElement>.OfType<TTarget>() => OfType<TTarget>(Environment.Model.EdgesModel);

        IEdgeGremlinQuery<TElement> IEdgeGremlinQuery<TElement>.Property<TProjectedValue>(Expression<Func<TElement, TProjectedValue>> projection, [AllowNull] TProjectedValue value) => Property(projection, value);



        IEdgeGremlinQuery<TElement> IEdgeGremlinQuery<TElement>.Property(string key, [AllowNull] object value) => Property(key, value);

        IEdgeGremlinQuery<TElement> IEdgeGremlinQuery<TElement>.Where(Expression<Func<TElement, bool>> predicate) => Where(predicate);
        IEdgeGremlinQuery<TElement> IEdgeGremlinQuery<TElement>.Where<TProjection>(Expression<Func<TElement, TProjection>> projection, Func<IGremlinQuery<TProjection>, IGremlinQuery> propertyTraversal) => Where(projection, propertyTraversal);


        IEdgeGremlinQuery<TElement, TOutVertex> IEdgeGremlinQuery<TElement, TOutVertex>.Update(TElement element) => AddOrUpdate(element, false, false);

        IEdgeGremlinQuery<TTarget, TOutVertex> IEdgeGremlinQuery<TElement, TOutVertex>.OfType<TTarget>() => OfType<TTarget>(Environment.Model.EdgesModel);

        IEdgeGremlinQuery<TElement, TOutVertex> IEdgeGremlinQuery<TElement, TOutVertex>.Property<TProjectedValue>(Expression<Func<TElement, TProjectedValue>> projection, [AllowNull] TProjectedValue value) => Property(projection, value);



        IEdgeGremlinQuery<TElement, TOutVertex> IEdgeGremlinQuery<TElement, TOutVertex>.Property(string key, [AllowNull] object value) => Property(key, value);

        IEdgeGremlinQuery<TElement, TOutVertex> IEdgeGremlinQuery<TElement, TOutVertex>.Where(Expression<Func<TElement, bool>> predicate) => Where(predicate);
        IEdgeGremlinQuery<TElement, TOutVertex> IEdgeGremlinQuery<TElement, TOutVertex>.Where<TProjection>(Expression<Func<TElement, TProjection>> projection, Func<IGremlinQuery<TProjection>, IGremlinQuery> propertyTraversal) => Where(projection, propertyTraversal);


        IEdgeGremlinQuery<TElement, TOutVertex, TInVertex> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Update(TElement element) => AddOrUpdate(element, false, false);

        IEdgeGremlinQuery<TTarget, TOutVertex, TInVertex> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.OfType<TTarget>() => OfType<TTarget>(Environment.Model.EdgesModel);

        IEdgeGremlinQuery<TElement, TOutVertex, TInVertex> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Property<TProjectedValue>(Expression<Func<TElement, TProjectedValue>> projection, [AllowNull] TProjectedValue value) => Property(projection, value);



        IEdgeGremlinQuery<TElement, TOutVertex, TInVertex> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Property(string key, [AllowNull] object value) => Property(key, value);

        IEdgeGremlinQuery<TElement, TOutVertex, TInVertex> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Where(Expression<Func<TElement, bool>> predicate) => Where(predicate);
        IEdgeGremlinQuery<TElement, TOutVertex, TInVertex> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Where<TProjection>(Expression<Func<TElement, TProjection>> projection, Func<IGremlinQuery<TProjection>, IGremlinQuery> propertyTraversal) => Where(projection, propertyTraversal);


        IInEdgeGremlinQuery<TElement, TInVertex> IInEdgeGremlinQuery<TElement, TInVertex>.Update(TElement element) => AddOrUpdate(element, false, false);

        IInEdgeGremlinQuery<TTarget, TInVertex> IInEdgeGremlinQuery<TElement, TInVertex>.OfType<TTarget>() => OfType<TTarget>(Environment.Model.EdgesModel);

        IInEdgeGremlinQuery<TElement, TInVertex> IInEdgeGremlinQuery<TElement, TInVertex>.Property<TProjectedValue>(Expression<Func<TElement, TProjectedValue>> projection, [AllowNull] TProjectedValue value) => Property(projection, value);



        IInEdgeGremlinQuery<TElement, TInVertex> IInEdgeGremlinQuery<TElement, TInVertex>.Property(string key, [AllowNull] object value) => Property(key, value);

        IInEdgeGremlinQuery<TElement, TInVertex> IInEdgeGremlinQuery<TElement, TInVertex>.Where(Expression<Func<TElement, bool>> predicate) => Where(predicate);
        IInEdgeGremlinQuery<TElement, TInVertex> IInEdgeGremlinQuery<TElement, TInVertex>.Where<TProjection>(Expression<Func<TElement, TProjection>> projection, Func<IGremlinQuery<TProjection>, IGremlinQuery> propertyTraversal) => Where(projection, propertyTraversal);


        IOutEdgeGremlinQuery<TElement, TOutVertex> IOutEdgeGremlinQuery<TElement, TOutVertex>.Update(TElement element) => AddOrUpdate(element, false, false);

        IOutEdgeGremlinQuery<TTarget, TOutVertex> IOutEdgeGremlinQuery<TElement, TOutVertex>.OfType<TTarget>() => OfType<TTarget>(Environment.Model.EdgesModel);

        IOutEdgeGremlinQuery<TElement, TOutVertex> IOutEdgeGremlinQuery<TElement, TOutVertex>.Property<TProjectedValue>(Expression<Func<TElement, TProjectedValue>> projection, [AllowNull] TProjectedValue value) => Property(projection, value);



        IOutEdgeGremlinQuery<TElement, TOutVertex> IOutEdgeGremlinQuery<TElement, TOutVertex>.Property(string key, [AllowNull] object value) => Property(key, value);

        IOutEdgeGremlinQuery<TElement, TOutVertex> IOutEdgeGremlinQuery<TElement, TOutVertex>.Where(Expression<Func<TElement, bool>> predicate) => Where(predicate);
        IOutEdgeGremlinQuery<TElement, TOutVertex> IOutEdgeGremlinQuery<TElement, TOutVertex>.Where<TProjection>(Expression<Func<TElement, TProjection>> projection, Func<IGremlinQuery<TProjection>, IGremlinQuery> propertyTraversal) => Where(projection, propertyTraversal);


        IVertexPropertyGremlinQuery<TElement, TPropertyValue> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Property(string key, [AllowNull] object value) => Property(key, value);

        IVertexPropertyGremlinQuery<TElement, TPropertyValue> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Where(Expression<Func<TElement, bool>> predicate) => Where(predicate);
        IVertexPropertyGremlinQuery<TElement, TPropertyValue> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Where<TProjection>(Expression<Func<TElement, TProjection>> projection, Func<IGremlinQuery<TProjection>, IGremlinQuery> propertyTraversal) => Where(projection, propertyTraversal);


        IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta> IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Property(string key, [AllowNull] object value) => Property(key, value);

        IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta> IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Where(Expression<Func<TElement, bool>> predicate) => Where(predicate);
        IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta> IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Where<TProjection>(Expression<Func<TElement, TProjection>> projection, Func<IGremlinQuery<TProjection>, IGremlinQuery> propertyTraversal) => Where(projection, propertyTraversal);



        IGremlinQuery<TResult> IGremlinQuery<TElement>.Cast<TResult>() => Cast<TResult>();
        IGremlinQuery<TElement> IGremlinQuery<TElement>.Coin(double probability) => Coin(probability);

        TTargetQuery IGremlinQuery<TElement>.Aggregate<TTargetQuery>(Func<IGremlinQuery<TElement>, StepLabel<TElement[]>, TTargetQuery> continuation) => Aggregate(continuation);
        TTargetQuery IGremlinQuery<TElement>.As<TTargetQuery>(Func<IGremlinQuery<TElement>, StepLabel<IGremlinQuery<TElement>, TElement>, TTargetQuery> continuation) => As(continuation);

        IArrayGremlinQuery<TElement[], IGremlinQuery<TElement>> IGremlinQuery<TElement>.Fold() => Fold<IGremlinQuery<TElement>>();
        IValueGremlinQuery<TResult> IValueGremlinQuery<TElement>.Cast<TResult>() => Cast<TResult>();
        IValueGremlinQuery<TElement> IValueGremlinQuery<TElement>.Coin(double probability) => Coin(probability);

        TTargetQuery IValueGremlinQuery<TElement>.Aggregate<TTargetQuery>(Func<IValueGremlinQuery<TElement>, StepLabel<TElement[]>, TTargetQuery> continuation) => Aggregate(continuation);
        TTargetQuery IValueGremlinQuery<TElement>.As<TTargetQuery>(Func<IValueGremlinQuery<TElement>, StepLabel<IValueGremlinQuery<TElement>, TElement>, TTargetQuery> continuation) => As(continuation);

        IArrayGremlinQuery<TElement[], IValueGremlinQuery<TElement>> IValueGremlinQuery<TElement>.Fold() => Fold<IValueGremlinQuery<TElement>>();
        IArrayGremlinQuery<TResult, TFoldedQuery> IArrayGremlinQuery<TElement, TFoldedQuery>.Cast<TResult>() => Cast<TResult>();
        IArrayGremlinQuery<TElement, TFoldedQuery> IArrayGremlinQuery<TElement, TFoldedQuery>.Coin(double probability) => Coin(probability);

        TTargetQuery IArrayGremlinQuery<TElement, TFoldedQuery>.Aggregate<TTargetQuery>(Func<IArrayGremlinQuery<TElement, TFoldedQuery>, StepLabel<TElement[]>, TTargetQuery> continuation) => Aggregate(continuation);
        TTargetQuery IArrayGremlinQuery<TElement, TFoldedQuery>.As<TTargetQuery>(Func<IArrayGremlinQuery<TElement, TFoldedQuery>, StepLabel<IArrayGremlinQuery<TElement, TFoldedQuery>, TElement>, TTargetQuery> continuation) => As(continuation);

        IArrayGremlinQuery<TElement[], IArrayGremlinQuery<TElement, TFoldedQuery>> IArrayGremlinQuery<TElement, TFoldedQuery>.Fold() => Fold<IArrayGremlinQuery<TElement, TFoldedQuery>>();
        IElementGremlinQuery<TResult> IElementGremlinQuery<TElement>.Cast<TResult>() => Cast<TResult>();
        IElementGremlinQuery<TElement> IElementGremlinQuery<TElement>.Coin(double probability) => Coin(probability);

        TTargetQuery IElementGremlinQuery<TElement>.Aggregate<TTargetQuery>(Func<IElementGremlinQuery<TElement>, StepLabel<TElement[]>, TTargetQuery> continuation) => Aggregate(continuation);
        TTargetQuery IElementGremlinQuery<TElement>.As<TTargetQuery>(Func<IElementGremlinQuery<TElement>, StepLabel<IElementGremlinQuery<TElement>, TElement>, TTargetQuery> continuation) => As(continuation);

        IArrayGremlinQuery<TElement[], IElementGremlinQuery<TElement>> IElementGremlinQuery<TElement>.Fold() => Fold<IElementGremlinQuery<TElement>>();
        IVertexGremlinQuery<TResult> IVertexGremlinQuery<TElement>.Cast<TResult>() => Cast<TResult>();
        IVertexGremlinQuery<TElement> IVertexGremlinQuery<TElement>.Coin(double probability) => Coin(probability);

        TTargetQuery IVertexGremlinQuery<TElement>.Aggregate<TTargetQuery>(Func<IVertexGremlinQuery<TElement>, StepLabel<TElement[]>, TTargetQuery> continuation) => Aggregate(continuation);
        TTargetQuery IVertexGremlinQuery<TElement>.As<TTargetQuery>(Func<IVertexGremlinQuery<TElement>, StepLabel<IVertexGremlinQuery<TElement>, TElement>, TTargetQuery> continuation) => As(continuation);

        IArrayGremlinQuery<TElement[], IVertexGremlinQuery<TElement>> IVertexGremlinQuery<TElement>.Fold() => Fold<IVertexGremlinQuery<TElement>>();
        IEdgeGremlinQuery<TResult> IEdgeGremlinQuery<TElement>.Cast<TResult>() => Cast<TResult>();
        IEdgeGremlinQuery<TElement> IEdgeGremlinQuery<TElement>.Coin(double probability) => Coin(probability);

        TTargetQuery IEdgeGremlinQuery<TElement>.Aggregate<TTargetQuery>(Func<IEdgeGremlinQuery<TElement>, StepLabel<TElement[]>, TTargetQuery> continuation) => Aggregate(continuation);
        TTargetQuery IEdgeGremlinQuery<TElement>.As<TTargetQuery>(Func<IEdgeGremlinQuery<TElement>, StepLabel<IEdgeGremlinQuery<TElement>, TElement>, TTargetQuery> continuation) => As(continuation);

        IArrayGremlinQuery<TElement[], IEdgeGremlinQuery<TElement>> IEdgeGremlinQuery<TElement>.Fold() => Fold<IEdgeGremlinQuery<TElement>>();
        IEdgeGremlinQuery<TResult, TOutVertex> IEdgeGremlinQuery<TElement, TOutVertex>.Cast<TResult>() => Cast<TResult>();
        IEdgeGremlinQuery<TElement, TOutVertex> IEdgeGremlinQuery<TElement, TOutVertex>.Coin(double probability) => Coin(probability);

        TTargetQuery IEdgeGremlinQuery<TElement, TOutVertex>.Aggregate<TTargetQuery>(Func<IEdgeGremlinQuery<TElement, TOutVertex>, StepLabel<TElement[]>, TTargetQuery> continuation) => Aggregate(continuation);
        TTargetQuery IEdgeGremlinQuery<TElement, TOutVertex>.As<TTargetQuery>(Func<IEdgeGremlinQuery<TElement, TOutVertex>, StepLabel<IEdgeGremlinQuery<TElement, TOutVertex>, TElement>, TTargetQuery> continuation) => As(continuation);

        IArrayGremlinQuery<TElement[], IEdgeGremlinQuery<TElement, TOutVertex>> IEdgeGremlinQuery<TElement, TOutVertex>.Fold() => Fold<IEdgeGremlinQuery<TElement, TOutVertex>>();
        IEdgeGremlinQuery<TResult, TOutVertex, TInVertex> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Cast<TResult>() => Cast<TResult>();
        IEdgeGremlinQuery<TElement, TOutVertex, TInVertex> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Coin(double probability) => Coin(probability);

        TTargetQuery IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Aggregate<TTargetQuery>(Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, StepLabel<TElement[]>, TTargetQuery> continuation) => Aggregate(continuation);
        TTargetQuery IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.As<TTargetQuery>(Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, StepLabel<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, TElement>, TTargetQuery> continuation) => As(continuation);

        IArrayGremlinQuery<TElement[], IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Fold() => Fold<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>>();
        IInEdgeGremlinQuery<TResult, TInVertex> IInEdgeGremlinQuery<TElement, TInVertex>.Cast<TResult>() => Cast<TResult>();
        IInEdgeGremlinQuery<TElement, TInVertex> IInEdgeGremlinQuery<TElement, TInVertex>.Coin(double probability) => Coin(probability);

        TTargetQuery IInEdgeGremlinQuery<TElement, TInVertex>.Aggregate<TTargetQuery>(Func<IInEdgeGremlinQuery<TElement, TInVertex>, StepLabel<TElement[]>, TTargetQuery> continuation) => Aggregate(continuation);
        TTargetQuery IInEdgeGremlinQuery<TElement, TInVertex>.As<TTargetQuery>(Func<IInEdgeGremlinQuery<TElement, TInVertex>, StepLabel<IInEdgeGremlinQuery<TElement, TInVertex>, TElement>, TTargetQuery> continuation) => As(continuation);

        IArrayGremlinQuery<TElement[], IInEdgeGremlinQuery<TElement, TInVertex>> IInEdgeGremlinQuery<TElement, TInVertex>.Fold() => Fold<IInEdgeGremlinQuery<TElement, TInVertex>>();
        IOutEdgeGremlinQuery<TResult, TOutVertex> IOutEdgeGremlinQuery<TElement, TOutVertex>.Cast<TResult>() => Cast<TResult>();
        IOutEdgeGremlinQuery<TElement, TOutVertex> IOutEdgeGremlinQuery<TElement, TOutVertex>.Coin(double probability) => Coin(probability);

        TTargetQuery IOutEdgeGremlinQuery<TElement, TOutVertex>.Aggregate<TTargetQuery>(Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, StepLabel<TElement[]>, TTargetQuery> continuation) => Aggregate(continuation);
        TTargetQuery IOutEdgeGremlinQuery<TElement, TOutVertex>.As<TTargetQuery>(Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, StepLabel<IOutEdgeGremlinQuery<TElement, TOutVertex>, TElement>, TTargetQuery> continuation) => As(continuation);

        IArrayGremlinQuery<TElement[], IOutEdgeGremlinQuery<TElement, TOutVertex>> IOutEdgeGremlinQuery<TElement, TOutVertex>.Fold() => Fold<IOutEdgeGremlinQuery<TElement, TOutVertex>>();
        IVertexPropertyGremlinQuery<TResult, TPropertyValue> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Cast<TResult>() => Cast<TResult>();
        IVertexPropertyGremlinQuery<TElement, TPropertyValue> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Coin(double probability) => Coin(probability);

        TTargetQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Aggregate<TTargetQuery>(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, StepLabel<TElement[]>, TTargetQuery> continuation) => Aggregate(continuation);
        TTargetQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue>.As<TTargetQuery>(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, StepLabel<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, TElement>, TTargetQuery> continuation) => As(continuation);

        IArrayGremlinQuery<TElement[], IVertexPropertyGremlinQuery<TElement, TPropertyValue>> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Fold() => Fold<IVertexPropertyGremlinQuery<TElement, TPropertyValue>>();
        IVertexPropertyGremlinQuery<TResult, TPropertyValue, TMeta> IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Cast<TResult>() => Cast<TResult>();
        IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta> IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Coin(double probability) => Coin(probability);

        TTargetQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Aggregate<TTargetQuery>(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, StepLabel<TElement[]>, TTargetQuery> continuation) => Aggregate(continuation);
        TTargetQuery IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.As<TTargetQuery>(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, StepLabel<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, TElement>, TTargetQuery> continuation) => As(continuation);

        IArrayGremlinQuery<TElement[], IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>> IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Fold() => Fold<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>>();
        IPropertyGremlinQuery<TResult> IPropertyGremlinQuery<TElement>.Cast<TResult>() => Cast<TResult>();
        IPropertyGremlinQuery<TElement> IPropertyGremlinQuery<TElement>.Coin(double probability) => Coin(probability);

        TTargetQuery IPropertyGremlinQuery<TElement>.Aggregate<TTargetQuery>(Func<IPropertyGremlinQuery<TElement>, StepLabel<TElement[]>, TTargetQuery> continuation) => Aggregate(continuation);
        TTargetQuery IPropertyGremlinQuery<TElement>.As<TTargetQuery>(Func<IPropertyGremlinQuery<TElement>, StepLabel<IPropertyGremlinQuery<TElement>, TElement>, TTargetQuery> continuation) => As(continuation);

        IArrayGremlinQuery<TElement[], IPropertyGremlinQuery<TElement>> IPropertyGremlinQuery<TElement>.Fold() => Fold<IPropertyGremlinQuery<TElement>>();
        IOrderedGremlinQuery<TResult> IOrderedGremlinQuery<TElement>.Cast<TResult>() => Cast<TResult>();
        IOrderedGremlinQuery<TElement> IOrderedGremlinQuery<TElement>.Coin(double probability) => Coin(probability);

        TTargetQuery IOrderedGremlinQuery<TElement>.Aggregate<TTargetQuery>(Func<IOrderedGremlinQuery<TElement>, StepLabel<TElement[]>, TTargetQuery> continuation) => Aggregate(continuation);
        TTargetQuery IOrderedGremlinQuery<TElement>.As<TTargetQuery>(Func<IOrderedGremlinQuery<TElement>, StepLabel<IOrderedGremlinQuery<TElement>, TElement>, TTargetQuery> continuation) => As(continuation);

        IArrayGremlinQuery<TElement[], IGremlinQuery<TElement>> IOrderedGremlinQuery<TElement>.Fold() => Fold<IGremlinQuery<TElement>>();
        IOrderedValueGremlinQuery<TResult> IOrderedValueGremlinQuery<TElement>.Cast<TResult>() => Cast<TResult>();
        IOrderedValueGremlinQuery<TElement> IOrderedValueGremlinQuery<TElement>.Coin(double probability) => Coin(probability);

        TTargetQuery IOrderedValueGremlinQuery<TElement>.Aggregate<TTargetQuery>(Func<IOrderedValueGremlinQuery<TElement>, StepLabel<TElement[]>, TTargetQuery> continuation) => Aggregate(continuation);
        TTargetQuery IOrderedValueGremlinQuery<TElement>.As<TTargetQuery>(Func<IOrderedValueGremlinQuery<TElement>, StepLabel<IOrderedValueGremlinQuery<TElement>, TElement>, TTargetQuery> continuation) => As(continuation);

        IArrayGremlinQuery<TElement[], IValueGremlinQuery<TElement>> IOrderedValueGremlinQuery<TElement>.Fold() => Fold<IValueGremlinQuery<TElement>>();
        IOrderedArrayGremlinQuery<TResult, TFoldedQuery> IOrderedArrayGremlinQuery<TElement, TFoldedQuery>.Cast<TResult>() => Cast<TResult>();
        IOrderedArrayGremlinQuery<TElement, TFoldedQuery> IOrderedArrayGremlinQuery<TElement, TFoldedQuery>.Coin(double probability) => Coin(probability);

        TTargetQuery IOrderedArrayGremlinQuery<TElement, TFoldedQuery>.Aggregate<TTargetQuery>(Func<IOrderedArrayGremlinQuery<TElement, TFoldedQuery>, StepLabel<TElement[]>, TTargetQuery> continuation) => Aggregate(continuation);
        TTargetQuery IOrderedArrayGremlinQuery<TElement, TFoldedQuery>.As<TTargetQuery>(Func<IOrderedArrayGremlinQuery<TElement, TFoldedQuery>, StepLabel<IOrderedArrayGremlinQuery<TElement, TFoldedQuery>, TElement>, TTargetQuery> continuation) => As(continuation);

        IArrayGremlinQuery<TElement[], IArrayGremlinQuery<TElement, TFoldedQuery>> IOrderedArrayGremlinQuery<TElement, TFoldedQuery>.Fold() => Fold<IArrayGremlinQuery<TElement, TFoldedQuery>>();
        IOrderedElementGremlinQuery<TResult> IOrderedElementGremlinQuery<TElement>.Cast<TResult>() => Cast<TResult>();
        IOrderedElementGremlinQuery<TElement> IOrderedElementGremlinQuery<TElement>.Coin(double probability) => Coin(probability);

        TTargetQuery IOrderedElementGremlinQuery<TElement>.Aggregate<TTargetQuery>(Func<IOrderedElementGremlinQuery<TElement>, StepLabel<TElement[]>, TTargetQuery> continuation) => Aggregate(continuation);
        TTargetQuery IOrderedElementGremlinQuery<TElement>.As<TTargetQuery>(Func<IOrderedElementGremlinQuery<TElement>, StepLabel<IOrderedElementGremlinQuery<TElement>, TElement>, TTargetQuery> continuation) => As(continuation);

        IArrayGremlinQuery<TElement[], IElementGremlinQuery<TElement>> IOrderedElementGremlinQuery<TElement>.Fold() => Fold<IElementGremlinQuery<TElement>>();
        IOrderedVertexGremlinQuery<TResult> IOrderedVertexGremlinQuery<TElement>.Cast<TResult>() => Cast<TResult>();
        IOrderedVertexGremlinQuery<TElement> IOrderedVertexGremlinQuery<TElement>.Coin(double probability) => Coin(probability);

        TTargetQuery IOrderedVertexGremlinQuery<TElement>.Aggregate<TTargetQuery>(Func<IOrderedVertexGremlinQuery<TElement>, StepLabel<TElement[]>, TTargetQuery> continuation) => Aggregate(continuation);
        TTargetQuery IOrderedVertexGremlinQuery<TElement>.As<TTargetQuery>(Func<IOrderedVertexGremlinQuery<TElement>, StepLabel<IOrderedVertexGremlinQuery<TElement>, TElement>, TTargetQuery> continuation) => As(continuation);

        IArrayGremlinQuery<TElement[], IVertexGremlinQuery<TElement>> IOrderedVertexGremlinQuery<TElement>.Fold() => Fold<IVertexGremlinQuery<TElement>>();
        IOrderedEdgeGremlinQuery<TResult> IOrderedEdgeGremlinQuery<TElement>.Cast<TResult>() => Cast<TResult>();
        IOrderedEdgeGremlinQuery<TElement> IOrderedEdgeGremlinQuery<TElement>.Coin(double probability) => Coin(probability);

        TTargetQuery IOrderedEdgeGremlinQuery<TElement>.Aggregate<TTargetQuery>(Func<IOrderedEdgeGremlinQuery<TElement>, StepLabel<TElement[]>, TTargetQuery> continuation) => Aggregate(continuation);
        TTargetQuery IOrderedEdgeGremlinQuery<TElement>.As<TTargetQuery>(Func<IOrderedEdgeGremlinQuery<TElement>, StepLabel<IOrderedEdgeGremlinQuery<TElement>, TElement>, TTargetQuery> continuation) => As(continuation);

        IArrayGremlinQuery<TElement[], IEdgeGremlinQuery<TElement>> IOrderedEdgeGremlinQuery<TElement>.Fold() => Fold<IEdgeGremlinQuery<TElement>>();
        IOrderedEdgeGremlinQuery<TResult, TOutVertex> IOrderedEdgeGremlinQuery<TElement, TOutVertex>.Cast<TResult>() => Cast<TResult>();
        IOrderedEdgeGremlinQuery<TElement, TOutVertex> IOrderedEdgeGremlinQuery<TElement, TOutVertex>.Coin(double probability) => Coin(probability);

        TTargetQuery IOrderedEdgeGremlinQuery<TElement, TOutVertex>.Aggregate<TTargetQuery>(Func<IOrderedEdgeGremlinQuery<TElement, TOutVertex>, StepLabel<TElement[]>, TTargetQuery> continuation) => Aggregate(continuation);
        TTargetQuery IOrderedEdgeGremlinQuery<TElement, TOutVertex>.As<TTargetQuery>(Func<IOrderedEdgeGremlinQuery<TElement, TOutVertex>, StepLabel<IOrderedEdgeGremlinQuery<TElement, TOutVertex>, TElement>, TTargetQuery> continuation) => As(continuation);

        IArrayGremlinQuery<TElement[], IEdgeGremlinQuery<TElement, TOutVertex>> IOrderedEdgeGremlinQuery<TElement, TOutVertex>.Fold() => Fold<IEdgeGremlinQuery<TElement, TOutVertex>>();
        IOrderedEdgeGremlinQuery<TResult, TOutVertex, TInVertex> IOrderedEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Cast<TResult>() => Cast<TResult>();
        IOrderedEdgeGremlinQuery<TElement, TOutVertex, TInVertex> IOrderedEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Coin(double probability) => Coin(probability);

        TTargetQuery IOrderedEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Aggregate<TTargetQuery>(Func<IOrderedEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, StepLabel<TElement[]>, TTargetQuery> continuation) => Aggregate(continuation);
        TTargetQuery IOrderedEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.As<TTargetQuery>(Func<IOrderedEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, StepLabel<IOrderedEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, TElement>, TTargetQuery> continuation) => As(continuation);

        IArrayGremlinQuery<TElement[], IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>> IOrderedEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Fold() => Fold<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>>();
        IOrderedInEdgeGremlinQuery<TResult, TInVertex> IOrderedInEdgeGremlinQuery<TElement, TInVertex>.Cast<TResult>() => Cast<TResult>();
        IOrderedInEdgeGremlinQuery<TElement, TInVertex> IOrderedInEdgeGremlinQuery<TElement, TInVertex>.Coin(double probability) => Coin(probability);

        TTargetQuery IOrderedInEdgeGremlinQuery<TElement, TInVertex>.Aggregate<TTargetQuery>(Func<IOrderedInEdgeGremlinQuery<TElement, TInVertex>, StepLabel<TElement[]>, TTargetQuery> continuation) => Aggregate(continuation);
        TTargetQuery IOrderedInEdgeGremlinQuery<TElement, TInVertex>.As<TTargetQuery>(Func<IOrderedInEdgeGremlinQuery<TElement, TInVertex>, StepLabel<IOrderedInEdgeGremlinQuery<TElement, TInVertex>, TElement>, TTargetQuery> continuation) => As(continuation);

        IArrayGremlinQuery<TElement[], IInEdgeGremlinQuery<TElement, TInVertex>> IOrderedInEdgeGremlinQuery<TElement, TInVertex>.Fold() => Fold<IInEdgeGremlinQuery<TElement, TInVertex>>();
        IOrderedOutEdgeGremlinQuery<TResult, TOutVertex> IOrderedOutEdgeGremlinQuery<TElement, TOutVertex>.Cast<TResult>() => Cast<TResult>();
        IOrderedOutEdgeGremlinQuery<TElement, TOutVertex> IOrderedOutEdgeGremlinQuery<TElement, TOutVertex>.Coin(double probability) => Coin(probability);

        TTargetQuery IOrderedOutEdgeGremlinQuery<TElement, TOutVertex>.Aggregate<TTargetQuery>(Func<IOrderedOutEdgeGremlinQuery<TElement, TOutVertex>, StepLabel<TElement[]>, TTargetQuery> continuation) => Aggregate(continuation);
        TTargetQuery IOrderedOutEdgeGremlinQuery<TElement, TOutVertex>.As<TTargetQuery>(Func<IOrderedOutEdgeGremlinQuery<TElement, TOutVertex>, StepLabel<IOrderedOutEdgeGremlinQuery<TElement, TOutVertex>, TElement>, TTargetQuery> continuation) => As(continuation);

        IArrayGremlinQuery<TElement[], IOutEdgeGremlinQuery<TElement, TOutVertex>> IOrderedOutEdgeGremlinQuery<TElement, TOutVertex>.Fold() => Fold<IOutEdgeGremlinQuery<TElement, TOutVertex>>();
        IOrderedVertexPropertyGremlinQuery<TResult, TPropertyValue> IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue>.Cast<TResult>() => Cast<TResult>();
        IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue> IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue>.Coin(double probability) => Coin(probability);

        TTargetQuery IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue>.Aggregate<TTargetQuery>(Func<IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue>, StepLabel<TElement[]>, TTargetQuery> continuation) => Aggregate(continuation);
        TTargetQuery IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue>.As<TTargetQuery>(Func<IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue>, StepLabel<IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue>, TElement>, TTargetQuery> continuation) => As(continuation);

        IArrayGremlinQuery<TElement[], IVertexPropertyGremlinQuery<TElement, TPropertyValue>> IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue>.Fold() => Fold<IVertexPropertyGremlinQuery<TElement, TPropertyValue>>();
        IOrderedVertexPropertyGremlinQuery<TResult, TPropertyValue, TMeta> IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Cast<TResult>() => Cast<TResult>();
        IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta> IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Coin(double probability) => Coin(probability);

        TTargetQuery IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Aggregate<TTargetQuery>(Func<IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, StepLabel<TElement[]>, TTargetQuery> continuation) => Aggregate(continuation);
        TTargetQuery IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.As<TTargetQuery>(Func<IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, StepLabel<IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, TElement>, TTargetQuery> continuation) => As(continuation);

        IArrayGremlinQuery<TElement[], IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>> IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Fold() => Fold<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>>();
        IOrderedPropertyGremlinQuery<TResult> IOrderedPropertyGremlinQuery<TElement>.Cast<TResult>() => Cast<TResult>();
        IOrderedPropertyGremlinQuery<TElement> IOrderedPropertyGremlinQuery<TElement>.Coin(double probability) => Coin(probability);

        TTargetQuery IOrderedPropertyGremlinQuery<TElement>.Aggregate<TTargetQuery>(Func<IOrderedPropertyGremlinQuery<TElement>, StepLabel<TElement[]>, TTargetQuery> continuation) => Aggregate(continuation);
        TTargetQuery IOrderedPropertyGremlinQuery<TElement>.As<TTargetQuery>(Func<IOrderedPropertyGremlinQuery<TElement>, StepLabel<IOrderedPropertyGremlinQuery<TElement>, TElement>, TTargetQuery> continuation) => As(continuation);

        IArrayGremlinQuery<TElement[], IPropertyGremlinQuery<TElement>> IOrderedPropertyGremlinQuery<TElement>.Fold() => Fold<IPropertyGremlinQuery<TElement>>();

        IGremlinQuery IGremlinQuery.Where(Func<IGremlinQuery, IGremlinQuery> filterTraversal) => Where(filterTraversal);
        IElementGremlinQuery IElementGremlinQuery.Where(Func<IElementGremlinQuery, IGremlinQuery> filterTraversal) => Where(filterTraversal);
        IVertexGremlinQuery IVertexGremlinQuery.Where(Func<IVertexGremlinQuery, IGremlinQuery> filterTraversal) => Where(filterTraversal);
        IEdgeGremlinQuery IEdgeGremlinQuery.Where(Func<IEdgeGremlinQuery, IGremlinQuery> filterTraversal) => Where(filterTraversal);
        IGremlinQuery<TElement> IGremlinQuery<TElement>.Where(Func<IGremlinQuery<TElement>, IGremlinQuery> filterTraversal) => Where(filterTraversal);
        IValueGremlinQuery<TElement> IValueGremlinQuery<TElement>.Where(Func<IValueGremlinQuery<TElement>, IGremlinQuery> filterTraversal) => Where(filterTraversal);
        IArrayGremlinQuery<TElement, TFoldedQuery> IArrayGremlinQuery<TElement, TFoldedQuery>.Where(Func<IArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> filterTraversal) => Where(filterTraversal);
        IElementGremlinQuery<TElement> IElementGremlinQuery<TElement>.Where(Func<IElementGremlinQuery<TElement>, IGremlinQuery> filterTraversal) => Where(filterTraversal);
        IVertexGremlinQuery<TElement> IVertexGremlinQuery<TElement>.Where(Func<IVertexGremlinQuery<TElement>, IGremlinQuery> filterTraversal) => Where(filterTraversal);
        IEdgeGremlinQuery<TElement> IEdgeGremlinQuery<TElement>.Where(Func<IEdgeGremlinQuery<TElement>, IGremlinQuery> filterTraversal) => Where(filterTraversal);
        IEdgeGremlinQuery<TElement, TOutVertex> IEdgeGremlinQuery<TElement, TOutVertex>.Where(Func<IEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> filterTraversal) => Where(filterTraversal);
        IEdgeGremlinQuery<TElement, TOutVertex, TInVertex> IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Where(Func<IEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> filterTraversal) => Where(filterTraversal);
        IInEdgeGremlinQuery<TElement, TInVertex> IInEdgeGremlinQuery<TElement, TInVertex>.Where(Func<IInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> filterTraversal) => Where(filterTraversal);
        IOutEdgeGremlinQuery<TElement, TOutVertex> IOutEdgeGremlinQuery<TElement, TOutVertex>.Where(Func<IOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> filterTraversal) => Where(filterTraversal);
        IVertexPropertyGremlinQuery<TElement, TPropertyValue> IVertexPropertyGremlinQuery<TElement, TPropertyValue>.Where(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> filterTraversal) => Where(filterTraversal);
        IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta> IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Where(Func<IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> filterTraversal) => Where(filterTraversal);
        IPropertyGremlinQuery<TElement> IPropertyGremlinQuery<TElement>.Where(Func<IPropertyGremlinQuery<TElement>, IGremlinQuery> filterTraversal) => Where(filterTraversal);
        IGremlinQuery IOrderedGremlinQuery.Where(Func<IOrderedGremlinQuery, IGremlinQuery> filterTraversal) => Where(filterTraversal);
        IElementGremlinQuery IOrderedElementGremlinQuery.Where(Func<IOrderedElementGremlinQuery, IGremlinQuery> filterTraversal) => Where(filterTraversal);
        IVertexGremlinQuery IOrderedVertexGremlinQuery.Where(Func<IOrderedVertexGremlinQuery, IGremlinQuery> filterTraversal) => Where(filterTraversal);
        IEdgeGremlinQuery IOrderedEdgeGremlinQuery.Where(Func<IOrderedEdgeGremlinQuery, IGremlinQuery> filterTraversal) => Where(filterTraversal);
        IGremlinQuery<TElement> IOrderedGremlinQuery<TElement>.Where(Func<IOrderedGremlinQuery<TElement>, IGremlinQuery> filterTraversal) => Where(filterTraversal);
        IValueGremlinQuery<TElement> IOrderedValueGremlinQuery<TElement>.Where(Func<IOrderedValueGremlinQuery<TElement>, IGremlinQuery> filterTraversal) => Where(filterTraversal);
        IArrayGremlinQuery<TElement, TFoldedQuery> IOrderedArrayGremlinQuery<TElement, TFoldedQuery>.Where(Func<IOrderedArrayGremlinQuery<TElement, TFoldedQuery>, IGremlinQuery> filterTraversal) => Where(filterTraversal);
        IElementGremlinQuery<TElement> IOrderedElementGremlinQuery<TElement>.Where(Func<IOrderedElementGremlinQuery<TElement>, IGremlinQuery> filterTraversal) => Where(filterTraversal);
        IVertexGremlinQuery<TElement> IOrderedVertexGremlinQuery<TElement>.Where(Func<IOrderedVertexGremlinQuery<TElement>, IGremlinQuery> filterTraversal) => Where(filterTraversal);
        IEdgeGremlinQuery<TElement> IOrderedEdgeGremlinQuery<TElement>.Where(Func<IOrderedEdgeGremlinQuery<TElement>, IGremlinQuery> filterTraversal) => Where(filterTraversal);
        IEdgeGremlinQuery<TElement, TOutVertex> IOrderedEdgeGremlinQuery<TElement, TOutVertex>.Where(Func<IOrderedEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> filterTraversal) => Where(filterTraversal);
        IEdgeGremlinQuery<TElement, TOutVertex, TInVertex> IOrderedEdgeGremlinQuery<TElement, TOutVertex, TInVertex>.Where(Func<IOrderedEdgeGremlinQuery<TElement, TOutVertex, TInVertex>, IGremlinQuery> filterTraversal) => Where(filterTraversal);
        IInEdgeGremlinQuery<TElement, TInVertex> IOrderedInEdgeGremlinQuery<TElement, TInVertex>.Where(Func<IOrderedInEdgeGremlinQuery<TElement, TInVertex>, IGremlinQuery> filterTraversal) => Where(filterTraversal);
        IOutEdgeGremlinQuery<TElement, TOutVertex> IOrderedOutEdgeGremlinQuery<TElement, TOutVertex>.Where(Func<IOrderedOutEdgeGremlinQuery<TElement, TOutVertex>, IGremlinQuery> filterTraversal) => Where(filterTraversal);
        IVertexPropertyGremlinQuery<TElement, TPropertyValue> IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue>.Where(Func<IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue>, IGremlinQuery> filterTraversal) => Where(filterTraversal);
        IVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta> IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>.Where(Func<IOrderedVertexPropertyGremlinQuery<TElement, TPropertyValue, TMeta>, IGremlinQuery> filterTraversal) => Where(filterTraversal);
        IPropertyGremlinQuery<TElement> IOrderedPropertyGremlinQuery<TElement>.Where(Func<IOrderedPropertyGremlinQuery<TElement>, IGremlinQuery> filterTraversal) => Where(filterTraversal);
   }
}
#pragma warning restore CS0109 // Member does not hide an inherited member; new keyword is not required

